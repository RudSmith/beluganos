diff --git a/link.go b/link.go
index bbf117e..9b14c7b 100644
--- a/link.go
+++ b/link.go
@@ -745,6 +745,9 @@ func (iptun *Iptun) Attrs() *LinkAttrs {
 }
 
 func (iptun *Iptun) Type() string {
+	if iptun.Local.To4() == nil {
+		return "ip6tnl"
+	}
 	return "ipip"
 }
 
diff --git a/link_linux.go b/link_linux.go
index 5d82da0..853990e 100644
--- a/link_linux.go
+++ b/link_linux.go
@@ -1431,6 +1431,8 @@ func LinkDeserialize(hdr *unix.NlMsghdr, m []byte) (Link, error) {
 						link = &Gretap{}
 					case "ipip":
 						link = &Iptun{}
+					case "ip6tnl":
+						link = &Iptun{}
 					case "sit":
 						link = &Sittun{}
 					case "gre":
@@ -1472,6 +1474,8 @@ func LinkDeserialize(hdr *unix.NlMsghdr, m []byte) (Link, error) {
 						parseGretapData(link, data)
 					case "ipip":
 						parseIptunData(link, data)
+					case "ip6tnl":
+						parseIptunData(link, data)
 					case "sit":
 						parseSittunData(link, data)
 					case "gre":
@@ -2222,13 +2226,17 @@ func addIptunAttrs(iptun *Iptun, linkInfo *nl.RtAttr) {
 
 	data := linkInfo.AddRtAttr(nl.IFLA_INFO_DATA, nil)
 
-	ip := iptun.Local.To4()
-	if ip != nil {
+	if ip := iptun.Local; ip != nil {
+		if ip.To4() != nil {
+			ip = ip.To4()
+		}
 		data.AddRtAttr(nl.IFLA_IPTUN_LOCAL, []byte(ip))
 	}
 
-	ip = iptun.Remote.To4()
-	if ip != nil {
+	if ip := iptun.Remote; ip != nil {
+		if ip.To4() != nil {
+			ip = ip.To4()
+		}
 		data.AddRtAttr(nl.IFLA_IPTUN_REMOTE, []byte(ip))
 	}
 
@@ -2249,9 +2257,9 @@ func parseIptunData(link Link, data []syscall.NetlinkRouteAttr) {
 	for _, datum := range data {
 		switch datum.Attr.Type {
 		case nl.IFLA_IPTUN_LOCAL:
-			iptun.Local = net.IP(datum.Value[0:4])
+			iptun.Local = net.IP(datum.Value)
 		case nl.IFLA_IPTUN_REMOTE:
-			iptun.Remote = net.IP(datum.Value[0:4])
+			iptun.Remote = net.IP(datum.Value)
 		case nl.IFLA_IPTUN_TTL:
 			iptun.Ttl = uint8(datum.Value[0])
 		case nl.IFLA_IPTUN_TOS:
