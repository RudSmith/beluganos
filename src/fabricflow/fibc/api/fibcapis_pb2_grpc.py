# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import fibcapi_pb2 as fibcapi__pb2
import fibcapis_pb2 as fibcapis__pb2


class FIBCApApiStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Monitor = channel.unary_stream(
        '/fibcapi.FIBCApApi/Monitor',
        request_serializer=fibcapis__pb2.ApMonitorRequest.SerializeToString,
        response_deserializer=fibcapis__pb2.ApMonitorReply.FromString,
        )
    self.GetPortStats = channel.unary_stream(
        '/fibcapi.FIBCApApi/GetPortStats',
        request_serializer=fibcapis__pb2.ApGetPortStatsRequest.SerializeToString,
        response_deserializer=fibcapi__pb2.FFPortStats.FromString,
        )
    self.ModPortStats = channel.unary_unary(
        '/fibcapi.FIBCApApi/ModPortStats',
        request_serializer=fibcapis__pb2.ApModPortStatsRequest.SerializeToString,
        response_deserializer=fibcapis__pb2.ApModPortStatsReply.FromString,
        )
    self.GetPortEntries = channel.unary_stream(
        '/fibcapi.FIBCApApi/GetPortEntries',
        request_serializer=fibcapis__pb2.ApGetPortEntriesRequest.SerializeToString,
        response_deserializer=fibcapis__pb2.DbPortEntry.FromString,
        )
    self.GetIDEntries = channel.unary_stream(
        '/fibcapi.FIBCApApi/GetIDEntries',
        request_serializer=fibcapis__pb2.ApGetIdEntriesRequest.SerializeToString,
        response_deserializer=fibcapis__pb2.DbIdEntry.FromString,
        )
    self.GetDpEntries = channel.unary_stream(
        '/fibcapi.FIBCApApi/GetDpEntries',
        request_serializer=fibcapis__pb2.ApGetDpEntriesRequest.SerializeToString,
        response_deserializer=fibcapis__pb2.DbDpEntry.FromString,
        )
    self.AddPortEntry = channel.unary_unary(
        '/fibcapi.FIBCApApi/AddPortEntry',
        request_serializer=fibcapis__pb2.DbPortEntry.SerializeToString,
        response_deserializer=fibcapis__pb2.ApAddPortEntryReply.FromString,
        )
    self.AddIDEntry = channel.unary_unary(
        '/fibcapi.FIBCApApi/AddIDEntry',
        request_serializer=fibcapis__pb2.DbIdEntry.SerializeToString,
        response_deserializer=fibcapis__pb2.ApAddIdEntryReply.FromString,
        )
    self.DelPortEntry = channel.unary_unary(
        '/fibcapi.FIBCApApi/DelPortEntry',
        request_serializer=fibcapis__pb2.DbPortKey.SerializeToString,
        response_deserializer=fibcapis__pb2.ApDelPortEntryReply.FromString,
        )
    self.DelIDEntry = channel.unary_unary(
        '/fibcapi.FIBCApApi/DelIDEntry',
        request_serializer=fibcapis__pb2.DbIdEntry.SerializeToString,
        response_deserializer=fibcapis__pb2.ApDelIdEntryReply.FromString,
        )
    self.GetStats = channel.unary_stream(
        '/fibcapi.FIBCApApi/GetStats',
        request_serializer=fibcapis__pb2.ApGetStatsRequest.SerializeToString,
        response_deserializer=fibcapis__pb2.StatsEntry.FromString,
        )


class FIBCApApiServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Monitor(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetPortStats(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ModPortStats(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetPortEntries(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetIDEntries(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetDpEntries(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AddPortEntry(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AddIDEntry(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DelPortEntry(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DelIDEntry(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetStats(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FIBCApApiServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Monitor': grpc.unary_stream_rpc_method_handler(
          servicer.Monitor,
          request_deserializer=fibcapis__pb2.ApMonitorRequest.FromString,
          response_serializer=fibcapis__pb2.ApMonitorReply.SerializeToString,
      ),
      'GetPortStats': grpc.unary_stream_rpc_method_handler(
          servicer.GetPortStats,
          request_deserializer=fibcapis__pb2.ApGetPortStatsRequest.FromString,
          response_serializer=fibcapi__pb2.FFPortStats.SerializeToString,
      ),
      'ModPortStats': grpc.unary_unary_rpc_method_handler(
          servicer.ModPortStats,
          request_deserializer=fibcapis__pb2.ApModPortStatsRequest.FromString,
          response_serializer=fibcapis__pb2.ApModPortStatsReply.SerializeToString,
      ),
      'GetPortEntries': grpc.unary_stream_rpc_method_handler(
          servicer.GetPortEntries,
          request_deserializer=fibcapis__pb2.ApGetPortEntriesRequest.FromString,
          response_serializer=fibcapis__pb2.DbPortEntry.SerializeToString,
      ),
      'GetIDEntries': grpc.unary_stream_rpc_method_handler(
          servicer.GetIDEntries,
          request_deserializer=fibcapis__pb2.ApGetIdEntriesRequest.FromString,
          response_serializer=fibcapis__pb2.DbIdEntry.SerializeToString,
      ),
      'GetDpEntries': grpc.unary_stream_rpc_method_handler(
          servicer.GetDpEntries,
          request_deserializer=fibcapis__pb2.ApGetDpEntriesRequest.FromString,
          response_serializer=fibcapis__pb2.DbDpEntry.SerializeToString,
      ),
      'AddPortEntry': grpc.unary_unary_rpc_method_handler(
          servicer.AddPortEntry,
          request_deserializer=fibcapis__pb2.DbPortEntry.FromString,
          response_serializer=fibcapis__pb2.ApAddPortEntryReply.SerializeToString,
      ),
      'AddIDEntry': grpc.unary_unary_rpc_method_handler(
          servicer.AddIDEntry,
          request_deserializer=fibcapis__pb2.DbIdEntry.FromString,
          response_serializer=fibcapis__pb2.ApAddIdEntryReply.SerializeToString,
      ),
      'DelPortEntry': grpc.unary_unary_rpc_method_handler(
          servicer.DelPortEntry,
          request_deserializer=fibcapis__pb2.DbPortKey.FromString,
          response_serializer=fibcapis__pb2.ApDelPortEntryReply.SerializeToString,
      ),
      'DelIDEntry': grpc.unary_unary_rpc_method_handler(
          servicer.DelIDEntry,
          request_deserializer=fibcapis__pb2.DbIdEntry.FromString,
          response_serializer=fibcapis__pb2.ApDelIdEntryReply.SerializeToString,
      ),
      'GetStats': grpc.unary_stream_rpc_method_handler(
          servicer.GetStats,
          request_deserializer=fibcapis__pb2.ApGetStatsRequest.FromString,
          response_serializer=fibcapis__pb2.StatsEntry.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'fibcapi.FIBCApApi', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class FIBCVmApiStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SendHello = channel.unary_unary(
        '/fibcapi.FIBCVmApi/SendHello',
        request_serializer=fibcapi__pb2.Hello.SerializeToString,
        response_deserializer=fibcapis__pb2.HelloReply.FromString,
        )
    self.SendPortConfig = channel.unary_unary(
        '/fibcapi.FIBCVmApi/SendPortConfig',
        request_serializer=fibcapi__pb2.PortConfig.SerializeToString,
        response_deserializer=fibcapis__pb2.PortConfigReply.FromString,
        )
    self.SendFlowMod = channel.unary_unary(
        '/fibcapi.FIBCVmApi/SendFlowMod',
        request_serializer=fibcapi__pb2.FlowMod.SerializeToString,
        response_deserializer=fibcapis__pb2.FlowModReply.FromString,
        )
    self.SendGroupMod = channel.unary_unary(
        '/fibcapi.FIBCVmApi/SendGroupMod',
        request_serializer=fibcapi__pb2.GroupMod.SerializeToString,
        response_deserializer=fibcapis__pb2.GroupModReply.FromString,
        )
    self.Monitor = channel.unary_stream(
        '/fibcapi.FIBCVmApi/Monitor',
        request_serializer=fibcapis__pb2.VmMonitorRequest.SerializeToString,
        response_deserializer=fibcapis__pb2.VmMonitorReply.FromString,
        )


class FIBCVmApiServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SendHello(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendPortConfig(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendFlowMod(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendGroupMod(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Monitor(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FIBCVmApiServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SendHello': grpc.unary_unary_rpc_method_handler(
          servicer.SendHello,
          request_deserializer=fibcapi__pb2.Hello.FromString,
          response_serializer=fibcapis__pb2.HelloReply.SerializeToString,
      ),
      'SendPortConfig': grpc.unary_unary_rpc_method_handler(
          servicer.SendPortConfig,
          request_deserializer=fibcapi__pb2.PortConfig.FromString,
          response_serializer=fibcapis__pb2.PortConfigReply.SerializeToString,
      ),
      'SendFlowMod': grpc.unary_unary_rpc_method_handler(
          servicer.SendFlowMod,
          request_deserializer=fibcapi__pb2.FlowMod.FromString,
          response_serializer=fibcapis__pb2.FlowModReply.SerializeToString,
      ),
      'SendGroupMod': grpc.unary_unary_rpc_method_handler(
          servicer.SendGroupMod,
          request_deserializer=fibcapi__pb2.GroupMod.FromString,
          response_serializer=fibcapis__pb2.GroupModReply.SerializeToString,
      ),
      'Monitor': grpc.unary_stream_rpc_method_handler(
          servicer.Monitor,
          request_deserializer=fibcapis__pb2.VmMonitorRequest.FromString,
          response_serializer=fibcapis__pb2.VmMonitorReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'fibcapi.FIBCVmApi', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class FIBCVsApiStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SendHello = channel.unary_unary(
        '/fibcapi.FIBCVsApi/SendHello',
        request_serializer=fibcapi__pb2.FFHello.SerializeToString,
        response_deserializer=fibcapis__pb2.FFHelloReply.FromString,
        )
    self.SendFFPacket = channel.unary_unary(
        '/fibcapi.FIBCVsApi/SendFFPacket',
        request_serializer=fibcapi__pb2.FFPacket.SerializeToString,
        response_deserializer=fibcapis__pb2.FFPacketReply.FromString,
        )
    self.SendPacketIn = channel.unary_unary(
        '/fibcapi.FIBCVsApi/SendPacketIn',
        request_serializer=fibcapi__pb2.FFPacketIn.SerializeToString,
        response_deserializer=fibcapis__pb2.FFPacketInReply.FromString,
        )
    self.Monitor = channel.unary_stream(
        '/fibcapi.FIBCVsApi/Monitor',
        request_serializer=fibcapis__pb2.VsMonitorRequest.SerializeToString,
        response_deserializer=fibcapis__pb2.VsMonitorReply.FromString,
        )


class FIBCVsApiServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SendHello(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendFFPacket(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendPacketIn(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Monitor(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FIBCVsApiServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SendHello': grpc.unary_unary_rpc_method_handler(
          servicer.SendHello,
          request_deserializer=fibcapi__pb2.FFHello.FromString,
          response_serializer=fibcapis__pb2.FFHelloReply.SerializeToString,
      ),
      'SendFFPacket': grpc.unary_unary_rpc_method_handler(
          servicer.SendFFPacket,
          request_deserializer=fibcapi__pb2.FFPacket.FromString,
          response_serializer=fibcapis__pb2.FFPacketReply.SerializeToString,
      ),
      'SendPacketIn': grpc.unary_unary_rpc_method_handler(
          servicer.SendPacketIn,
          request_deserializer=fibcapi__pb2.FFPacketIn.FromString,
          response_serializer=fibcapis__pb2.FFPacketInReply.SerializeToString,
      ),
      'Monitor': grpc.unary_stream_rpc_method_handler(
          servicer.Monitor,
          request_deserializer=fibcapis__pb2.VsMonitorRequest.FromString,
          response_serializer=fibcapis__pb2.VsMonitorReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'fibcapi.FIBCVsApi', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class FIBCDpApiStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SendHello = channel.unary_unary(
        '/fibcapi.FIBCDpApi/SendHello',
        request_serializer=fibcapi__pb2.FFHello.SerializeToString,
        response_deserializer=fibcapis__pb2.FFHelloReply.FromString,
        )
    self.SendPacketIn = channel.unary_unary(
        '/fibcapi.FIBCDpApi/SendPacketIn',
        request_serializer=fibcapi__pb2.FFPacketIn.SerializeToString,
        response_deserializer=fibcapis__pb2.FFPacketInReply.FromString,
        )
    self.SendPortStatus = channel.unary_unary(
        '/fibcapi.FIBCDpApi/SendPortStatus',
        request_serializer=fibcapi__pb2.FFPortStatus.SerializeToString,
        response_deserializer=fibcapis__pb2.FFPortStatusReply.FromString,
        )
    self.SendL2AddrStatus = channel.unary_unary(
        '/fibcapi.FIBCDpApi/SendL2AddrStatus',
        request_serializer=fibcapi__pb2.FFL2AddrStatus.SerializeToString,
        response_deserializer=fibcapis__pb2.L2AddrStatusReply.FromString,
        )
    self.SendMultipartReply = channel.unary_unary(
        '/fibcapi.FIBCDpApi/SendMultipartReply',
        request_serializer=fibcapis__pb2.DpMultipartReply.SerializeToString,
        response_deserializer=fibcapis__pb2.DpMultipartReplyAck.FromString,
        )
    self.Monitor = channel.unary_stream(
        '/fibcapi.FIBCDpApi/Monitor',
        request_serializer=fibcapis__pb2.DpMonitorRequest.SerializeToString,
        response_deserializer=fibcapis__pb2.DpMonitorReply.FromString,
        )


class FIBCDpApiServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SendHello(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendPacketIn(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendPortStatus(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendL2AddrStatus(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendMultipartReply(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Monitor(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FIBCDpApiServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SendHello': grpc.unary_unary_rpc_method_handler(
          servicer.SendHello,
          request_deserializer=fibcapi__pb2.FFHello.FromString,
          response_serializer=fibcapis__pb2.FFHelloReply.SerializeToString,
      ),
      'SendPacketIn': grpc.unary_unary_rpc_method_handler(
          servicer.SendPacketIn,
          request_deserializer=fibcapi__pb2.FFPacketIn.FromString,
          response_serializer=fibcapis__pb2.FFPacketInReply.SerializeToString,
      ),
      'SendPortStatus': grpc.unary_unary_rpc_method_handler(
          servicer.SendPortStatus,
          request_deserializer=fibcapi__pb2.FFPortStatus.FromString,
          response_serializer=fibcapis__pb2.FFPortStatusReply.SerializeToString,
      ),
      'SendL2AddrStatus': grpc.unary_unary_rpc_method_handler(
          servicer.SendL2AddrStatus,
          request_deserializer=fibcapi__pb2.FFL2AddrStatus.FromString,
          response_serializer=fibcapis__pb2.L2AddrStatusReply.SerializeToString,
      ),
      'SendMultipartReply': grpc.unary_unary_rpc_method_handler(
          servicer.SendMultipartReply,
          request_deserializer=fibcapis__pb2.DpMultipartReply.FromString,
          response_serializer=fibcapis__pb2.DpMultipartReplyAck.SerializeToString,
      ),
      'Monitor': grpc.unary_stream_rpc_method_handler(
          servicer.Monitor,
          request_deserializer=fibcapis__pb2.DpMonitorRequest.FromString,
          response_serializer=fibcapis__pb2.DpMonitorReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'fibcapi.FIBCDpApi', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
