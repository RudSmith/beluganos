// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nlaapi.proto

package nlaapi

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//
// Message Source
//
type NlMsgSrc int32

const (
	NlMsgSrc_NOP NlMsgSrc = 0
	NlMsgSrc_KNL NlMsgSrc = 1
	NlMsgSrc_API NlMsgSrc = 2
)

var NlMsgSrc_name = map[int32]string{
	0: "NOP",
	1: "KNL",
	2: "API",
}

var NlMsgSrc_value = map[string]int32{
	"NOP": 0,
	"KNL": 1,
	"API": 2,
}

func (x NlMsgSrc) String() string {
	return proto.EnumName(NlMsgSrc_name, int32(x))
}

func (NlMsgSrc) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{0}
}

type LinkOperState int32

const (
	LinkOperState_OperUnknown        LinkOperState = 0
	LinkOperState_OperNotPresent     LinkOperState = 1
	LinkOperState_OperDown           LinkOperState = 2
	LinkOperState_OperLowerLayerDown LinkOperState = 3
	LinkOperState_OperTesting        LinkOperState = 4
	LinkOperState_OperDormant        LinkOperState = 5
	LinkOperState_OperUp             LinkOperState = 6
)

var LinkOperState_name = map[int32]string{
	0: "OperUnknown",
	1: "OperNotPresent",
	2: "OperDown",
	3: "OperLowerLayerDown",
	4: "OperTesting",
	5: "OperDormant",
	6: "OperUp",
}

var LinkOperState_value = map[string]int32{
	"OperUnknown":        0,
	"OperNotPresent":     1,
	"OperDown":           2,
	"OperLowerLayerDown": 3,
	"OperTesting":        4,
	"OperDormant":        5,
	"OperUp":             6,
}

func (x LinkOperState) String() string {
	return proto.EnumName(LinkOperState_name, int32(x))
}

func (LinkOperState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{1}
}

type BondMode int32

const (
	BondMode_BOND_MODE_BALANCE_RR    BondMode = 0
	BondMode_BOND_MODE_ACTIVE_BACKUP BondMode = 1
	BondMode_BOND_MODE_BALANCE_XOR   BondMode = 2
	BondMode_BOND_MODE_BROADCAST     BondMode = 3
	BondMode_BOND_MODE_802_3AD       BondMode = 4
	BondMode_BOND_MODE_BALANCE_TLB   BondMode = 5
	BondMode_BOND_MODE_BALANCE_ALB   BondMode = 6
	BondMode_BOND_MODE_UNKNOWN       BondMode = 7
)

var BondMode_name = map[int32]string{
	0: "BOND_MODE_BALANCE_RR",
	1: "BOND_MODE_ACTIVE_BACKUP",
	2: "BOND_MODE_BALANCE_XOR",
	3: "BOND_MODE_BROADCAST",
	4: "BOND_MODE_802_3AD",
	5: "BOND_MODE_BALANCE_TLB",
	6: "BOND_MODE_BALANCE_ALB",
	7: "BOND_MODE_UNKNOWN",
}

var BondMode_value = map[string]int32{
	"BOND_MODE_BALANCE_RR":    0,
	"BOND_MODE_ACTIVE_BACKUP": 1,
	"BOND_MODE_BALANCE_XOR":   2,
	"BOND_MODE_BROADCAST":     3,
	"BOND_MODE_802_3AD":       4,
	"BOND_MODE_BALANCE_TLB":   5,
	"BOND_MODE_BALANCE_ALB":   6,
	"BOND_MODE_UNKNOWN":       7,
}

func (x BondMode) String() string {
	return proto.EnumName(BondMode_name, int32(x))
}

func (BondMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{2}
}

type BondArpValidate int32

const (
	BondArpValidate_BOND_ARP_VALIDATE_NONE   BondArpValidate = 0
	BondArpValidate_BOND_ARP_VALIDATE_ACTIVE BondArpValidate = 1
	BondArpValidate_BOND_ARP_VALIDATE_BACKUP BondArpValidate = 2
	BondArpValidate_BOND_ARP_VALIDATE_ALL    BondArpValidate = 3
)

var BondArpValidate_name = map[int32]string{
	0: "BOND_ARP_VALIDATE_NONE",
	1: "BOND_ARP_VALIDATE_ACTIVE",
	2: "BOND_ARP_VALIDATE_BACKUP",
	3: "BOND_ARP_VALIDATE_ALL",
}

var BondArpValidate_value = map[string]int32{
	"BOND_ARP_VALIDATE_NONE":   0,
	"BOND_ARP_VALIDATE_ACTIVE": 1,
	"BOND_ARP_VALIDATE_BACKUP": 2,
	"BOND_ARP_VALIDATE_ALL":    3,
}

func (x BondArpValidate) String() string {
	return proto.EnumName(BondArpValidate_name, int32(x))
}

func (BondArpValidate) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{3}
}

type BondArpAllTargets int32

const (
	BondArpAllTargets_BOND_ARP_ALL_TARGETS_ANY BondArpAllTargets = 0
	BondArpAllTargets_BOND_ARP_ALL_TARGETS_ALL BondArpAllTargets = 1
)

var BondArpAllTargets_name = map[int32]string{
	0: "BOND_ARP_ALL_TARGETS_ANY",
	1: "BOND_ARP_ALL_TARGETS_ALL",
}

var BondArpAllTargets_value = map[string]int32{
	"BOND_ARP_ALL_TARGETS_ANY": 0,
	"BOND_ARP_ALL_TARGETS_ALL": 1,
}

func (x BondArpAllTargets) String() string {
	return proto.EnumName(BondArpAllTargets_name, int32(x))
}

func (BondArpAllTargets) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{4}
}

type BondPrimaryReselect int32

const (
	BondPrimaryReselect_BOND_PRIMARY_RESELECT_ALWAYS  BondPrimaryReselect = 0
	BondPrimaryReselect_BOND_PRIMARY_RESELECT_BETTER  BondPrimaryReselect = 1
	BondPrimaryReselect_BOND_PRIMARY_RESELECT_FAILURE BondPrimaryReselect = 2
)

var BondPrimaryReselect_name = map[int32]string{
	0: "BOND_PRIMARY_RESELECT_ALWAYS",
	1: "BOND_PRIMARY_RESELECT_BETTER",
	2: "BOND_PRIMARY_RESELECT_FAILURE",
}

var BondPrimaryReselect_value = map[string]int32{
	"BOND_PRIMARY_RESELECT_ALWAYS":  0,
	"BOND_PRIMARY_RESELECT_BETTER":  1,
	"BOND_PRIMARY_RESELECT_FAILURE": 2,
}

func (x BondPrimaryReselect) String() string {
	return proto.EnumName(BondPrimaryReselect_name, int32(x))
}

func (BondPrimaryReselect) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{5}
}

type BondFailOverMac int32

const (
	BondFailOverMac_BOND_FAIL_OVER_MAC_NONE   BondFailOverMac = 0
	BondFailOverMac_BOND_FAIL_OVER_MAC_ACTIVE BondFailOverMac = 1
	BondFailOverMac_BOND_FAIL_OVER_MAC_FOLLOW BondFailOverMac = 2
)

var BondFailOverMac_name = map[int32]string{
	0: "BOND_FAIL_OVER_MAC_NONE",
	1: "BOND_FAIL_OVER_MAC_ACTIVE",
	2: "BOND_FAIL_OVER_MAC_FOLLOW",
}

var BondFailOverMac_value = map[string]int32{
	"BOND_FAIL_OVER_MAC_NONE":   0,
	"BOND_FAIL_OVER_MAC_ACTIVE": 1,
	"BOND_FAIL_OVER_MAC_FOLLOW": 2,
}

func (x BondFailOverMac) String() string {
	return proto.EnumName(BondFailOverMac_name, int32(x))
}

func (BondFailOverMac) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{6}
}

type BondXmitHashPolicy int32

const (
	BondXmitHashPolicy_BOND_XMIT_HASH_POLICY_LAYER2   BondXmitHashPolicy = 0
	BondXmitHashPolicy_BOND_XMIT_HASH_POLICY_LAYER3_4 BondXmitHashPolicy = 1
	BondXmitHashPolicy_BOND_XMIT_HASH_POLICY_LAYER2_3 BondXmitHashPolicy = 2
	BondXmitHashPolicy_BOND_XMIT_HASH_POLICY_ENCAP2_3 BondXmitHashPolicy = 3
	BondXmitHashPolicy_BOND_XMIT_HASH_POLICY_ENCAP3_4 BondXmitHashPolicy = 4
	BondXmitHashPolicy_BOND_XMIT_HASH_POLICY_UNKNOWN  BondXmitHashPolicy = 5
)

var BondXmitHashPolicy_name = map[int32]string{
	0: "BOND_XMIT_HASH_POLICY_LAYER2",
	1: "BOND_XMIT_HASH_POLICY_LAYER3_4",
	2: "BOND_XMIT_HASH_POLICY_LAYER2_3",
	3: "BOND_XMIT_HASH_POLICY_ENCAP2_3",
	4: "BOND_XMIT_HASH_POLICY_ENCAP3_4",
	5: "BOND_XMIT_HASH_POLICY_UNKNOWN",
}

var BondXmitHashPolicy_value = map[string]int32{
	"BOND_XMIT_HASH_POLICY_LAYER2":   0,
	"BOND_XMIT_HASH_POLICY_LAYER3_4": 1,
	"BOND_XMIT_HASH_POLICY_LAYER2_3": 2,
	"BOND_XMIT_HASH_POLICY_ENCAP2_3": 3,
	"BOND_XMIT_HASH_POLICY_ENCAP3_4": 4,
	"BOND_XMIT_HASH_POLICY_UNKNOWN":  5,
}

func (x BondXmitHashPolicy) String() string {
	return proto.EnumName(BondXmitHashPolicy_name, int32(x))
}

func (BondXmitHashPolicy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{7}
}

type BondLacpRate int32

const (
	BondLacpRate_BOND_LACP_RATE_SLOW    BondLacpRate = 0
	BondLacpRate_BOND_LACP_RATE_FAST    BondLacpRate = 1
	BondLacpRate_BOND_LACP_RATE_UNKNOWN BondLacpRate = 2
)

var BondLacpRate_name = map[int32]string{
	0: "BOND_LACP_RATE_SLOW",
	1: "BOND_LACP_RATE_FAST",
	2: "BOND_LACP_RATE_UNKNOWN",
}

var BondLacpRate_value = map[string]int32{
	"BOND_LACP_RATE_SLOW":    0,
	"BOND_LACP_RATE_FAST":    1,
	"BOND_LACP_RATE_UNKNOWN": 2,
}

func (x BondLacpRate) String() string {
	return proto.EnumName(BondLacpRate_name, int32(x))
}

func (BondLacpRate) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{8}
}

type BondAdSelect int32

const (
	BondAdSelect_BOND_AD_SELECT_STABLE    BondAdSelect = 0
	BondAdSelect_BOND_AD_SELECT_BANDWIDTH BondAdSelect = 1
	BondAdSelect_BOND_AD_SELECT_COUNT     BondAdSelect = 2
)

var BondAdSelect_name = map[int32]string{
	0: "BOND_AD_SELECT_STABLE",
	1: "BOND_AD_SELECT_BANDWIDTH",
	2: "BOND_AD_SELECT_COUNT",
}

var BondAdSelect_value = map[string]int32{
	"BOND_AD_SELECT_STABLE":    0,
	"BOND_AD_SELECT_BANDWIDTH": 1,
	"BOND_AD_SELECT_COUNT":     2,
}

func (x BondAdSelect) String() string {
	return proto.EnumName(BondAdSelect_name, int32(x))
}

func (BondAdSelect) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{9}
}

//
// Common
//
type NlMsghdr struct {
	Len                  uint32   `protobuf:"varint,1,opt,name=len,proto3" json:"len,omitempty"`
	Type                 uint32   `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Flags                uint32   `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Seq                  uint32   `protobuf:"varint,4,opt,name=seq,proto3" json:"seq,omitempty"`
	Pid                  uint32   `protobuf:"varint,5,opt,name=pid,proto3" json:"pid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NlMsghdr) Reset()         { *m = NlMsghdr{} }
func (m *NlMsghdr) String() string { return proto.CompactTextString(m) }
func (*NlMsghdr) ProtoMessage()    {}
func (*NlMsghdr) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{0}
}

func (m *NlMsghdr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NlMsghdr.Unmarshal(m, b)
}
func (m *NlMsghdr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NlMsghdr.Marshal(b, m, deterministic)
}
func (m *NlMsghdr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NlMsghdr.Merge(m, src)
}
func (m *NlMsghdr) XXX_Size() int {
	return xxx_messageInfo_NlMsghdr.Size(m)
}
func (m *NlMsghdr) XXX_DiscardUnknown() {
	xxx_messageInfo_NlMsghdr.DiscardUnknown(m)
}

var xxx_messageInfo_NlMsghdr proto.InternalMessageInfo

func (m *NlMsghdr) GetLen() uint32 {
	if m != nil {
		return m.Len
	}
	return 0
}

func (m *NlMsghdr) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *NlMsghdr) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *NlMsghdr) GetSeq() uint32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *NlMsghdr) GetPid() uint32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

type NetlinkMessage struct {
	Header               *NlMsghdr `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Data                 []byte    `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	NId                  uint32    `protobuf:"varint,3,opt,name=n_id,json=nId,proto3" json:"n_id,omitempty"`
	Src                  NlMsgSrc  `protobuf:"varint,4,opt,name=src,proto3,enum=nlaapi.NlMsgSrc" json:"src,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *NetlinkMessage) Reset()         { *m = NetlinkMessage{} }
func (m *NetlinkMessage) String() string { return proto.CompactTextString(m) }
func (*NetlinkMessage) ProtoMessage()    {}
func (*NetlinkMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{1}
}

func (m *NetlinkMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetlinkMessage.Unmarshal(m, b)
}
func (m *NetlinkMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetlinkMessage.Marshal(b, m, deterministic)
}
func (m *NetlinkMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetlinkMessage.Merge(m, src)
}
func (m *NetlinkMessage) XXX_Size() int {
	return xxx_messageInfo_NetlinkMessage.Size(m)
}
func (m *NetlinkMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_NetlinkMessage.DiscardUnknown(m)
}

var xxx_messageInfo_NetlinkMessage proto.InternalMessageInfo

func (m *NetlinkMessage) GetHeader() *NlMsghdr {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *NetlinkMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *NetlinkMessage) GetNId() uint32 {
	if m != nil {
		return m.NId
	}
	return 0
}

func (m *NetlinkMessage) GetSrc() NlMsgSrc {
	if m != nil {
		return m.Src
	}
	return NlMsgSrc_NOP
}

type NetlinkMessageReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetlinkMessageReply) Reset()         { *m = NetlinkMessageReply{} }
func (m *NetlinkMessageReply) String() string { return proto.CompactTextString(m) }
func (*NetlinkMessageReply) ProtoMessage()    {}
func (*NetlinkMessageReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{2}
}

func (m *NetlinkMessageReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetlinkMessageReply.Unmarshal(m, b)
}
func (m *NetlinkMessageReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetlinkMessageReply.Marshal(b, m, deterministic)
}
func (m *NetlinkMessageReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetlinkMessageReply.Merge(m, src)
}
func (m *NetlinkMessageReply) XXX_Size() int {
	return xxx_messageInfo_NetlinkMessageReply.Size(m)
}
func (m *NetlinkMessageReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NetlinkMessageReply.DiscardUnknown(m)
}

var xxx_messageInfo_NetlinkMessageReply proto.InternalMessageInfo

type MonNetlinkRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MonNetlinkRequest) Reset()         { *m = MonNetlinkRequest{} }
func (m *MonNetlinkRequest) String() string { return proto.CompactTextString(m) }
func (*MonNetlinkRequest) ProtoMessage()    {}
func (*MonNetlinkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{3}
}

func (m *MonNetlinkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MonNetlinkRequest.Unmarshal(m, b)
}
func (m *MonNetlinkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MonNetlinkRequest.Marshal(b, m, deterministic)
}
func (m *MonNetlinkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MonNetlinkRequest.Merge(m, src)
}
func (m *MonNetlinkRequest) XXX_Size() int {
	return xxx_messageInfo_MonNetlinkRequest.Size(m)
}
func (m *MonNetlinkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MonNetlinkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MonNetlinkRequest proto.InternalMessageInfo

type NlMsgUni struct {
	// Types that are valid to be assigned to Msg:
	//	*NlMsgUni_Link
	//	*NlMsgUni_Addr
	//	*NlMsgUni_Neigh
	//	*NlMsgUni_Route
	//	*NlMsgUni_Node
	//	*NlMsgUni_Vpn
	Msg                  isNlMsgUni_Msg `protobuf_oneof:"msg"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *NlMsgUni) Reset()         { *m = NlMsgUni{} }
func (m *NlMsgUni) String() string { return proto.CompactTextString(m) }
func (*NlMsgUni) ProtoMessage()    {}
func (*NlMsgUni) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{4}
}

func (m *NlMsgUni) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NlMsgUni.Unmarshal(m, b)
}
func (m *NlMsgUni) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NlMsgUni.Marshal(b, m, deterministic)
}
func (m *NlMsgUni) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NlMsgUni.Merge(m, src)
}
func (m *NlMsgUni) XXX_Size() int {
	return xxx_messageInfo_NlMsgUni.Size(m)
}
func (m *NlMsgUni) XXX_DiscardUnknown() {
	xxx_messageInfo_NlMsgUni.DiscardUnknown(m)
}

var xxx_messageInfo_NlMsgUni proto.InternalMessageInfo

type isNlMsgUni_Msg interface {
	isNlMsgUni_Msg()
}

type NlMsgUni_Link struct {
	Link *Link `protobuf:"bytes,1,opt,name=link,proto3,oneof"`
}

type NlMsgUni_Addr struct {
	Addr *Addr `protobuf:"bytes,2,opt,name=addr,proto3,oneof"`
}

type NlMsgUni_Neigh struct {
	Neigh *Neigh `protobuf:"bytes,3,opt,name=neigh,proto3,oneof"`
}

type NlMsgUni_Route struct {
	Route *Route `protobuf:"bytes,4,opt,name=route,proto3,oneof"`
}

type NlMsgUni_Node struct {
	Node *Node `protobuf:"bytes,5,opt,name=node,proto3,oneof"`
}

type NlMsgUni_Vpn struct {
	Vpn *Vpn `protobuf:"bytes,6,opt,name=vpn,proto3,oneof"`
}

func (*NlMsgUni_Link) isNlMsgUni_Msg() {}

func (*NlMsgUni_Addr) isNlMsgUni_Msg() {}

func (*NlMsgUni_Neigh) isNlMsgUni_Msg() {}

func (*NlMsgUni_Route) isNlMsgUni_Msg() {}

func (*NlMsgUni_Node) isNlMsgUni_Msg() {}

func (*NlMsgUni_Vpn) isNlMsgUni_Msg() {}

func (m *NlMsgUni) GetMsg() isNlMsgUni_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *NlMsgUni) GetLink() *Link {
	if x, ok := m.GetMsg().(*NlMsgUni_Link); ok {
		return x.Link
	}
	return nil
}

func (m *NlMsgUni) GetAddr() *Addr {
	if x, ok := m.GetMsg().(*NlMsgUni_Addr); ok {
		return x.Addr
	}
	return nil
}

func (m *NlMsgUni) GetNeigh() *Neigh {
	if x, ok := m.GetMsg().(*NlMsgUni_Neigh); ok {
		return x.Neigh
	}
	return nil
}

func (m *NlMsgUni) GetRoute() *Route {
	if x, ok := m.GetMsg().(*NlMsgUni_Route); ok {
		return x.Route
	}
	return nil
}

func (m *NlMsgUni) GetNode() *Node {
	if x, ok := m.GetMsg().(*NlMsgUni_Node); ok {
		return x.Node
	}
	return nil
}

func (m *NlMsgUni) GetVpn() *Vpn {
	if x, ok := m.GetMsg().(*NlMsgUni_Vpn); ok {
		return x.Vpn
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*NlMsgUni) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*NlMsgUni_Link)(nil),
		(*NlMsgUni_Addr)(nil),
		(*NlMsgUni_Neigh)(nil),
		(*NlMsgUni_Route)(nil),
		(*NlMsgUni_Node)(nil),
		(*NlMsgUni_Vpn)(nil),
	}
}

type NetlinkMessageUnion struct {
	Header               *NlMsghdr `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Msg                  *NlMsgUni `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	NId                  uint32    `protobuf:"varint,3,opt,name=n_id,json=nId,proto3" json:"n_id,omitempty"`
	Src                  NlMsgSrc  `protobuf:"varint,4,opt,name=src,proto3,enum=nlaapi.NlMsgSrc" json:"src,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *NetlinkMessageUnion) Reset()         { *m = NetlinkMessageUnion{} }
func (m *NetlinkMessageUnion) String() string { return proto.CompactTextString(m) }
func (*NetlinkMessageUnion) ProtoMessage()    {}
func (*NetlinkMessageUnion) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{5}
}

func (m *NetlinkMessageUnion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetlinkMessageUnion.Unmarshal(m, b)
}
func (m *NetlinkMessageUnion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetlinkMessageUnion.Marshal(b, m, deterministic)
}
func (m *NetlinkMessageUnion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetlinkMessageUnion.Merge(m, src)
}
func (m *NetlinkMessageUnion) XXX_Size() int {
	return xxx_messageInfo_NetlinkMessageUnion.Size(m)
}
func (m *NetlinkMessageUnion) XXX_DiscardUnknown() {
	xxx_messageInfo_NetlinkMessageUnion.DiscardUnknown(m)
}

var xxx_messageInfo_NetlinkMessageUnion proto.InternalMessageInfo

func (m *NetlinkMessageUnion) GetHeader() *NlMsghdr {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *NetlinkMessageUnion) GetMsg() *NlMsgUni {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *NetlinkMessageUnion) GetNId() uint32 {
	if m != nil {
		return m.NId
	}
	return 0
}

func (m *NetlinkMessageUnion) GetSrc() NlMsgSrc {
	if m != nil {
		return m.Src
	}
	return NlMsgSrc_NOP
}

type ModVpnRequest struct {
	Type                 uint32   `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Vpn                  *Vpn     `protobuf:"bytes,2,opt,name=vpn,proto3" json:"vpn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModVpnRequest) Reset()         { *m = ModVpnRequest{} }
func (m *ModVpnRequest) String() string { return proto.CompactTextString(m) }
func (*ModVpnRequest) ProtoMessage()    {}
func (*ModVpnRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{6}
}

func (m *ModVpnRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModVpnRequest.Unmarshal(m, b)
}
func (m *ModVpnRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModVpnRequest.Marshal(b, m, deterministic)
}
func (m *ModVpnRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModVpnRequest.Merge(m, src)
}
func (m *ModVpnRequest) XXX_Size() int {
	return xxx_messageInfo_ModVpnRequest.Size(m)
}
func (m *ModVpnRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ModVpnRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ModVpnRequest proto.InternalMessageInfo

func (m *ModVpnRequest) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ModVpnRequest) GetVpn() *Vpn {
	if m != nil {
		return m.Vpn
	}
	return nil
}

type ModVpnReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModVpnReply) Reset()         { *m = ModVpnReply{} }
func (m *ModVpnReply) String() string { return proto.CompactTextString(m) }
func (*ModVpnReply) ProtoMessage()    {}
func (*ModVpnReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{7}
}

func (m *ModVpnReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModVpnReply.Unmarshal(m, b)
}
func (m *ModVpnReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModVpnReply.Marshal(b, m, deterministic)
}
func (m *ModVpnReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModVpnReply.Merge(m, src)
}
func (m *ModVpnReply) XXX_Size() int {
	return xxx_messageInfo_ModVpnReply.Size(m)
}
func (m *ModVpnReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ModVpnReply.DiscardUnknown(m)
}

var xxx_messageInfo_ModVpnReply proto.InternalMessageInfo

type ModNetlinkReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModNetlinkReply) Reset()         { *m = ModNetlinkReply{} }
func (m *ModNetlinkReply) String() string { return proto.CompactTextString(m) }
func (*ModNetlinkReply) ProtoMessage()    {}
func (*ModNetlinkReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{8}
}

func (m *ModNetlinkReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModNetlinkReply.Unmarshal(m, b)
}
func (m *ModNetlinkReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModNetlinkReply.Marshal(b, m, deterministic)
}
func (m *ModNetlinkReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModNetlinkReply.Merge(m, src)
}
func (m *ModNetlinkReply) XXX_Size() int {
	return xxx_messageInfo_ModNetlinkReply.Size(m)
}
func (m *ModNetlinkReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ModNetlinkReply.DiscardUnknown(m)
}

var xxx_messageInfo_ModNetlinkReply proto.InternalMessageInfo

type GetLinksRequest struct {
	NId                  uint32   `protobuf:"varint,1,opt,name=n_id,json=nId,proto3" json:"n_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLinksRequest) Reset()         { *m = GetLinksRequest{} }
func (m *GetLinksRequest) String() string { return proto.CompactTextString(m) }
func (*GetLinksRequest) ProtoMessage()    {}
func (*GetLinksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{9}
}

func (m *GetLinksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLinksRequest.Unmarshal(m, b)
}
func (m *GetLinksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLinksRequest.Marshal(b, m, deterministic)
}
func (m *GetLinksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLinksRequest.Merge(m, src)
}
func (m *GetLinksRequest) XXX_Size() int {
	return xxx_messageInfo_GetLinksRequest.Size(m)
}
func (m *GetLinksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLinksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLinksRequest proto.InternalMessageInfo

func (m *GetLinksRequest) GetNId() uint32 {
	if m != nil {
		return m.NId
	}
	return 0
}

type GetAddrsRequest struct {
	NId                  uint32   `protobuf:"varint,1,opt,name=n_id,json=nId,proto3" json:"n_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAddrsRequest) Reset()         { *m = GetAddrsRequest{} }
func (m *GetAddrsRequest) String() string { return proto.CompactTextString(m) }
func (*GetAddrsRequest) ProtoMessage()    {}
func (*GetAddrsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{10}
}

func (m *GetAddrsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAddrsRequest.Unmarshal(m, b)
}
func (m *GetAddrsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAddrsRequest.Marshal(b, m, deterministic)
}
func (m *GetAddrsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAddrsRequest.Merge(m, src)
}
func (m *GetAddrsRequest) XXX_Size() int {
	return xxx_messageInfo_GetAddrsRequest.Size(m)
}
func (m *GetAddrsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAddrsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAddrsRequest proto.InternalMessageInfo

func (m *GetAddrsRequest) GetNId() uint32 {
	if m != nil {
		return m.NId
	}
	return 0
}

type GetNeighsRequest struct {
	NId                  uint32   `protobuf:"varint,1,opt,name=n_id,json=nId,proto3" json:"n_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNeighsRequest) Reset()         { *m = GetNeighsRequest{} }
func (m *GetNeighsRequest) String() string { return proto.CompactTextString(m) }
func (*GetNeighsRequest) ProtoMessage()    {}
func (*GetNeighsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{11}
}

func (m *GetNeighsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNeighsRequest.Unmarshal(m, b)
}
func (m *GetNeighsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNeighsRequest.Marshal(b, m, deterministic)
}
func (m *GetNeighsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNeighsRequest.Merge(m, src)
}
func (m *GetNeighsRequest) XXX_Size() int {
	return xxx_messageInfo_GetNeighsRequest.Size(m)
}
func (m *GetNeighsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNeighsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNeighsRequest proto.InternalMessageInfo

func (m *GetNeighsRequest) GetNId() uint32 {
	if m != nil {
		return m.NId
	}
	return 0
}

type GetRoutesRequest struct {
	NId                  uint32   `protobuf:"varint,1,opt,name=n_id,json=nId,proto3" json:"n_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRoutesRequest) Reset()         { *m = GetRoutesRequest{} }
func (m *GetRoutesRequest) String() string { return proto.CompactTextString(m) }
func (*GetRoutesRequest) ProtoMessage()    {}
func (*GetRoutesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{12}
}

func (m *GetRoutesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRoutesRequest.Unmarshal(m, b)
}
func (m *GetRoutesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRoutesRequest.Marshal(b, m, deterministic)
}
func (m *GetRoutesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRoutesRequest.Merge(m, src)
}
func (m *GetRoutesRequest) XXX_Size() int {
	return xxx_messageInfo_GetRoutesRequest.Size(m)
}
func (m *GetRoutesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRoutesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRoutesRequest proto.InternalMessageInfo

func (m *GetRoutesRequest) GetNId() uint32 {
	if m != nil {
		return m.NId
	}
	return 0
}

type GetMplssRequest struct {
	NId                  uint32   `protobuf:"varint,1,opt,name=n_id,json=nId,proto3" json:"n_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMplssRequest) Reset()         { *m = GetMplssRequest{} }
func (m *GetMplssRequest) String() string { return proto.CompactTextString(m) }
func (*GetMplssRequest) ProtoMessage()    {}
func (*GetMplssRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{13}
}

func (m *GetMplssRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMplssRequest.Unmarshal(m, b)
}
func (m *GetMplssRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMplssRequest.Marshal(b, m, deterministic)
}
func (m *GetMplssRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMplssRequest.Merge(m, src)
}
func (m *GetMplssRequest) XXX_Size() int {
	return xxx_messageInfo_GetMplssRequest.Size(m)
}
func (m *GetMplssRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMplssRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMplssRequest proto.InternalMessageInfo

func (m *GetMplssRequest) GetNId() uint32 {
	if m != nil {
		return m.NId
	}
	return 0
}

type GetNodesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodesRequest) Reset()         { *m = GetNodesRequest{} }
func (m *GetNodesRequest) String() string { return proto.CompactTextString(m) }
func (*GetNodesRequest) ProtoMessage()    {}
func (*GetNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{14}
}

func (m *GetNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodesRequest.Unmarshal(m, b)
}
func (m *GetNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodesRequest.Marshal(b, m, deterministic)
}
func (m *GetNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodesRequest.Merge(m, src)
}
func (m *GetNodesRequest) XXX_Size() int {
	return xxx_messageInfo_GetNodesRequest.Size(m)
}
func (m *GetNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodesRequest proto.InternalMessageInfo

type GetVpnsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVpnsRequest) Reset()         { *m = GetVpnsRequest{} }
func (m *GetVpnsRequest) String() string { return proto.CompactTextString(m) }
func (*GetVpnsRequest) ProtoMessage()    {}
func (*GetVpnsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{15}
}

func (m *GetVpnsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVpnsRequest.Unmarshal(m, b)
}
func (m *GetVpnsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVpnsRequest.Marshal(b, m, deterministic)
}
func (m *GetVpnsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVpnsRequest.Merge(m, src)
}
func (m *GetVpnsRequest) XXX_Size() int {
	return xxx_messageInfo_GetVpnsRequest.Size(m)
}
func (m *GetVpnsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVpnsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVpnsRequest proto.InternalMessageInfo

type GetEncapInfosRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEncapInfosRequest) Reset()         { *m = GetEncapInfosRequest{} }
func (m *GetEncapInfosRequest) String() string { return proto.CompactTextString(m) }
func (*GetEncapInfosRequest) ProtoMessage()    {}
func (*GetEncapInfosRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{16}
}

func (m *GetEncapInfosRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEncapInfosRequest.Unmarshal(m, b)
}
func (m *GetEncapInfosRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEncapInfosRequest.Marshal(b, m, deterministic)
}
func (m *GetEncapInfosRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEncapInfosRequest.Merge(m, src)
}
func (m *GetEncapInfosRequest) XXX_Size() int {
	return xxx_messageInfo_GetEncapInfosRequest.Size(m)
}
func (m *GetEncapInfosRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEncapInfosRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEncapInfosRequest proto.InternalMessageInfo

type GetIptunsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetIptunsRequest) Reset()         { *m = GetIptunsRequest{} }
func (m *GetIptunsRequest) String() string { return proto.CompactTextString(m) }
func (*GetIptunsRequest) ProtoMessage()    {}
func (*GetIptunsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{17}
}

func (m *GetIptunsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIptunsRequest.Unmarshal(m, b)
}
func (m *GetIptunsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIptunsRequest.Marshal(b, m, deterministic)
}
func (m *GetIptunsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIptunsRequest.Merge(m, src)
}
func (m *GetIptunsRequest) XXX_Size() int {
	return xxx_messageInfo_GetIptunsRequest.Size(m)
}
func (m *GetIptunsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIptunsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetIptunsRequest proto.InternalMessageInfo

type GetStatsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStatsRequest) Reset()         { *m = GetStatsRequest{} }
func (m *GetStatsRequest) String() string { return proto.CompactTextString(m) }
func (*GetStatsRequest) ProtoMessage()    {}
func (*GetStatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{18}
}

func (m *GetStatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStatsRequest.Unmarshal(m, b)
}
func (m *GetStatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStatsRequest.Marshal(b, m, deterministic)
}
func (m *GetStatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStatsRequest.Merge(m, src)
}
func (m *GetStatsRequest) XXX_Size() int {
	return xxx_messageInfo_GetStatsRequest.Size(m)
}
func (m *GetStatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetStatsRequest proto.InternalMessageInfo

type LinkKey struct {
	NId                  uint32   `protobuf:"varint,1,opt,name=n_id,json=nId,proto3" json:"n_id,omitempty"`
	Index                int32    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LinkKey) Reset()         { *m = LinkKey{} }
func (m *LinkKey) String() string { return proto.CompactTextString(m) }
func (*LinkKey) ProtoMessage()    {}
func (*LinkKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{19}
}

func (m *LinkKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinkKey.Unmarshal(m, b)
}
func (m *LinkKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinkKey.Marshal(b, m, deterministic)
}
func (m *LinkKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinkKey.Merge(m, src)
}
func (m *LinkKey) XXX_Size() int {
	return xxx_messageInfo_LinkKey.Size(m)
}
func (m *LinkKey) XXX_DiscardUnknown() {
	xxx_messageInfo_LinkKey.DiscardUnknown(m)
}

var xxx_messageInfo_LinkKey proto.InternalMessageInfo

func (m *LinkKey) GetNId() uint32 {
	if m != nil {
		return m.NId
	}
	return 0
}

func (m *LinkKey) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type AddrKey struct {
	NId                  uint32   `protobuf:"varint,1,opt,name=n_id,json=nId,proto3" json:"n_id,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddrKey) Reset()         { *m = AddrKey{} }
func (m *AddrKey) String() string { return proto.CompactTextString(m) }
func (*AddrKey) ProtoMessage()    {}
func (*AddrKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{20}
}

func (m *AddrKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddrKey.Unmarshal(m, b)
}
func (m *AddrKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddrKey.Marshal(b, m, deterministic)
}
func (m *AddrKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddrKey.Merge(m, src)
}
func (m *AddrKey) XXX_Size() int {
	return xxx_messageInfo_AddrKey.Size(m)
}
func (m *AddrKey) XXX_DiscardUnknown() {
	xxx_messageInfo_AddrKey.DiscardUnknown(m)
}

var xxx_messageInfo_AddrKey proto.InternalMessageInfo

func (m *AddrKey) GetNId() uint32 {
	if m != nil {
		return m.NId
	}
	return 0
}

func (m *AddrKey) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type NeighKey struct {
	NId                  uint32   `protobuf:"varint,1,opt,name=n_id,json=nId,proto3" json:"n_id,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Ifindex              int32    `protobuf:"varint,3,opt,name=ifindex,proto3" json:"ifindex,omitempty"`
	VlanId               int32    `protobuf:"varint,4,opt,name=vlan_id,json=vlanId,proto3" json:"vlan_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NeighKey) Reset()         { *m = NeighKey{} }
func (m *NeighKey) String() string { return proto.CompactTextString(m) }
func (*NeighKey) ProtoMessage()    {}
func (*NeighKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{21}
}

func (m *NeighKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NeighKey.Unmarshal(m, b)
}
func (m *NeighKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NeighKey.Marshal(b, m, deterministic)
}
func (m *NeighKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NeighKey.Merge(m, src)
}
func (m *NeighKey) XXX_Size() int {
	return xxx_messageInfo_NeighKey.Size(m)
}
func (m *NeighKey) XXX_DiscardUnknown() {
	xxx_messageInfo_NeighKey.DiscardUnknown(m)
}

var xxx_messageInfo_NeighKey proto.InternalMessageInfo

func (m *NeighKey) GetNId() uint32 {
	if m != nil {
		return m.NId
	}
	return 0
}

func (m *NeighKey) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *NeighKey) GetIfindex() int32 {
	if m != nil {
		return m.Ifindex
	}
	return 0
}

func (m *NeighKey) GetVlanId() int32 {
	if m != nil {
		return m.VlanId
	}
	return 0
}

type RouteKey struct {
	NId                  uint32   `protobuf:"varint,1,opt,name=n_id,json=nId,proto3" json:"n_id,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteKey) Reset()         { *m = RouteKey{} }
func (m *RouteKey) String() string { return proto.CompactTextString(m) }
func (*RouteKey) ProtoMessage()    {}
func (*RouteKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{22}
}

func (m *RouteKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteKey.Unmarshal(m, b)
}
func (m *RouteKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteKey.Marshal(b, m, deterministic)
}
func (m *RouteKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteKey.Merge(m, src)
}
func (m *RouteKey) XXX_Size() int {
	return xxx_messageInfo_RouteKey.Size(m)
}
func (m *RouteKey) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteKey.DiscardUnknown(m)
}

var xxx_messageInfo_RouteKey proto.InternalMessageInfo

func (m *RouteKey) GetNId() uint32 {
	if m != nil {
		return m.NId
	}
	return 0
}

func (m *RouteKey) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type MplsKey struct {
	NId                  uint32   `protobuf:"varint,1,opt,name=n_id,json=nId,proto3" json:"n_id,omitempty"`
	LLabel               uint32   `protobuf:"varint,2,opt,name=l_label,json=lLabel,proto3" json:"l_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsKey) Reset()         { *m = MplsKey{} }
func (m *MplsKey) String() string { return proto.CompactTextString(m) }
func (*MplsKey) ProtoMessage()    {}
func (*MplsKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{23}
}

func (m *MplsKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsKey.Unmarshal(m, b)
}
func (m *MplsKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsKey.Marshal(b, m, deterministic)
}
func (m *MplsKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsKey.Merge(m, src)
}
func (m *MplsKey) XXX_Size() int {
	return xxx_messageInfo_MplsKey.Size(m)
}
func (m *MplsKey) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsKey.DiscardUnknown(m)
}

var xxx_messageInfo_MplsKey proto.InternalMessageInfo

func (m *MplsKey) GetNId() uint32 {
	if m != nil {
		return m.NId
	}
	return 0
}

func (m *MplsKey) GetLLabel() uint32 {
	if m != nil {
		return m.LLabel
	}
	return 0
}

type NodeKey struct {
	NId                  uint32   `protobuf:"varint,1,opt,name=n_id,json=nId,proto3" json:"n_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeKey) Reset()         { *m = NodeKey{} }
func (m *NodeKey) String() string { return proto.CompactTextString(m) }
func (*NodeKey) ProtoMessage()    {}
func (*NodeKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{24}
}

func (m *NodeKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeKey.Unmarshal(m, b)
}
func (m *NodeKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeKey.Marshal(b, m, deterministic)
}
func (m *NodeKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeKey.Merge(m, src)
}
func (m *NodeKey) XXX_Size() int {
	return xxx_messageInfo_NodeKey.Size(m)
}
func (m *NodeKey) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeKey.DiscardUnknown(m)
}

var xxx_messageInfo_NodeKey proto.InternalMessageInfo

func (m *NodeKey) GetNId() uint32 {
	if m != nil {
		return m.NId
	}
	return 0
}

type VpnKey struct {
	NId                  uint32   `protobuf:"varint,1,opt,name=n_id,json=nId,proto3" json:"n_id,omitempty"`
	Dst                  string   `protobuf:"bytes,2,opt,name=dst,proto3" json:"dst,omitempty"`
	Gw                   string   `protobuf:"bytes,3,opt,name=gw,proto3" json:"gw,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VpnKey) Reset()         { *m = VpnKey{} }
func (m *VpnKey) String() string { return proto.CompactTextString(m) }
func (*VpnKey) ProtoMessage()    {}
func (*VpnKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{25}
}

func (m *VpnKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VpnKey.Unmarshal(m, b)
}
func (m *VpnKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VpnKey.Marshal(b, m, deterministic)
}
func (m *VpnKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VpnKey.Merge(m, src)
}
func (m *VpnKey) XXX_Size() int {
	return xxx_messageInfo_VpnKey.Size(m)
}
func (m *VpnKey) XXX_DiscardUnknown() {
	xxx_messageInfo_VpnKey.DiscardUnknown(m)
}

var xxx_messageInfo_VpnKey proto.InternalMessageInfo

func (m *VpnKey) GetNId() uint32 {
	if m != nil {
		return m.NId
	}
	return 0
}

func (m *VpnKey) GetDst() string {
	if m != nil {
		return m.Dst
	}
	return ""
}

func (m *VpnKey) GetGw() string {
	if m != nil {
		return m.Gw
	}
	return ""
}

type IptunKey struct {
	NId                  uint32   `protobuf:"varint,1,opt,name=n_id,json=nId,proto3" json:"n_id,omitempty"`
	Remote               []byte   `protobuf:"bytes,2,opt,name=remote,proto3" json:"remote,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IptunKey) Reset()         { *m = IptunKey{} }
func (m *IptunKey) String() string { return proto.CompactTextString(m) }
func (*IptunKey) ProtoMessage()    {}
func (*IptunKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{26}
}

func (m *IptunKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IptunKey.Unmarshal(m, b)
}
func (m *IptunKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IptunKey.Marshal(b, m, deterministic)
}
func (m *IptunKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IptunKey.Merge(m, src)
}
func (m *IptunKey) XXX_Size() int {
	return xxx_messageInfo_IptunKey.Size(m)
}
func (m *IptunKey) XXX_DiscardUnknown() {
	xxx_messageInfo_IptunKey.DiscardUnknown(m)
}

var xxx_messageInfo_IptunKey proto.InternalMessageInfo

func (m *IptunKey) GetNId() uint32 {
	if m != nil {
		return m.NId
	}
	return 0
}

func (m *IptunKey) GetRemote() []byte {
	if m != nil {
		return m.Remote
	}
	return nil
}

//
// Messages
//
type Stat struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Val                  uint64   `protobuf:"varint,2,opt,name=val,proto3" json:"val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stat) Reset()         { *m = Stat{} }
func (m *Stat) String() string { return proto.CompactTextString(m) }
func (*Stat) ProtoMessage()    {}
func (*Stat) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{27}
}

func (m *Stat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stat.Unmarshal(m, b)
}
func (m *Stat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stat.Marshal(b, m, deterministic)
}
func (m *Stat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stat.Merge(m, src)
}
func (m *Stat) XXX_Size() int {
	return xxx_messageInfo_Stat.Size(m)
}
func (m *Stat) XXX_DiscardUnknown() {
	xxx_messageInfo_Stat.DiscardUnknown(m)
}

var xxx_messageInfo_Stat proto.InternalMessageInfo

func (m *Stat) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Stat) GetVal() uint64 {
	if m != nil {
		return m.Val
	}
	return 0
}

type Node struct {
	Ip                   []byte   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	NId                  uint32   `protobuf:"varint,2,opt,name=n_id,json=nId,proto3" json:"n_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{28}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetIp() []byte {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *Node) GetNId() uint32 {
	if m != nil {
		return m.NId
	}
	return 0
}

type Vpn struct {
	Ip                   []byte   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Mask                 []byte   `protobuf:"bytes,2,opt,name=mask,proto3" json:"mask,omitempty"`
	Gw                   []byte   `protobuf:"bytes,3,opt,name=gw,proto3" json:"gw,omitempty"`
	Label                uint32   `protobuf:"varint,4,opt,name=label,proto3" json:"label,omitempty"`
	VpnGw                []byte   `protobuf:"bytes,5,opt,name=vpn_gw,json=vpnGw,proto3" json:"vpn_gw,omitempty"`
	NId                  uint32   `protobuf:"varint,6,opt,name=n_id,json=nId,proto3" json:"n_id,omitempty"`
	VpnId                uint32   `protobuf:"varint,7,opt,name=vpn_id,json=vpnId,proto3" json:"vpn_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vpn) Reset()         { *m = Vpn{} }
func (m *Vpn) String() string { return proto.CompactTextString(m) }
func (*Vpn) ProtoMessage()    {}
func (*Vpn) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{29}
}

func (m *Vpn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vpn.Unmarshal(m, b)
}
func (m *Vpn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vpn.Marshal(b, m, deterministic)
}
func (m *Vpn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vpn.Merge(m, src)
}
func (m *Vpn) XXX_Size() int {
	return xxx_messageInfo_Vpn.Size(m)
}
func (m *Vpn) XXX_DiscardUnknown() {
	xxx_messageInfo_Vpn.DiscardUnknown(m)
}

var xxx_messageInfo_Vpn proto.InternalMessageInfo

func (m *Vpn) GetIp() []byte {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *Vpn) GetMask() []byte {
	if m != nil {
		return m.Mask
	}
	return nil
}

func (m *Vpn) GetGw() []byte {
	if m != nil {
		return m.Gw
	}
	return nil
}

func (m *Vpn) GetLabel() uint32 {
	if m != nil {
		return m.Label
	}
	return 0
}

func (m *Vpn) GetVpnGw() []byte {
	if m != nil {
		return m.VpnGw
	}
	return nil
}

func (m *Vpn) GetNId() uint32 {
	if m != nil {
		return m.NId
	}
	return 0
}

func (m *Vpn) GetVpnId() uint32 {
	if m != nil {
		return m.VpnId
	}
	return 0
}

type Iptun struct {
	Link                 *Link    `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	LocalMac             []byte   `protobuf:"bytes,2,opt,name=local_mac,json=localMac,proto3" json:"local_mac,omitempty"`
	NId                  uint32   `protobuf:"varint,3,opt,name=n_id,json=nId,proto3" json:"n_id,omitempty"`
	TnlId                uint32   `protobuf:"varint,4,opt,name=tnl_id,json=tnlId,proto3" json:"tnl_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Iptun) Reset()         { *m = Iptun{} }
func (m *Iptun) String() string { return proto.CompactTextString(m) }
func (*Iptun) ProtoMessage()    {}
func (*Iptun) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{30}
}

func (m *Iptun) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Iptun.Unmarshal(m, b)
}
func (m *Iptun) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Iptun.Marshal(b, m, deterministic)
}
func (m *Iptun) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Iptun.Merge(m, src)
}
func (m *Iptun) XXX_Size() int {
	return xxx_messageInfo_Iptun.Size(m)
}
func (m *Iptun) XXX_DiscardUnknown() {
	xxx_messageInfo_Iptun.DiscardUnknown(m)
}

var xxx_messageInfo_Iptun proto.InternalMessageInfo

func (m *Iptun) GetLink() *Link {
	if m != nil {
		return m.Link
	}
	return nil
}

func (m *Iptun) GetLocalMac() []byte {
	if m != nil {
		return m.LocalMac
	}
	return nil
}

func (m *Iptun) GetNId() uint32 {
	if m != nil {
		return m.NId
	}
	return 0
}

func (m *Iptun) GetTnlId() uint32 {
	if m != nil {
		return m.TnlId
	}
	return 0
}

type LinkAttrs struct {
	Index                int32         `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Mtu                  int32         `protobuf:"varint,2,opt,name=mtu,proto3" json:"mtu,omitempty"`
	TxQLen               int32         `protobuf:"varint,3,opt,name=tx_q_len,json=txQLen,proto3" json:"tx_q_len,omitempty"`
	Name                 string        `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	HardwareAddr         []byte        `protobuf:"bytes,5,opt,name=hardware_addr,json=hardwareAddr,proto3" json:"hardware_addr,omitempty"`
	Flags                uint32        `protobuf:"varint,6,opt,name=flags,proto3" json:"flags,omitempty"`
	RawFlags             uint32        `protobuf:"varint,7,opt,name=raw_flags,json=rawFlags,proto3" json:"raw_flags,omitempty"`
	ParentIndex          int32         `protobuf:"varint,8,opt,name=parent_index,json=parentIndex,proto3" json:"parent_index,omitempty"`
	MasterIndex          int32         `protobuf:"varint,9,opt,name=master_index,json=masterIndex,proto3" json:"master_index,omitempty"`
	Alias                string        `protobuf:"bytes,10,opt,name=alias,proto3" json:"alias,omitempty"`
	Promisc              int32         `protobuf:"varint,11,opt,name=promisc,proto3" json:"promisc,omitempty"`
	EncapType            string        `protobuf:"bytes,12,opt,name=encap_type,json=encapType,proto3" json:"encap_type,omitempty"`
	OperState            LinkOperState `protobuf:"varint,13,opt,name=oper_state,json=operState,proto3,enum=nlaapi.LinkOperState" json:"oper_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *LinkAttrs) Reset()         { *m = LinkAttrs{} }
func (m *LinkAttrs) String() string { return proto.CompactTextString(m) }
func (*LinkAttrs) ProtoMessage()    {}
func (*LinkAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{31}
}

func (m *LinkAttrs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinkAttrs.Unmarshal(m, b)
}
func (m *LinkAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinkAttrs.Marshal(b, m, deterministic)
}
func (m *LinkAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinkAttrs.Merge(m, src)
}
func (m *LinkAttrs) XXX_Size() int {
	return xxx_messageInfo_LinkAttrs.Size(m)
}
func (m *LinkAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_LinkAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_LinkAttrs proto.InternalMessageInfo

func (m *LinkAttrs) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *LinkAttrs) GetMtu() int32 {
	if m != nil {
		return m.Mtu
	}
	return 0
}

func (m *LinkAttrs) GetTxQLen() int32 {
	if m != nil {
		return m.TxQLen
	}
	return 0
}

func (m *LinkAttrs) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LinkAttrs) GetHardwareAddr() []byte {
	if m != nil {
		return m.HardwareAddr
	}
	return nil
}

func (m *LinkAttrs) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *LinkAttrs) GetRawFlags() uint32 {
	if m != nil {
		return m.RawFlags
	}
	return 0
}

func (m *LinkAttrs) GetParentIndex() int32 {
	if m != nil {
		return m.ParentIndex
	}
	return 0
}

func (m *LinkAttrs) GetMasterIndex() int32 {
	if m != nil {
		return m.MasterIndex
	}
	return 0
}

func (m *LinkAttrs) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *LinkAttrs) GetPromisc() int32 {
	if m != nil {
		return m.Promisc
	}
	return 0
}

func (m *LinkAttrs) GetEncapType() string {
	if m != nil {
		return m.EncapType
	}
	return ""
}

func (m *LinkAttrs) GetOperState() LinkOperState {
	if m != nil {
		return m.OperState
	}
	return LinkOperState_OperUnknown
}

type GenericLinkAttrs struct {
	LinkAttrs            *LinkAttrs `protobuf:"bytes,1,opt,name=link_attrs,json=linkAttrs,proto3" json:"link_attrs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GenericLinkAttrs) Reset()         { *m = GenericLinkAttrs{} }
func (m *GenericLinkAttrs) String() string { return proto.CompactTextString(m) }
func (*GenericLinkAttrs) ProtoMessage()    {}
func (*GenericLinkAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{32}
}

func (m *GenericLinkAttrs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenericLinkAttrs.Unmarshal(m, b)
}
func (m *GenericLinkAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenericLinkAttrs.Marshal(b, m, deterministic)
}
func (m *GenericLinkAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenericLinkAttrs.Merge(m, src)
}
func (m *GenericLinkAttrs) XXX_Size() int {
	return xxx_messageInfo_GenericLinkAttrs.Size(m)
}
func (m *GenericLinkAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_GenericLinkAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_GenericLinkAttrs proto.InternalMessageInfo

func (m *GenericLinkAttrs) GetLinkAttrs() *LinkAttrs {
	if m != nil {
		return m.LinkAttrs
	}
	return nil
}

type DeviceLinkAttrs struct {
	LinkAttrs            *LinkAttrs `protobuf:"bytes,1,opt,name=link_attrs,json=linkAttrs,proto3" json:"link_attrs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DeviceLinkAttrs) Reset()         { *m = DeviceLinkAttrs{} }
func (m *DeviceLinkAttrs) String() string { return proto.CompactTextString(m) }
func (*DeviceLinkAttrs) ProtoMessage()    {}
func (*DeviceLinkAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{33}
}

func (m *DeviceLinkAttrs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceLinkAttrs.Unmarshal(m, b)
}
func (m *DeviceLinkAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceLinkAttrs.Marshal(b, m, deterministic)
}
func (m *DeviceLinkAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceLinkAttrs.Merge(m, src)
}
func (m *DeviceLinkAttrs) XXX_Size() int {
	return xxx_messageInfo_DeviceLinkAttrs.Size(m)
}
func (m *DeviceLinkAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceLinkAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceLinkAttrs proto.InternalMessageInfo

func (m *DeviceLinkAttrs) GetLinkAttrs() *LinkAttrs {
	if m != nil {
		return m.LinkAttrs
	}
	return nil
}

type BridgeLinkAttrs struct {
	LinkAttrs            *LinkAttrs `protobuf:"bytes,1,opt,name=link_attrs,json=linkAttrs,proto3" json:"link_attrs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *BridgeLinkAttrs) Reset()         { *m = BridgeLinkAttrs{} }
func (m *BridgeLinkAttrs) String() string { return proto.CompactTextString(m) }
func (*BridgeLinkAttrs) ProtoMessage()    {}
func (*BridgeLinkAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{34}
}

func (m *BridgeLinkAttrs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BridgeLinkAttrs.Unmarshal(m, b)
}
func (m *BridgeLinkAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BridgeLinkAttrs.Marshal(b, m, deterministic)
}
func (m *BridgeLinkAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BridgeLinkAttrs.Merge(m, src)
}
func (m *BridgeLinkAttrs) XXX_Size() int {
	return xxx_messageInfo_BridgeLinkAttrs.Size(m)
}
func (m *BridgeLinkAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_BridgeLinkAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_BridgeLinkAttrs proto.InternalMessageInfo

func (m *BridgeLinkAttrs) GetLinkAttrs() *LinkAttrs {
	if m != nil {
		return m.LinkAttrs
	}
	return nil
}

type VlanLinkAttrs struct {
	LinkAttrs            *LinkAttrs `protobuf:"bytes,1,opt,name=link_attrs,json=linkAttrs,proto3" json:"link_attrs,omitempty"`
	VlanId               int32      `protobuf:"varint,2,opt,name=vlan_id,json=vlanId,proto3" json:"vlan_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *VlanLinkAttrs) Reset()         { *m = VlanLinkAttrs{} }
func (m *VlanLinkAttrs) String() string { return proto.CompactTextString(m) }
func (*VlanLinkAttrs) ProtoMessage()    {}
func (*VlanLinkAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{35}
}

func (m *VlanLinkAttrs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VlanLinkAttrs.Unmarshal(m, b)
}
func (m *VlanLinkAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VlanLinkAttrs.Marshal(b, m, deterministic)
}
func (m *VlanLinkAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VlanLinkAttrs.Merge(m, src)
}
func (m *VlanLinkAttrs) XXX_Size() int {
	return xxx_messageInfo_VlanLinkAttrs.Size(m)
}
func (m *VlanLinkAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_VlanLinkAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_VlanLinkAttrs proto.InternalMessageInfo

func (m *VlanLinkAttrs) GetLinkAttrs() *LinkAttrs {
	if m != nil {
		return m.LinkAttrs
	}
	return nil
}

func (m *VlanLinkAttrs) GetVlanId() int32 {
	if m != nil {
		return m.VlanId
	}
	return 0
}

type VxlanLinkAttrs struct {
	LinkAttrs            *LinkAttrs `protobuf:"bytes,1,opt,name=link_attrs,json=linkAttrs,proto3" json:"link_attrs,omitempty"`
	VxlanId              int32      `protobuf:"varint,2,opt,name=vxlan_id,json=vxlanId,proto3" json:"vxlan_id,omitempty"`
	VtepDevIndex         int32      `protobuf:"varint,3,opt,name=vtep_dev_index,json=vtepDevIndex,proto3" json:"vtep_dev_index,omitempty"`
	SrcAddr              []byte     `protobuf:"bytes,4,opt,name=src_addr,json=srcAddr,proto3" json:"src_addr,omitempty"`
	Group                []byte     `protobuf:"bytes,5,opt,name=group,proto3" json:"group,omitempty"`
	Ttl                  int32      `protobuf:"varint,6,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Tos                  int32      `protobuf:"varint,7,opt,name=tos,proto3" json:"tos,omitempty"`
	Learning             bool       `protobuf:"varint,8,opt,name=learning,proto3" json:"learning,omitempty"`
	Proxy                bool       `protobuf:"varint,9,opt,name=proxy,proto3" json:"proxy,omitempty"`
	Rsc                  bool       `protobuf:"varint,10,opt,name=rsc,proto3" json:"rsc,omitempty"`
	L2Miss               bool       `protobuf:"varint,11,opt,name=l2miss,proto3" json:"l2miss,omitempty"`
	L3Miss               bool       `protobuf:"varint,12,opt,name=l3miss,proto3" json:"l3miss,omitempty"`
	UdpCSum              bool       `protobuf:"varint,13,opt,name=udp_c_sum,json=udpCSum,proto3" json:"udp_c_sum,omitempty"`
	NoAge                bool       `protobuf:"varint,14,opt,name=no_age,json=noAge,proto3" json:"no_age,omitempty"`
	Gbp                  bool       `protobuf:"varint,15,opt,name=gbp,proto3" json:"gbp,omitempty"`
	Age                  int32      `protobuf:"varint,16,opt,name=age,proto3" json:"age,omitempty"`
	Limit                int32      `protobuf:"varint,17,opt,name=limit,proto3" json:"limit,omitempty"`
	Port                 int32      `protobuf:"varint,18,opt,name=port,proto3" json:"port,omitempty"`
	PortLow              int32      `protobuf:"varint,19,opt,name=port_low,json=portLow,proto3" json:"port_low,omitempty"`
	PortHigh             int32      `protobuf:"varint,20,opt,name=port_high,json=portHigh,proto3" json:"port_high,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *VxlanLinkAttrs) Reset()         { *m = VxlanLinkAttrs{} }
func (m *VxlanLinkAttrs) String() string { return proto.CompactTextString(m) }
func (*VxlanLinkAttrs) ProtoMessage()    {}
func (*VxlanLinkAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{36}
}

func (m *VxlanLinkAttrs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VxlanLinkAttrs.Unmarshal(m, b)
}
func (m *VxlanLinkAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VxlanLinkAttrs.Marshal(b, m, deterministic)
}
func (m *VxlanLinkAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VxlanLinkAttrs.Merge(m, src)
}
func (m *VxlanLinkAttrs) XXX_Size() int {
	return xxx_messageInfo_VxlanLinkAttrs.Size(m)
}
func (m *VxlanLinkAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_VxlanLinkAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_VxlanLinkAttrs proto.InternalMessageInfo

func (m *VxlanLinkAttrs) GetLinkAttrs() *LinkAttrs {
	if m != nil {
		return m.LinkAttrs
	}
	return nil
}

func (m *VxlanLinkAttrs) GetVxlanId() int32 {
	if m != nil {
		return m.VxlanId
	}
	return 0
}

func (m *VxlanLinkAttrs) GetVtepDevIndex() int32 {
	if m != nil {
		return m.VtepDevIndex
	}
	return 0
}

func (m *VxlanLinkAttrs) GetSrcAddr() []byte {
	if m != nil {
		return m.SrcAddr
	}
	return nil
}

func (m *VxlanLinkAttrs) GetGroup() []byte {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *VxlanLinkAttrs) GetTtl() int32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *VxlanLinkAttrs) GetTos() int32 {
	if m != nil {
		return m.Tos
	}
	return 0
}

func (m *VxlanLinkAttrs) GetLearning() bool {
	if m != nil {
		return m.Learning
	}
	return false
}

func (m *VxlanLinkAttrs) GetProxy() bool {
	if m != nil {
		return m.Proxy
	}
	return false
}

func (m *VxlanLinkAttrs) GetRsc() bool {
	if m != nil {
		return m.Rsc
	}
	return false
}

func (m *VxlanLinkAttrs) GetL2Miss() bool {
	if m != nil {
		return m.L2Miss
	}
	return false
}

func (m *VxlanLinkAttrs) GetL3Miss() bool {
	if m != nil {
		return m.L3Miss
	}
	return false
}

func (m *VxlanLinkAttrs) GetUdpCSum() bool {
	if m != nil {
		return m.UdpCSum
	}
	return false
}

func (m *VxlanLinkAttrs) GetNoAge() bool {
	if m != nil {
		return m.NoAge
	}
	return false
}

func (m *VxlanLinkAttrs) GetGbp() bool {
	if m != nil {
		return m.Gbp
	}
	return false
}

func (m *VxlanLinkAttrs) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *VxlanLinkAttrs) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *VxlanLinkAttrs) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *VxlanLinkAttrs) GetPortLow() int32 {
	if m != nil {
		return m.PortLow
	}
	return 0
}

func (m *VxlanLinkAttrs) GetPortHigh() int32 {
	if m != nil {
		return m.PortHigh
	}
	return 0
}

type VtiLinkAttrs struct {
	LinkAttrs            *LinkAttrs `protobuf:"bytes,1,opt,name=link_attrs,json=linkAttrs,proto3" json:"link_attrs,omitempty"`
	IKey                 uint32     `protobuf:"varint,2,opt,name=i_key,json=iKey,proto3" json:"i_key,omitempty"`
	OKey                 uint32     `protobuf:"varint,3,opt,name=o_key,json=oKey,proto3" json:"o_key,omitempty"`
	Link                 uint32     `protobuf:"varint,4,opt,name=link,proto3" json:"link,omitempty"`
	Local                []byte     `protobuf:"bytes,5,opt,name=local,proto3" json:"local,omitempty"`
	Remote               []byte     `protobuf:"bytes,6,opt,name=remote,proto3" json:"remote,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *VtiLinkAttrs) Reset()         { *m = VtiLinkAttrs{} }
func (m *VtiLinkAttrs) String() string { return proto.CompactTextString(m) }
func (*VtiLinkAttrs) ProtoMessage()    {}
func (*VtiLinkAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{37}
}

func (m *VtiLinkAttrs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VtiLinkAttrs.Unmarshal(m, b)
}
func (m *VtiLinkAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VtiLinkAttrs.Marshal(b, m, deterministic)
}
func (m *VtiLinkAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VtiLinkAttrs.Merge(m, src)
}
func (m *VtiLinkAttrs) XXX_Size() int {
	return xxx_messageInfo_VtiLinkAttrs.Size(m)
}
func (m *VtiLinkAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_VtiLinkAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_VtiLinkAttrs proto.InternalMessageInfo

func (m *VtiLinkAttrs) GetLinkAttrs() *LinkAttrs {
	if m != nil {
		return m.LinkAttrs
	}
	return nil
}

func (m *VtiLinkAttrs) GetIKey() uint32 {
	if m != nil {
		return m.IKey
	}
	return 0
}

func (m *VtiLinkAttrs) GetOKey() uint32 {
	if m != nil {
		return m.OKey
	}
	return 0
}

func (m *VtiLinkAttrs) GetLink() uint32 {
	if m != nil {
		return m.Link
	}
	return 0
}

func (m *VtiLinkAttrs) GetLocal() []byte {
	if m != nil {
		return m.Local
	}
	return nil
}

func (m *VtiLinkAttrs) GetRemote() []byte {
	if m != nil {
		return m.Remote
	}
	return nil
}

type VethLinkAttrs struct {
	LinkAttrs            *LinkAttrs `protobuf:"bytes,1,opt,name=link_attrs,json=linkAttrs,proto3" json:"link_attrs,omitempty"`
	PeerName             string     `protobuf:"bytes,2,opt,name=peer_name,json=peerName,proto3" json:"peer_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *VethLinkAttrs) Reset()         { *m = VethLinkAttrs{} }
func (m *VethLinkAttrs) String() string { return proto.CompactTextString(m) }
func (*VethLinkAttrs) ProtoMessage()    {}
func (*VethLinkAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{38}
}

func (m *VethLinkAttrs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VethLinkAttrs.Unmarshal(m, b)
}
func (m *VethLinkAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VethLinkAttrs.Marshal(b, m, deterministic)
}
func (m *VethLinkAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VethLinkAttrs.Merge(m, src)
}
func (m *VethLinkAttrs) XXX_Size() int {
	return xxx_messageInfo_VethLinkAttrs.Size(m)
}
func (m *VethLinkAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_VethLinkAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_VethLinkAttrs proto.InternalMessageInfo

func (m *VethLinkAttrs) GetLinkAttrs() *LinkAttrs {
	if m != nil {
		return m.LinkAttrs
	}
	return nil
}

func (m *VethLinkAttrs) GetPeerName() string {
	if m != nil {
		return m.PeerName
	}
	return ""
}

type BondAdInfo struct {
	AggregatorId         int32    `protobuf:"varint,1,opt,name=aggregator_id,json=aggregatorId,proto3" json:"aggregator_id,omitempty"`
	NumPorts             int32    `protobuf:"varint,2,opt,name=num_ports,json=numPorts,proto3" json:"num_ports,omitempty"`
	ActorKey             int32    `protobuf:"varint,3,opt,name=actor_key,json=actorKey,proto3" json:"actor_key,omitempty"`
	PartnerKey           int32    `protobuf:"varint,4,opt,name=partner_key,json=partnerKey,proto3" json:"partner_key,omitempty"`
	PartnerMac           []byte   `protobuf:"bytes,5,opt,name=partner_mac,json=partnerMac,proto3" json:"partner_mac,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BondAdInfo) Reset()         { *m = BondAdInfo{} }
func (m *BondAdInfo) String() string { return proto.CompactTextString(m) }
func (*BondAdInfo) ProtoMessage()    {}
func (*BondAdInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{39}
}

func (m *BondAdInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BondAdInfo.Unmarshal(m, b)
}
func (m *BondAdInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BondAdInfo.Marshal(b, m, deterministic)
}
func (m *BondAdInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BondAdInfo.Merge(m, src)
}
func (m *BondAdInfo) XXX_Size() int {
	return xxx_messageInfo_BondAdInfo.Size(m)
}
func (m *BondAdInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BondAdInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BondAdInfo proto.InternalMessageInfo

func (m *BondAdInfo) GetAggregatorId() int32 {
	if m != nil {
		return m.AggregatorId
	}
	return 0
}

func (m *BondAdInfo) GetNumPorts() int32 {
	if m != nil {
		return m.NumPorts
	}
	return 0
}

func (m *BondAdInfo) GetActorKey() int32 {
	if m != nil {
		return m.ActorKey
	}
	return 0
}

func (m *BondAdInfo) GetPartnerKey() int32 {
	if m != nil {
		return m.PartnerKey
	}
	return 0
}

func (m *BondAdInfo) GetPartnerMac() []byte {
	if m != nil {
		return m.PartnerMac
	}
	return nil
}

type BondLinkAttrs struct {
	LinkAttrs            *LinkAttrs          `protobuf:"bytes,1,opt,name=link_attrs,json=linkAttrs,proto3" json:"link_attrs,omitempty"`
	Mode                 BondMode            `protobuf:"varint,2,opt,name=mode,proto3,enum=nlaapi.BondMode" json:"mode,omitempty"`
	ActiveSlave          int32               `protobuf:"varint,3,opt,name=active_slave,json=activeSlave,proto3" json:"active_slave,omitempty"`
	Miimon               int32               `protobuf:"varint,4,opt,name=miimon,proto3" json:"miimon,omitempty"`
	UpDelay              int32               `protobuf:"varint,5,opt,name=up_delay,json=upDelay,proto3" json:"up_delay,omitempty"`
	DownDelay            int32               `protobuf:"varint,6,opt,name=down_delay,json=downDelay,proto3" json:"down_delay,omitempty"`
	UseCarrier           int32               `protobuf:"varint,7,opt,name=use_carrier,json=useCarrier,proto3" json:"use_carrier,omitempty"`
	ArpInterval          int32               `protobuf:"varint,8,opt,name=arp_interval,json=arpInterval,proto3" json:"arp_interval,omitempty"`
	ArpIpTargets         [][]byte            `protobuf:"bytes,9,rep,name=arp_ip_targets,json=arpIpTargets,proto3" json:"arp_ip_targets,omitempty"`
	ArpValidate          BondArpValidate     `protobuf:"varint,10,opt,name=arp_validate,json=arpValidate,proto3,enum=nlaapi.BondArpValidate" json:"arp_validate,omitempty"`
	ArpAllTargets        BondArpAllTargets   `protobuf:"varint,11,opt,name=arp_all_targets,json=arpAllTargets,proto3,enum=nlaapi.BondArpAllTargets" json:"arp_all_targets,omitempty"`
	Primary              int32               `protobuf:"varint,12,opt,name=primary,proto3" json:"primary,omitempty"`
	PrimaryReselect      BondPrimaryReselect `protobuf:"varint,13,opt,name=primary_reselect,json=primaryReselect,proto3,enum=nlaapi.BondPrimaryReselect" json:"primary_reselect,omitempty"`
	FailOverMac          BondFailOverMac     `protobuf:"varint,14,opt,name=fail_over_mac,json=failOverMac,proto3,enum=nlaapi.BondFailOverMac" json:"fail_over_mac,omitempty"`
	XmitHashPolicy       BondXmitHashPolicy  `protobuf:"varint,15,opt,name=xmit_hash_policy,json=xmitHashPolicy,proto3,enum=nlaapi.BondXmitHashPolicy" json:"xmit_hash_policy,omitempty"`
	ResendIgmp           int32               `protobuf:"varint,16,opt,name=resend_igmp,json=resendIgmp,proto3" json:"resend_igmp,omitempty"`
	NumPeerNotif         int32               `protobuf:"varint,17,opt,name=num_peer_notif,json=numPeerNotif,proto3" json:"num_peer_notif,omitempty"`
	AllSlavesActive      int32               `protobuf:"varint,18,opt,name=all_slaves_active,json=allSlavesActive,proto3" json:"all_slaves_active,omitempty"`
	MinLinks             int32               `protobuf:"varint,19,opt,name=min_links,json=minLinks,proto3" json:"min_links,omitempty"`
	LpInterval           int32               `protobuf:"varint,20,opt,name=lp_interval,json=lpInterval,proto3" json:"lp_interval,omitempty"`
	PackersPerSlave      int32               `protobuf:"varint,21,opt,name=packers_per_slave,json=packersPerSlave,proto3" json:"packers_per_slave,omitempty"`
	LacpRate             BondLacpRate        `protobuf:"varint,22,opt,name=lacp_rate,json=lacpRate,proto3,enum=nlaapi.BondLacpRate" json:"lacp_rate,omitempty"`
	AdSelect             BondAdSelect        `protobuf:"varint,23,opt,name=ad_select,json=adSelect,proto3,enum=nlaapi.BondAdSelect" json:"ad_select,omitempty"`
	AdInfo               *BondAdInfo         `protobuf:"bytes,24,opt,name=ad_info,json=adInfo,proto3" json:"ad_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *BondLinkAttrs) Reset()         { *m = BondLinkAttrs{} }
func (m *BondLinkAttrs) String() string { return proto.CompactTextString(m) }
func (*BondLinkAttrs) ProtoMessage()    {}
func (*BondLinkAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{40}
}

func (m *BondLinkAttrs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BondLinkAttrs.Unmarshal(m, b)
}
func (m *BondLinkAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BondLinkAttrs.Marshal(b, m, deterministic)
}
func (m *BondLinkAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BondLinkAttrs.Merge(m, src)
}
func (m *BondLinkAttrs) XXX_Size() int {
	return xxx_messageInfo_BondLinkAttrs.Size(m)
}
func (m *BondLinkAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_BondLinkAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_BondLinkAttrs proto.InternalMessageInfo

func (m *BondLinkAttrs) GetLinkAttrs() *LinkAttrs {
	if m != nil {
		return m.LinkAttrs
	}
	return nil
}

func (m *BondLinkAttrs) GetMode() BondMode {
	if m != nil {
		return m.Mode
	}
	return BondMode_BOND_MODE_BALANCE_RR
}

func (m *BondLinkAttrs) GetActiveSlave() int32 {
	if m != nil {
		return m.ActiveSlave
	}
	return 0
}

func (m *BondLinkAttrs) GetMiimon() int32 {
	if m != nil {
		return m.Miimon
	}
	return 0
}

func (m *BondLinkAttrs) GetUpDelay() int32 {
	if m != nil {
		return m.UpDelay
	}
	return 0
}

func (m *BondLinkAttrs) GetDownDelay() int32 {
	if m != nil {
		return m.DownDelay
	}
	return 0
}

func (m *BondLinkAttrs) GetUseCarrier() int32 {
	if m != nil {
		return m.UseCarrier
	}
	return 0
}

func (m *BondLinkAttrs) GetArpInterval() int32 {
	if m != nil {
		return m.ArpInterval
	}
	return 0
}

func (m *BondLinkAttrs) GetArpIpTargets() [][]byte {
	if m != nil {
		return m.ArpIpTargets
	}
	return nil
}

func (m *BondLinkAttrs) GetArpValidate() BondArpValidate {
	if m != nil {
		return m.ArpValidate
	}
	return BondArpValidate_BOND_ARP_VALIDATE_NONE
}

func (m *BondLinkAttrs) GetArpAllTargets() BondArpAllTargets {
	if m != nil {
		return m.ArpAllTargets
	}
	return BondArpAllTargets_BOND_ARP_ALL_TARGETS_ANY
}

func (m *BondLinkAttrs) GetPrimary() int32 {
	if m != nil {
		return m.Primary
	}
	return 0
}

func (m *BondLinkAttrs) GetPrimaryReselect() BondPrimaryReselect {
	if m != nil {
		return m.PrimaryReselect
	}
	return BondPrimaryReselect_BOND_PRIMARY_RESELECT_ALWAYS
}

func (m *BondLinkAttrs) GetFailOverMac() BondFailOverMac {
	if m != nil {
		return m.FailOverMac
	}
	return BondFailOverMac_BOND_FAIL_OVER_MAC_NONE
}

func (m *BondLinkAttrs) GetXmitHashPolicy() BondXmitHashPolicy {
	if m != nil {
		return m.XmitHashPolicy
	}
	return BondXmitHashPolicy_BOND_XMIT_HASH_POLICY_LAYER2
}

func (m *BondLinkAttrs) GetResendIgmp() int32 {
	if m != nil {
		return m.ResendIgmp
	}
	return 0
}

func (m *BondLinkAttrs) GetNumPeerNotif() int32 {
	if m != nil {
		return m.NumPeerNotif
	}
	return 0
}

func (m *BondLinkAttrs) GetAllSlavesActive() int32 {
	if m != nil {
		return m.AllSlavesActive
	}
	return 0
}

func (m *BondLinkAttrs) GetMinLinks() int32 {
	if m != nil {
		return m.MinLinks
	}
	return 0
}

func (m *BondLinkAttrs) GetLpInterval() int32 {
	if m != nil {
		return m.LpInterval
	}
	return 0
}

func (m *BondLinkAttrs) GetPackersPerSlave() int32 {
	if m != nil {
		return m.PackersPerSlave
	}
	return 0
}

func (m *BondLinkAttrs) GetLacpRate() BondLacpRate {
	if m != nil {
		return m.LacpRate
	}
	return BondLacpRate_BOND_LACP_RATE_SLOW
}

func (m *BondLinkAttrs) GetAdSelect() BondAdSelect {
	if m != nil {
		return m.AdSelect
	}
	return BondAdSelect_BOND_AD_SELECT_STABLE
}

func (m *BondLinkAttrs) GetAdInfo() *BondAdInfo {
	if m != nil {
		return m.AdInfo
	}
	return nil
}

type IptunLinkAttrs struct {
	LinkAttrs            *LinkAttrs `protobuf:"bytes,1,opt,name=link_attrs,json=linkAttrs,proto3" json:"link_attrs,omitempty"`
	Ttl                  uint32     `protobuf:"varint,2,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Tos                  uint32     `protobuf:"varint,3,opt,name=tos,proto3" json:"tos,omitempty"`
	PMtuDisc             uint32     `protobuf:"varint,4,opt,name=p_mtu_disc,json=pMtuDisc,proto3" json:"p_mtu_disc,omitempty"`
	Link                 uint32     `protobuf:"varint,5,opt,name=link,proto3" json:"link,omitempty"`
	Local                []byte     `protobuf:"bytes,6,opt,name=local,proto3" json:"local,omitempty"`
	Remote               []byte     `protobuf:"bytes,7,opt,name=remote,proto3" json:"remote,omitempty"`
	EncapSport           uint32     `protobuf:"varint,8,opt,name=encap_sport,json=encapSport,proto3" json:"encap_sport,omitempty"`
	EncapDport           uint32     `protobuf:"varint,9,opt,name=encap_dport,json=encapDport,proto3" json:"encap_dport,omitempty"`
	EncapType            uint32     `protobuf:"varint,10,opt,name=encap_type,json=encapType,proto3" json:"encap_type,omitempty"`
	EncapFlags           uint32     `protobuf:"varint,11,opt,name=encap_flags,json=encapFlags,proto3" json:"encap_flags,omitempty"`
	FlowBased            bool       `protobuf:"varint,12,opt,name=flow_based,json=flowBased,proto3" json:"flow_based,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *IptunLinkAttrs) Reset()         { *m = IptunLinkAttrs{} }
func (m *IptunLinkAttrs) String() string { return proto.CompactTextString(m) }
func (*IptunLinkAttrs) ProtoMessage()    {}
func (*IptunLinkAttrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{41}
}

func (m *IptunLinkAttrs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IptunLinkAttrs.Unmarshal(m, b)
}
func (m *IptunLinkAttrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IptunLinkAttrs.Marshal(b, m, deterministic)
}
func (m *IptunLinkAttrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IptunLinkAttrs.Merge(m, src)
}
func (m *IptunLinkAttrs) XXX_Size() int {
	return xxx_messageInfo_IptunLinkAttrs.Size(m)
}
func (m *IptunLinkAttrs) XXX_DiscardUnknown() {
	xxx_messageInfo_IptunLinkAttrs.DiscardUnknown(m)
}

var xxx_messageInfo_IptunLinkAttrs proto.InternalMessageInfo

func (m *IptunLinkAttrs) GetLinkAttrs() *LinkAttrs {
	if m != nil {
		return m.LinkAttrs
	}
	return nil
}

func (m *IptunLinkAttrs) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *IptunLinkAttrs) GetTos() uint32 {
	if m != nil {
		return m.Tos
	}
	return 0
}

func (m *IptunLinkAttrs) GetPMtuDisc() uint32 {
	if m != nil {
		return m.PMtuDisc
	}
	return 0
}

func (m *IptunLinkAttrs) GetLink() uint32 {
	if m != nil {
		return m.Link
	}
	return 0
}

func (m *IptunLinkAttrs) GetLocal() []byte {
	if m != nil {
		return m.Local
	}
	return nil
}

func (m *IptunLinkAttrs) GetRemote() []byte {
	if m != nil {
		return m.Remote
	}
	return nil
}

func (m *IptunLinkAttrs) GetEncapSport() uint32 {
	if m != nil {
		return m.EncapSport
	}
	return 0
}

func (m *IptunLinkAttrs) GetEncapDport() uint32 {
	if m != nil {
		return m.EncapDport
	}
	return 0
}

func (m *IptunLinkAttrs) GetEncapType() uint32 {
	if m != nil {
		return m.EncapType
	}
	return 0
}

func (m *IptunLinkAttrs) GetEncapFlags() uint32 {
	if m != nil {
		return m.EncapFlags
	}
	return 0
}

func (m *IptunLinkAttrs) GetFlowBased() bool {
	if m != nil {
		return m.FlowBased
	}
	return false
}

type Link struct {
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Types that are valid to be assigned to LinkAttrs:
	//	*Link_Device
	//	*Link_Bridge
	//	*Link_Vlan
	//	*Link_Vxlan
	//	*Link_Vti
	//	*Link_Veth
	//	*Link_Bond
	//	*Link_Generic
	//	*Link_Iptun
	LinkAttrs            isLink_LinkAttrs `protobuf_oneof:"link_attrs"`
	NId                  uint32           `protobuf:"varint,2,opt,name=n_id,json=nId,proto3" json:"n_id,omitempty"`
	LnId                 uint32           `protobuf:"varint,3,opt,name=ln_id,json=lnId,proto3" json:"ln_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Link) Reset()         { *m = Link{} }
func (m *Link) String() string { return proto.CompactTextString(m) }
func (*Link) ProtoMessage()    {}
func (*Link) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{42}
}

func (m *Link) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Link.Unmarshal(m, b)
}
func (m *Link) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Link.Marshal(b, m, deterministic)
}
func (m *Link) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Link.Merge(m, src)
}
func (m *Link) XXX_Size() int {
	return xxx_messageInfo_Link.Size(m)
}
func (m *Link) XXX_DiscardUnknown() {
	xxx_messageInfo_Link.DiscardUnknown(m)
}

var xxx_messageInfo_Link proto.InternalMessageInfo

func (m *Link) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type isLink_LinkAttrs interface {
	isLink_LinkAttrs()
}

type Link_Device struct {
	Device *DeviceLinkAttrs `protobuf:"bytes,4,opt,name=device,proto3,oneof"`
}

type Link_Bridge struct {
	Bridge *BridgeLinkAttrs `protobuf:"bytes,5,opt,name=bridge,proto3,oneof"`
}

type Link_Vlan struct {
	Vlan *VlanLinkAttrs `protobuf:"bytes,6,opt,name=vlan,proto3,oneof"`
}

type Link_Vxlan struct {
	Vxlan *VxlanLinkAttrs `protobuf:"bytes,7,opt,name=vxlan,proto3,oneof"`
}

type Link_Vti struct {
	Vti *VtiLinkAttrs `protobuf:"bytes,8,opt,name=vti,proto3,oneof"`
}

type Link_Veth struct {
	Veth *VethLinkAttrs `protobuf:"bytes,9,opt,name=veth,proto3,oneof"`
}

type Link_Bond struct {
	Bond *BondLinkAttrs `protobuf:"bytes,10,opt,name=bond,proto3,oneof"`
}

type Link_Generic struct {
	Generic *GenericLinkAttrs `protobuf:"bytes,11,opt,name=generic,proto3,oneof"`
}

type Link_Iptun struct {
	Iptun *IptunLinkAttrs `protobuf:"bytes,12,opt,name=iptun,proto3,oneof"`
}

func (*Link_Device) isLink_LinkAttrs() {}

func (*Link_Bridge) isLink_LinkAttrs() {}

func (*Link_Vlan) isLink_LinkAttrs() {}

func (*Link_Vxlan) isLink_LinkAttrs() {}

func (*Link_Vti) isLink_LinkAttrs() {}

func (*Link_Veth) isLink_LinkAttrs() {}

func (*Link_Bond) isLink_LinkAttrs() {}

func (*Link_Generic) isLink_LinkAttrs() {}

func (*Link_Iptun) isLink_LinkAttrs() {}

func (m *Link) GetLinkAttrs() isLink_LinkAttrs {
	if m != nil {
		return m.LinkAttrs
	}
	return nil
}

func (m *Link) GetDevice() *DeviceLinkAttrs {
	if x, ok := m.GetLinkAttrs().(*Link_Device); ok {
		return x.Device
	}
	return nil
}

func (m *Link) GetBridge() *BridgeLinkAttrs {
	if x, ok := m.GetLinkAttrs().(*Link_Bridge); ok {
		return x.Bridge
	}
	return nil
}

func (m *Link) GetVlan() *VlanLinkAttrs {
	if x, ok := m.GetLinkAttrs().(*Link_Vlan); ok {
		return x.Vlan
	}
	return nil
}

func (m *Link) GetVxlan() *VxlanLinkAttrs {
	if x, ok := m.GetLinkAttrs().(*Link_Vxlan); ok {
		return x.Vxlan
	}
	return nil
}

func (m *Link) GetVti() *VtiLinkAttrs {
	if x, ok := m.GetLinkAttrs().(*Link_Vti); ok {
		return x.Vti
	}
	return nil
}

func (m *Link) GetVeth() *VethLinkAttrs {
	if x, ok := m.GetLinkAttrs().(*Link_Veth); ok {
		return x.Veth
	}
	return nil
}

func (m *Link) GetBond() *BondLinkAttrs {
	if x, ok := m.GetLinkAttrs().(*Link_Bond); ok {
		return x.Bond
	}
	return nil
}

func (m *Link) GetGeneric() *GenericLinkAttrs {
	if x, ok := m.GetLinkAttrs().(*Link_Generic); ok {
		return x.Generic
	}
	return nil
}

func (m *Link) GetIptun() *IptunLinkAttrs {
	if x, ok := m.GetLinkAttrs().(*Link_Iptun); ok {
		return x.Iptun
	}
	return nil
}

func (m *Link) GetNId() uint32 {
	if m != nil {
		return m.NId
	}
	return 0
}

func (m *Link) GetLnId() uint32 {
	if m != nil {
		return m.LnId
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Link) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Link_Device)(nil),
		(*Link_Bridge)(nil),
		(*Link_Vlan)(nil),
		(*Link_Vxlan)(nil),
		(*Link_Vti)(nil),
		(*Link_Veth)(nil),
		(*Link_Bond)(nil),
		(*Link_Generic)(nil),
		(*Link_Iptun)(nil),
	}
}

type Addr struct {
	Ip                   []byte   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	IpMask               []byte   `protobuf:"bytes,2,opt,name=ip_mask,json=ipMask,proto3" json:"ip_mask,omitempty"`
	Label                string   `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	Flags                int32    `protobuf:"varint,4,opt,name=flags,proto3" json:"flags,omitempty"`
	Scope                int32    `protobuf:"varint,5,opt,name=scope,proto3" json:"scope,omitempty"`
	Peer                 []byte   `protobuf:"bytes,6,opt,name=peer,proto3" json:"peer,omitempty"`
	PeerMask             []byte   `protobuf:"bytes,7,opt,name=peer_mask,json=peerMask,proto3" json:"peer_mask,omitempty"`
	Broadcast            []byte   `protobuf:"bytes,8,opt,name=broadcast,proto3" json:"broadcast,omitempty"`
	Index                int32    `protobuf:"varint,9,opt,name=index,proto3" json:"index,omitempty"`
	Family               int32    `protobuf:"varint,10,opt,name=family,proto3" json:"family,omitempty"`
	NId                  uint32   `protobuf:"varint,11,opt,name=n_id,json=nId,proto3" json:"n_id,omitempty"`
	AdId                 uint32   `protobuf:"varint,12,opt,name=ad_id,json=adId,proto3" json:"ad_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Addr) Reset()         { *m = Addr{} }
func (m *Addr) String() string { return proto.CompactTextString(m) }
func (*Addr) ProtoMessage()    {}
func (*Addr) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{43}
}

func (m *Addr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Addr.Unmarshal(m, b)
}
func (m *Addr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Addr.Marshal(b, m, deterministic)
}
func (m *Addr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Addr.Merge(m, src)
}
func (m *Addr) XXX_Size() int {
	return xxx_messageInfo_Addr.Size(m)
}
func (m *Addr) XXX_DiscardUnknown() {
	xxx_messageInfo_Addr.DiscardUnknown(m)
}

var xxx_messageInfo_Addr proto.InternalMessageInfo

func (m *Addr) GetIp() []byte {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *Addr) GetIpMask() []byte {
	if m != nil {
		return m.IpMask
	}
	return nil
}

func (m *Addr) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Addr) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *Addr) GetScope() int32 {
	if m != nil {
		return m.Scope
	}
	return 0
}

func (m *Addr) GetPeer() []byte {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *Addr) GetPeerMask() []byte {
	if m != nil {
		return m.PeerMask
	}
	return nil
}

func (m *Addr) GetBroadcast() []byte {
	if m != nil {
		return m.Broadcast
	}
	return nil
}

func (m *Addr) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Addr) GetFamily() int32 {
	if m != nil {
		return m.Family
	}
	return 0
}

func (m *Addr) GetNId() uint32 {
	if m != nil {
		return m.NId
	}
	return 0
}

func (m *Addr) GetAdId() uint32 {
	if m != nil {
		return m.AdId
	}
	return 0
}

type NeighNotun struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NeighNotun) Reset()         { *m = NeighNotun{} }
func (m *NeighNotun) String() string { return proto.CompactTextString(m) }
func (*NeighNotun) ProtoMessage()    {}
func (*NeighNotun) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{44}
}

func (m *NeighNotun) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NeighNotun.Unmarshal(m, b)
}
func (m *NeighNotun) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NeighNotun.Marshal(b, m, deterministic)
}
func (m *NeighNotun) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NeighNotun.Merge(m, src)
}
func (m *NeighNotun) XXX_Size() int {
	return xxx_messageInfo_NeighNotun.Size(m)
}
func (m *NeighNotun) XXX_DiscardUnknown() {
	xxx_messageInfo_NeighNotun.DiscardUnknown(m)
}

var xxx_messageInfo_NeighNotun proto.InternalMessageInfo

type NeighIptun struct {
	TunType              string   `protobuf:"bytes,1,opt,name=tun_type,json=tunType,proto3" json:"tun_type,omitempty"`
	SrcIp                []byte   `protobuf:"bytes,2,opt,name=src_ip,json=srcIp,proto3" json:"src_ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NeighIptun) Reset()         { *m = NeighIptun{} }
func (m *NeighIptun) String() string { return proto.CompactTextString(m) }
func (*NeighIptun) ProtoMessage()    {}
func (*NeighIptun) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{45}
}

func (m *NeighIptun) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NeighIptun.Unmarshal(m, b)
}
func (m *NeighIptun) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NeighIptun.Marshal(b, m, deterministic)
}
func (m *NeighIptun) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NeighIptun.Merge(m, src)
}
func (m *NeighIptun) XXX_Size() int {
	return xxx_messageInfo_NeighIptun.Size(m)
}
func (m *NeighIptun) XXX_DiscardUnknown() {
	xxx_messageInfo_NeighIptun.DiscardUnknown(m)
}

var xxx_messageInfo_NeighIptun proto.InternalMessageInfo

func (m *NeighIptun) GetTunType() string {
	if m != nil {
		return m.TunType
	}
	return ""
}

func (m *NeighIptun) GetSrcIp() []byte {
	if m != nil {
		return m.SrcIp
	}
	return nil
}

type Neigh struct {
	LinkIndex    int32  `protobuf:"varint,1,opt,name=link_index,json=linkIndex,proto3" json:"link_index,omitempty"`
	Family       int32  `protobuf:"varint,2,opt,name=family,proto3" json:"family,omitempty"`
	State        int32  `protobuf:"varint,3,opt,name=state,proto3" json:"state,omitempty"`
	Type         int32  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Flags        int32  `protobuf:"varint,5,opt,name=flags,proto3" json:"flags,omitempty"`
	Ip           []byte `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`
	HardwareAddr []byte `protobuf:"bytes,7,opt,name=hardware_addr,json=hardwareAddr,proto3" json:"hardware_addr,omitempty"`
	LlIpAddr     []byte `protobuf:"bytes,8,opt,name=ll_ip_addr,json=llIpAddr,proto3" json:"ll_ip_addr,omitempty"`
	VlanId       int32  `protobuf:"varint,9,opt,name=vlan_id,json=vlanId,proto3" json:"vlan_id,omitempty"`
	Vni          int32  `protobuf:"varint,10,opt,name=vni,proto3" json:"vni,omitempty"`
	NId          uint32 `protobuf:"varint,11,opt,name=n_id,json=nId,proto3" json:"n_id,omitempty"`
	NeId         uint32 `protobuf:"varint,12,opt,name=ne_id,json=neId,proto3" json:"ne_id,omitempty"`
	PhyLink      int32  `protobuf:"varint,13,opt,name=phy_link,json=phyLink,proto3" json:"phy_link,omitempty"`
	// Types that are valid to be assigned to Tunnel:
	//	*Neigh_Notun
	//	*Neigh_Iptun
	Tunnel               isNeigh_Tunnel `protobuf_oneof:"tunnel"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Neigh) Reset()         { *m = Neigh{} }
func (m *Neigh) String() string { return proto.CompactTextString(m) }
func (*Neigh) ProtoMessage()    {}
func (*Neigh) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{46}
}

func (m *Neigh) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Neigh.Unmarshal(m, b)
}
func (m *Neigh) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Neigh.Marshal(b, m, deterministic)
}
func (m *Neigh) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Neigh.Merge(m, src)
}
func (m *Neigh) XXX_Size() int {
	return xxx_messageInfo_Neigh.Size(m)
}
func (m *Neigh) XXX_DiscardUnknown() {
	xxx_messageInfo_Neigh.DiscardUnknown(m)
}

var xxx_messageInfo_Neigh proto.InternalMessageInfo

func (m *Neigh) GetLinkIndex() int32 {
	if m != nil {
		return m.LinkIndex
	}
	return 0
}

func (m *Neigh) GetFamily() int32 {
	if m != nil {
		return m.Family
	}
	return 0
}

func (m *Neigh) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *Neigh) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Neigh) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *Neigh) GetIp() []byte {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *Neigh) GetHardwareAddr() []byte {
	if m != nil {
		return m.HardwareAddr
	}
	return nil
}

func (m *Neigh) GetLlIpAddr() []byte {
	if m != nil {
		return m.LlIpAddr
	}
	return nil
}

func (m *Neigh) GetVlanId() int32 {
	if m != nil {
		return m.VlanId
	}
	return 0
}

func (m *Neigh) GetVni() int32 {
	if m != nil {
		return m.Vni
	}
	return 0
}

func (m *Neigh) GetNId() uint32 {
	if m != nil {
		return m.NId
	}
	return 0
}

func (m *Neigh) GetNeId() uint32 {
	if m != nil {
		return m.NeId
	}
	return 0
}

func (m *Neigh) GetPhyLink() int32 {
	if m != nil {
		return m.PhyLink
	}
	return 0
}

type isNeigh_Tunnel interface {
	isNeigh_Tunnel()
}

type Neigh_Notun struct {
	Notun *NeighNotun `protobuf:"bytes,14,opt,name=notun,proto3,oneof"`
}

type Neigh_Iptun struct {
	Iptun *NeighIptun `protobuf:"bytes,15,opt,name=iptun,proto3,oneof"`
}

func (*Neigh_Notun) isNeigh_Tunnel() {}

func (*Neigh_Iptun) isNeigh_Tunnel() {}

func (m *Neigh) GetTunnel() isNeigh_Tunnel {
	if m != nil {
		return m.Tunnel
	}
	return nil
}

func (m *Neigh) GetNotun() *NeighNotun {
	if x, ok := m.GetTunnel().(*Neigh_Notun); ok {
		return x.Notun
	}
	return nil
}

func (m *Neigh) GetIptun() *NeighIptun {
	if x, ok := m.GetTunnel().(*Neigh_Iptun); ok {
		return x.Iptun
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Neigh) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Neigh_Notun)(nil),
		(*Neigh_Iptun)(nil),
	}
}

type NexthopInfo struct {
	LinkIndex            int32        `protobuf:"varint,1,opt,name=link_index,json=linkIndex,proto3" json:"link_index,omitempty"`
	Hops                 int32        `protobuf:"varint,2,opt,name=hops,proto3" json:"hops,omitempty"`
	Gw                   []byte       `protobuf:"bytes,3,opt,name=gw,proto3" json:"gw,omitempty"`
	Flags                int32        `protobuf:"varint,4,opt,name=flags,proto3" json:"flags,omitempty"`
	NewDst               *Destination `protobuf:"bytes,5,opt,name=new_dst,json=newDst,proto3" json:"new_dst,omitempty"`
	Encap                *Encap       `protobuf:"bytes,6,opt,name=encap,proto3" json:"encap,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *NexthopInfo) Reset()         { *m = NexthopInfo{} }
func (m *NexthopInfo) String() string { return proto.CompactTextString(m) }
func (*NexthopInfo) ProtoMessage()    {}
func (*NexthopInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{47}
}

func (m *NexthopInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NexthopInfo.Unmarshal(m, b)
}
func (m *NexthopInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NexthopInfo.Marshal(b, m, deterministic)
}
func (m *NexthopInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NexthopInfo.Merge(m, src)
}
func (m *NexthopInfo) XXX_Size() int {
	return xxx_messageInfo_NexthopInfo.Size(m)
}
func (m *NexthopInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NexthopInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NexthopInfo proto.InternalMessageInfo

func (m *NexthopInfo) GetLinkIndex() int32 {
	if m != nil {
		return m.LinkIndex
	}
	return 0
}

func (m *NexthopInfo) GetHops() int32 {
	if m != nil {
		return m.Hops
	}
	return 0
}

func (m *NexthopInfo) GetGw() []byte {
	if m != nil {
		return m.Gw
	}
	return nil
}

func (m *NexthopInfo) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *NexthopInfo) GetNewDst() *Destination {
	if m != nil {
		return m.NewDst
	}
	return nil
}

func (m *NexthopInfo) GetEncap() *Encap {
	if m != nil {
		return m.Encap
	}
	return nil
}

type MPLSDestination struct {
	Labels               []uint32 `protobuf:"varint,1,rep,packed,name=labels,proto3" json:"labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MPLSDestination) Reset()         { *m = MPLSDestination{} }
func (m *MPLSDestination) String() string { return proto.CompactTextString(m) }
func (*MPLSDestination) ProtoMessage()    {}
func (*MPLSDestination) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{48}
}

func (m *MPLSDestination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MPLSDestination.Unmarshal(m, b)
}
func (m *MPLSDestination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MPLSDestination.Marshal(b, m, deterministic)
}
func (m *MPLSDestination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MPLSDestination.Merge(m, src)
}
func (m *MPLSDestination) XXX_Size() int {
	return xxx_messageInfo_MPLSDestination.Size(m)
}
func (m *MPLSDestination) XXX_DiscardUnknown() {
	xxx_messageInfo_MPLSDestination.DiscardUnknown(m)
}

var xxx_messageInfo_MPLSDestination proto.InternalMessageInfo

func (m *MPLSDestination) GetLabels() []uint32 {
	if m != nil {
		return m.Labels
	}
	return nil
}

type Destination struct {
	Family int32 `protobuf:"varint,1,opt,name=family,proto3" json:"family,omitempty"`
	// Types that are valid to be assigned to Dest:
	//	*Destination_Mpls
	Dest                 isDestination_Dest `protobuf_oneof:"dest"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Destination) Reset()         { *m = Destination{} }
func (m *Destination) String() string { return proto.CompactTextString(m) }
func (*Destination) ProtoMessage()    {}
func (*Destination) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{49}
}

func (m *Destination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Destination.Unmarshal(m, b)
}
func (m *Destination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Destination.Marshal(b, m, deterministic)
}
func (m *Destination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Destination.Merge(m, src)
}
func (m *Destination) XXX_Size() int {
	return xxx_messageInfo_Destination.Size(m)
}
func (m *Destination) XXX_DiscardUnknown() {
	xxx_messageInfo_Destination.DiscardUnknown(m)
}

var xxx_messageInfo_Destination proto.InternalMessageInfo

func (m *Destination) GetFamily() int32 {
	if m != nil {
		return m.Family
	}
	return 0
}

type isDestination_Dest interface {
	isDestination_Dest()
}

type Destination_Mpls struct {
	Mpls *MPLSDestination `protobuf:"bytes,2,opt,name=mpls,proto3,oneof"`
}

func (*Destination_Mpls) isDestination_Dest() {}

func (m *Destination) GetDest() isDestination_Dest {
	if m != nil {
		return m.Dest
	}
	return nil
}

func (m *Destination) GetMpls() *MPLSDestination {
	if x, ok := m.GetDest().(*Destination_Mpls); ok {
		return x.Mpls
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Destination) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Destination_Mpls)(nil),
	}
}

type MPLSEncap struct {
	Labels               []uint32 `protobuf:"varint,1,rep,packed,name=labels,proto3" json:"labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MPLSEncap) Reset()         { *m = MPLSEncap{} }
func (m *MPLSEncap) String() string { return proto.CompactTextString(m) }
func (*MPLSEncap) ProtoMessage()    {}
func (*MPLSEncap) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{50}
}

func (m *MPLSEncap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MPLSEncap.Unmarshal(m, b)
}
func (m *MPLSEncap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MPLSEncap.Marshal(b, m, deterministic)
}
func (m *MPLSEncap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MPLSEncap.Merge(m, src)
}
func (m *MPLSEncap) XXX_Size() int {
	return xxx_messageInfo_MPLSEncap.Size(m)
}
func (m *MPLSEncap) XXX_DiscardUnknown() {
	xxx_messageInfo_MPLSEncap.DiscardUnknown(m)
}

var xxx_messageInfo_MPLSEncap proto.InternalMessageInfo

func (m *MPLSEncap) GetLabels() []uint32 {
	if m != nil {
		return m.Labels
	}
	return nil
}

type Encap struct {
	Type uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	// Types that are valid to be assigned to Encap:
	//	*Encap_Mpls
	Encap                isEncap_Encap `protobuf_oneof:"encap"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Encap) Reset()         { *m = Encap{} }
func (m *Encap) String() string { return proto.CompactTextString(m) }
func (*Encap) ProtoMessage()    {}
func (*Encap) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{51}
}

func (m *Encap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Encap.Unmarshal(m, b)
}
func (m *Encap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Encap.Marshal(b, m, deterministic)
}
func (m *Encap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Encap.Merge(m, src)
}
func (m *Encap) XXX_Size() int {
	return xxx_messageInfo_Encap.Size(m)
}
func (m *Encap) XXX_DiscardUnknown() {
	xxx_messageInfo_Encap.DiscardUnknown(m)
}

var xxx_messageInfo_Encap proto.InternalMessageInfo

func (m *Encap) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

type isEncap_Encap interface {
	isEncap_Encap()
}

type Encap_Mpls struct {
	Mpls *MPLSEncap `protobuf:"bytes,2,opt,name=mpls,proto3,oneof"`
}

func (*Encap_Mpls) isEncap_Encap() {}

func (m *Encap) GetEncap() isEncap_Encap {
	if m != nil {
		return m.Encap
	}
	return nil
}

func (m *Encap) GetMpls() *MPLSEncap {
	if x, ok := m.GetEncap().(*Encap_Mpls); ok {
		return x.Mpls
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Encap) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Encap_Mpls)(nil),
	}
}

type EncapInfoKey struct {
	Dst                  string   `protobuf:"bytes,1,opt,name=dst,proto3" json:"dst,omitempty"`
	Vrf                  uint32   `protobuf:"varint,2,opt,name=vrf,proto3" json:"vrf,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EncapInfoKey) Reset()         { *m = EncapInfoKey{} }
func (m *EncapInfoKey) String() string { return proto.CompactTextString(m) }
func (*EncapInfoKey) ProtoMessage()    {}
func (*EncapInfoKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{52}
}

func (m *EncapInfoKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncapInfoKey.Unmarshal(m, b)
}
func (m *EncapInfoKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncapInfoKey.Marshal(b, m, deterministic)
}
func (m *EncapInfoKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncapInfoKey.Merge(m, src)
}
func (m *EncapInfoKey) XXX_Size() int {
	return xxx_messageInfo_EncapInfoKey.Size(m)
}
func (m *EncapInfoKey) XXX_DiscardUnknown() {
	xxx_messageInfo_EncapInfoKey.DiscardUnknown(m)
}

var xxx_messageInfo_EncapInfoKey proto.InternalMessageInfo

func (m *EncapInfoKey) GetDst() string {
	if m != nil {
		return m.Dst
	}
	return ""
}

func (m *EncapInfoKey) GetVrf() uint32 {
	if m != nil {
		return m.Vrf
	}
	return 0
}

type EncapInfo struct {
	Ip                   []byte   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Mask                 []byte   `protobuf:"bytes,2,opt,name=mask,proto3" json:"mask,omitempty"`
	Vrf                  uint32   `protobuf:"varint,3,opt,name=vrf,proto3" json:"vrf,omitempty"`
	EnId                 uint32   `protobuf:"varint,4,opt,name=en_id,json=enId,proto3" json:"en_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EncapInfo) Reset()         { *m = EncapInfo{} }
func (m *EncapInfo) String() string { return proto.CompactTextString(m) }
func (*EncapInfo) ProtoMessage()    {}
func (*EncapInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{53}
}

func (m *EncapInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncapInfo.Unmarshal(m, b)
}
func (m *EncapInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncapInfo.Marshal(b, m, deterministic)
}
func (m *EncapInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncapInfo.Merge(m, src)
}
func (m *EncapInfo) XXX_Size() int {
	return xxx_messageInfo_EncapInfo.Size(m)
}
func (m *EncapInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_EncapInfo.DiscardUnknown(m)
}

var xxx_messageInfo_EncapInfo proto.InternalMessageInfo

func (m *EncapInfo) GetIp() []byte {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *EncapInfo) GetMask() []byte {
	if m != nil {
		return m.Mask
	}
	return nil
}

func (m *EncapInfo) GetVrf() uint32 {
	if m != nil {
		return m.Vrf
	}
	return 0
}

func (m *EncapInfo) GetEnId() uint32 {
	if m != nil {
		return m.EnId
	}
	return 0
}

type Route struct {
	LinkIndex            int32          `protobuf:"varint,1,opt,name=link_index,json=linkIndex,proto3" json:"link_index,omitempty"`
	ILinkIndex           int32          `protobuf:"varint,2,opt,name=i_link_index,json=iLinkIndex,proto3" json:"i_link_index,omitempty"`
	Scope                int32          `protobuf:"varint,3,opt,name=scope,proto3" json:"scope,omitempty"`
	Dst                  []byte         `protobuf:"bytes,4,opt,name=dst,proto3" json:"dst,omitempty"`
	DstMask              []byte         `protobuf:"bytes,5,opt,name=dst_mask,json=dstMask,proto3" json:"dst_mask,omitempty"`
	Src                  []byte         `protobuf:"bytes,6,opt,name=src,proto3" json:"src,omitempty"`
	Gw                   []byte         `protobuf:"bytes,7,opt,name=gw,proto3" json:"gw,omitempty"`
	MultiPath            []*NexthopInfo `protobuf:"bytes,8,rep,name=multi_path,json=multiPath,proto3" json:"multi_path,omitempty"`
	Protocol             int32          `protobuf:"varint,9,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Priority             int32          `protobuf:"varint,10,opt,name=priority,proto3" json:"priority,omitempty"`
	Table                int32          `protobuf:"varint,11,opt,name=table,proto3" json:"table,omitempty"`
	Type                 int32          `protobuf:"varint,12,opt,name=type,proto3" json:"type,omitempty"`
	Tos                  int32          `protobuf:"varint,13,opt,name=tos,proto3" json:"tos,omitempty"`
	Flags                int32          `protobuf:"varint,14,opt,name=flags,proto3" json:"flags,omitempty"`
	MplsDst              int32          `protobuf:"varint,15,opt,name=mpls_dst,json=mplsDst,proto3" json:"mpls_dst,omitempty"`
	NewDst               *Destination   `protobuf:"bytes,16,opt,name=new_dst,json=newDst,proto3" json:"new_dst,omitempty"`
	Encap                *Encap         `protobuf:"bytes,17,opt,name=encap,proto3" json:"encap,omitempty"`
	NId                  uint32         `protobuf:"varint,18,opt,name=n_id,json=nId,proto3" json:"n_id,omitempty"`
	RtId                 uint32         `protobuf:"varint,19,opt,name=rt_id,json=rtId,proto3" json:"rt_id,omitempty"`
	VpnGw                []byte         `protobuf:"bytes,20,opt,name=vpn_gw,json=vpnGw,proto3" json:"vpn_gw,omitempty"`
	EnIds                []uint32       `protobuf:"varint,21,rep,packed,name=en_ids,json=enIds,proto3" json:"en_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Route) Reset()         { *m = Route{} }
func (m *Route) String() string { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()    {}
func (*Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d5eb4a10391811b, []int{54}
}

func (m *Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Route.Unmarshal(m, b)
}
func (m *Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Route.Marshal(b, m, deterministic)
}
func (m *Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Route.Merge(m, src)
}
func (m *Route) XXX_Size() int {
	return xxx_messageInfo_Route.Size(m)
}
func (m *Route) XXX_DiscardUnknown() {
	xxx_messageInfo_Route.DiscardUnknown(m)
}

var xxx_messageInfo_Route proto.InternalMessageInfo

func (m *Route) GetLinkIndex() int32 {
	if m != nil {
		return m.LinkIndex
	}
	return 0
}

func (m *Route) GetILinkIndex() int32 {
	if m != nil {
		return m.ILinkIndex
	}
	return 0
}

func (m *Route) GetScope() int32 {
	if m != nil {
		return m.Scope
	}
	return 0
}

func (m *Route) GetDst() []byte {
	if m != nil {
		return m.Dst
	}
	return nil
}

func (m *Route) GetDstMask() []byte {
	if m != nil {
		return m.DstMask
	}
	return nil
}

func (m *Route) GetSrc() []byte {
	if m != nil {
		return m.Src
	}
	return nil
}

func (m *Route) GetGw() []byte {
	if m != nil {
		return m.Gw
	}
	return nil
}

func (m *Route) GetMultiPath() []*NexthopInfo {
	if m != nil {
		return m.MultiPath
	}
	return nil
}

func (m *Route) GetProtocol() int32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *Route) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *Route) GetTable() int32 {
	if m != nil {
		return m.Table
	}
	return 0
}

func (m *Route) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Route) GetTos() int32 {
	if m != nil {
		return m.Tos
	}
	return 0
}

func (m *Route) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *Route) GetMplsDst() int32 {
	if m != nil {
		return m.MplsDst
	}
	return 0
}

func (m *Route) GetNewDst() *Destination {
	if m != nil {
		return m.NewDst
	}
	return nil
}

func (m *Route) GetEncap() *Encap {
	if m != nil {
		return m.Encap
	}
	return nil
}

func (m *Route) GetNId() uint32 {
	if m != nil {
		return m.NId
	}
	return 0
}

func (m *Route) GetRtId() uint32 {
	if m != nil {
		return m.RtId
	}
	return 0
}

func (m *Route) GetVpnGw() []byte {
	if m != nil {
		return m.VpnGw
	}
	return nil
}

func (m *Route) GetEnIds() []uint32 {
	if m != nil {
		return m.EnIds
	}
	return nil
}

func init() {
	proto.RegisterEnum("nlaapi.NlMsgSrc", NlMsgSrc_name, NlMsgSrc_value)
	proto.RegisterEnum("nlaapi.LinkOperState", LinkOperState_name, LinkOperState_value)
	proto.RegisterEnum("nlaapi.BondMode", BondMode_name, BondMode_value)
	proto.RegisterEnum("nlaapi.BondArpValidate", BondArpValidate_name, BondArpValidate_value)
	proto.RegisterEnum("nlaapi.BondArpAllTargets", BondArpAllTargets_name, BondArpAllTargets_value)
	proto.RegisterEnum("nlaapi.BondPrimaryReselect", BondPrimaryReselect_name, BondPrimaryReselect_value)
	proto.RegisterEnum("nlaapi.BondFailOverMac", BondFailOverMac_name, BondFailOverMac_value)
	proto.RegisterEnum("nlaapi.BondXmitHashPolicy", BondXmitHashPolicy_name, BondXmitHashPolicy_value)
	proto.RegisterEnum("nlaapi.BondLacpRate", BondLacpRate_name, BondLacpRate_value)
	proto.RegisterEnum("nlaapi.BondAdSelect", BondAdSelect_name, BondAdSelect_value)
	proto.RegisterType((*NlMsghdr)(nil), "nlaapi.NlMsghdr")
	proto.RegisterType((*NetlinkMessage)(nil), "nlaapi.NetlinkMessage")
	proto.RegisterType((*NetlinkMessageReply)(nil), "nlaapi.NetlinkMessageReply")
	proto.RegisterType((*MonNetlinkRequest)(nil), "nlaapi.MonNetlinkRequest")
	proto.RegisterType((*NlMsgUni)(nil), "nlaapi.NlMsgUni")
	proto.RegisterType((*NetlinkMessageUnion)(nil), "nlaapi.NetlinkMessageUnion")
	proto.RegisterType((*ModVpnRequest)(nil), "nlaapi.ModVpnRequest")
	proto.RegisterType((*ModVpnReply)(nil), "nlaapi.ModVpnReply")
	proto.RegisterType((*ModNetlinkReply)(nil), "nlaapi.ModNetlinkReply")
	proto.RegisterType((*GetLinksRequest)(nil), "nlaapi.GetLinksRequest")
	proto.RegisterType((*GetAddrsRequest)(nil), "nlaapi.GetAddrsRequest")
	proto.RegisterType((*GetNeighsRequest)(nil), "nlaapi.GetNeighsRequest")
	proto.RegisterType((*GetRoutesRequest)(nil), "nlaapi.GetRoutesRequest")
	proto.RegisterType((*GetMplssRequest)(nil), "nlaapi.GetMplssRequest")
	proto.RegisterType((*GetNodesRequest)(nil), "nlaapi.GetNodesRequest")
	proto.RegisterType((*GetVpnsRequest)(nil), "nlaapi.GetVpnsRequest")
	proto.RegisterType((*GetEncapInfosRequest)(nil), "nlaapi.GetEncapInfosRequest")
	proto.RegisterType((*GetIptunsRequest)(nil), "nlaapi.GetIptunsRequest")
	proto.RegisterType((*GetStatsRequest)(nil), "nlaapi.GetStatsRequest")
	proto.RegisterType((*LinkKey)(nil), "nlaapi.LinkKey")
	proto.RegisterType((*AddrKey)(nil), "nlaapi.AddrKey")
	proto.RegisterType((*NeighKey)(nil), "nlaapi.NeighKey")
	proto.RegisterType((*RouteKey)(nil), "nlaapi.RouteKey")
	proto.RegisterType((*MplsKey)(nil), "nlaapi.MplsKey")
	proto.RegisterType((*NodeKey)(nil), "nlaapi.NodeKey")
	proto.RegisterType((*VpnKey)(nil), "nlaapi.VpnKey")
	proto.RegisterType((*IptunKey)(nil), "nlaapi.IptunKey")
	proto.RegisterType((*Stat)(nil), "nlaapi.Stat")
	proto.RegisterType((*Node)(nil), "nlaapi.Node")
	proto.RegisterType((*Vpn)(nil), "nlaapi.Vpn")
	proto.RegisterType((*Iptun)(nil), "nlaapi.Iptun")
	proto.RegisterType((*LinkAttrs)(nil), "nlaapi.LinkAttrs")
	proto.RegisterType((*GenericLinkAttrs)(nil), "nlaapi.GenericLinkAttrs")
	proto.RegisterType((*DeviceLinkAttrs)(nil), "nlaapi.DeviceLinkAttrs")
	proto.RegisterType((*BridgeLinkAttrs)(nil), "nlaapi.BridgeLinkAttrs")
	proto.RegisterType((*VlanLinkAttrs)(nil), "nlaapi.VlanLinkAttrs")
	proto.RegisterType((*VxlanLinkAttrs)(nil), "nlaapi.VxlanLinkAttrs")
	proto.RegisterType((*VtiLinkAttrs)(nil), "nlaapi.VtiLinkAttrs")
	proto.RegisterType((*VethLinkAttrs)(nil), "nlaapi.VethLinkAttrs")
	proto.RegisterType((*BondAdInfo)(nil), "nlaapi.BondAdInfo")
	proto.RegisterType((*BondLinkAttrs)(nil), "nlaapi.BondLinkAttrs")
	proto.RegisterType((*IptunLinkAttrs)(nil), "nlaapi.IptunLinkAttrs")
	proto.RegisterType((*Link)(nil), "nlaapi.Link")
	proto.RegisterType((*Addr)(nil), "nlaapi.Addr")
	proto.RegisterType((*NeighNotun)(nil), "nlaapi.NeighNotun")
	proto.RegisterType((*NeighIptun)(nil), "nlaapi.NeighIptun")
	proto.RegisterType((*Neigh)(nil), "nlaapi.Neigh")
	proto.RegisterType((*NexthopInfo)(nil), "nlaapi.NexthopInfo")
	proto.RegisterType((*MPLSDestination)(nil), "nlaapi.MPLSDestination")
	proto.RegisterType((*Destination)(nil), "nlaapi.Destination")
	proto.RegisterType((*MPLSEncap)(nil), "nlaapi.MPLSEncap")
	proto.RegisterType((*Encap)(nil), "nlaapi.Encap")
	proto.RegisterType((*EncapInfoKey)(nil), "nlaapi.EncapInfoKey")
	proto.RegisterType((*EncapInfo)(nil), "nlaapi.EncapInfo")
	proto.RegisterType((*Route)(nil), "nlaapi.Route")
}

func init() { proto.RegisterFile("nlaapi.proto", fileDescriptor_0d5eb4a10391811b) }

var fileDescriptor_0d5eb4a10391811b = []byte{
	// 3838 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x7a, 0x5b, 0x6f, 0xe3, 0x48,
	0x76, 0xbf, 0xee, 0x97, 0x23, 0xd9, 0xa6, 0xcb, 0xed, 0x6e, 0xd9, 0xdd, 0xfd, 0x9f, 0x1e, 0xce,
	0x0c, 0x76, 0xd6, 0xf3, 0xdf, 0x81, 0xc7, 0x3d, 0xb3, 0xd8, 0x24, 0x48, 0x00, 0xda, 0x72, 0xb7,
	0x85, 0x96, 0x64, 0x87, 0x76, 0x7b, 0xa6, 0x83, 0x45, 0x08, 0x5a, 0x2c, 0x4b, 0x4c, 0x53, 0x24,
	0x87, 0x2c, 0xc9, 0x36, 0x90, 0xc7, 0x5d, 0x20, 0x8f, 0x79, 0xca, 0xc3, 0x02, 0x79, 0xc8, 0x7b,
	0x2e, 0xcf, 0xf9, 0x28, 0xf9, 0x04, 0x41, 0x80, 0x7c, 0x85, 0x00, 0xc1, 0x39, 0x55, 0xa4, 0x48,
	0x59, 0x9e, 0xde, 0x49, 0x3f, 0x89, 0x75, 0xce, 0xaf, 0xaa, 0x4e, 0x9d, 0x5b, 0x9d, 0x2a, 0x15,
	0xb4, 0x7d, 0xcf, 0xb6, 0x43, 0xf7, 0xeb, 0x30, 0x0a, 0x44, 0xc0, 0x6a, 0xb2, 0xa5, 0xff, 0x0d,
	0x34, 0x86, 0xde, 0x20, 0x1e, 0x4f, 0x9c, 0x88, 0x69, 0x50, 0xf6, 0xb8, 0xdf, 0x29, 0xbe, 0x28,
	0x7e, 0xb9, 0x66, 0xe2, 0x27, 0x63, 0x50, 0x11, 0x77, 0x21, 0xef, 0x94, 0x88, 0x44, 0xdf, 0xec,
	0x11, 0x54, 0xaf, 0x3d, 0x7b, 0x1c, 0x77, 0xca, 0x44, 0x94, 0x0d, 0xec, 0x1b, 0xf3, 0x1f, 0x3b,
	0x15, 0xd9, 0x37, 0xe6, 0x3f, 0x22, 0x25, 0x74, 0x9d, 0x4e, 0x55, 0x52, 0x42, 0xd7, 0xd1, 0x7f,
	0x5f, 0x84, 0xf5, 0x21, 0x17, 0x9e, 0xeb, 0xbf, 0x1f, 0xf0, 0x38, 0xb6, 0xc7, 0x9c, 0x7d, 0x09,
	0xb5, 0x09, 0xb7, 0x1d, 0x1e, 0xd1, 0xac, 0xad, 0x03, 0xed, 0x6b, 0x25, 0x65, 0x22, 0x94, 0xa9,
	0xf8, 0x28, 0x8a, 0x63, 0x0b, 0x9b, 0x44, 0x69, 0x9b, 0xf4, 0xcd, 0x36, 0xa1, 0xe2, 0x5b, 0xae,
	0xa3, 0x24, 0x29, 0xfb, 0x3d, 0x87, 0xe9, 0x50, 0x8e, 0xa3, 0x11, 0xc9, 0xb1, 0xbe, 0x34, 0xda,
	0x79, 0x34, 0x32, 0x91, 0xa9, 0x6f, 0xc3, 0x56, 0x5e, 0x0c, 0x93, 0x87, 0xde, 0x9d, 0xbe, 0x05,
	0x9b, 0x83, 0xc0, 0x57, 0x1c, 0x93, 0xff, 0x38, 0xe3, 0xb1, 0xd0, 0xff, 0xbb, 0xa8, 0x14, 0xf4,
	0xd6, 0x77, 0x99, 0x0e, 0x15, 0xe4, 0x29, 0x59, 0xdb, 0xc9, 0xe8, 0x7d, 0xd7, 0x7f, 0x7f, 0x52,
	0x30, 0x89, 0x87, 0x18, 0xdb, 0x71, 0x22, 0x92, 0x33, 0x83, 0x31, 0x1c, 0x27, 0x42, 0x0c, 0xf2,
	0xd8, 0x17, 0x50, 0xf5, 0xb9, 0x3b, 0x9e, 0x90, 0xe0, 0xad, 0x83, 0xb5, 0x54, 0x4c, 0x24, 0x9e,
	0x14, 0x4c, 0xc9, 0x45, 0x58, 0x14, 0xcc, 0x04, 0xa7, 0xd5, 0x64, 0x60, 0x26, 0x12, 0x11, 0x46,
	0x5c, 0x9c, 0xd1, 0x0f, 0x1c, 0x4e, 0x9a, 0xce, 0xcc, 0x38, 0x0c, 0x1c, 0x04, 0x11, 0x8f, 0x7d,
	0x02, 0xe5, 0x79, 0xe8, 0x77, 0x6a, 0x04, 0x69, 0x25, 0x90, 0xcb, 0xd0, 0x3f, 0x29, 0x98, 0xc8,
	0x39, 0xac, 0x42, 0x79, 0x1a, 0x8f, 0xf5, 0x3f, 0x14, 0x97, 0x75, 0xf3, 0xd6, 0x77, 0x03, 0xff,
	0x67, 0xd8, 0x49, 0xa7, 0x81, 0xd4, 0xf2, 0xf3, 0xb0, 0xb7, 0xbe, 0x6b, 0x22, 0xf3, 0xff, 0x6a,
	0xb7, 0x43, 0x58, 0x1b, 0x04, 0xce, 0x65, 0xe8, 0x2b, 0xe3, 0xa4, 0xee, 0x59, 0xcc, 0xb8, 0xe7,
	0x73, 0xb9, 0xd2, 0xd2, 0xbd, 0x95, 0xd2, 0x3a, 0xf5, 0x35, 0x68, 0x25, 0x63, 0xa0, 0xcd, 0x37,
	0x61, 0x63, 0x10, 0x38, 0xa9, 0xcd, 0x91, 0xf4, 0x39, 0x6c, 0xbc, 0xe6, 0x02, 0x6d, 0x1a, 0x27,
	0xf3, 0x24, 0xf2, 0x16, 0x53, 0x79, 0x15, 0x0a, 0xad, 0xfa, 0x53, 0xa8, 0x2f, 0x40, 0x7b, 0xcd,
	0x05, 0x99, 0xf5, 0xc3, 0x30, 0x32, 0xeb, 0x87, 0xe7, 0x1c, 0x84, 0x5e, 0xfc, 0x53, 0xa8, 0x4d,
	0x42, 0xa1, 0xf5, 0x13, 0x94, 0xae, 0xc1, 0xfa, 0x6b, 0x2e, 0x2e, 0x43, 0x3f, 0xa5, 0x3c, 0x86,
	0x47, 0xaf, 0xb9, 0x38, 0xf6, 0x47, 0x76, 0xd8, 0xf3, 0xaf, 0x83, 0x94, 0xce, 0x48, 0x92, 0x5e,
	0x28, 0x66, 0x0b, 0xac, 0x1c, 0xf0, 0x5c, 0xd8, 0x22, 0x25, 0x1d, 0x40, 0x1d, 0x15, 0xf4, 0x86,
	0xdf, 0xad, 0x90, 0x00, 0x33, 0x84, 0xeb, 0x3b, 0xfc, 0x96, 0x8c, 0x50, 0x35, 0x65, 0x43, 0xdf,
	0x87, 0x3a, 0xaa, 0xeb, 0x81, 0x3e, 0x2c, 0x13, 0x36, 0x4d, 0x19, 0x26, 0xba, 0x03, 0x0d, 0x52,
	0xdd, 0x1f, 0xdf, 0x85, 0x75, 0xa0, 0xee, 0x5e, 0xcb, 0xc9, 0xcb, 0x34, 0x79, 0xd2, 0x64, 0x4f,
	0xa0, 0x3e, 0xf7, 0x6c, 0x1a, 0xa3, 0x42, 0x9c, 0x1a, 0x36, 0x7b, 0x8e, 0xfe, 0x0d, 0x34, 0x48,
	0xf3, 0x3f, 0x43, 0xb0, 0xef, 0xa0, 0x8e, 0x56, 0x78, 0xa0, 0xc7, 0x13, 0xa8, 0x7b, 0x96, 0x67,
	0x5f, 0x71, 0x4f, 0xe5, 0xcd, 0x9a, 0xd7, 0xc7, 0x96, 0xfe, 0x0c, 0xea, 0x68, 0x96, 0xd5, 0xdd,
	0xf4, 0x3f, 0x87, 0xda, 0x65, 0xe8, 0x3f, 0x30, 0xa6, 0x06, 0x65, 0x27, 0x16, 0x4a, 0x08, 0xfc,
	0x64, 0xeb, 0x50, 0x1a, 0xdf, 0xd0, 0x22, 0x9b, 0x66, 0x69, 0x7c, 0xa3, 0x7f, 0x07, 0x0d, 0x32,
	0xdb, 0x03, 0x03, 0x3c, 0x86, 0x5a, 0xc4, 0xa7, 0x81, 0xe0, 0x2a, 0x81, 0xaa, 0x96, 0xbe, 0x07,
	0x15, 0xb4, 0x2c, 0x4e, 0xf0, 0x9e, 0xdf, 0x51, 0x8f, 0xa6, 0x89, 0x9f, 0x48, 0x99, 0xdb, 0x72,
	0x09, 0x15, 0x13, 0x3f, 0xf5, 0x5f, 0x42, 0x05, 0xe5, 0xc7, 0xa9, 0xdd, 0x90, 0xa0, 0x6d, 0xb3,
	0xe4, 0x86, 0xe9, 0x74, 0xa5, 0xc5, 0x62, 0xfe, 0xbe, 0x08, 0xe5, 0xcb, 0xd0, 0xbf, 0x07, 0x65,
	0x50, 0x99, 0xda, 0xf1, 0xfb, 0x24, 0x8b, 0xe3, 0x77, 0x66, 0x25, 0x6d, 0x5c, 0x09, 0xba, 0x8f,
	0xd4, 0x9e, 0xdc, 0x4c, 0x64, 0x83, 0x6d, 0x43, 0x6d, 0x1e, 0xfa, 0xd6, 0xf8, 0x86, 0xf2, 0x5c,
	0xdb, 0xac, 0xce, 0x43, 0xff, 0xf5, 0x4d, 0x3a, 0x77, 0x6d, 0xb1, 0x54, 0x85, 0x74, 0x9d, 0x4e,
	0x5d, 0x0e, 0x30, 0x0f, 0x51, 0xa4, 0x10, 0xaa, 0xa4, 0x20, 0xf6, 0xe2, 0xe1, 0x2c, 0xae, 0x72,
	0xf8, 0x53, 0x68, 0x7a, 0xc1, 0xc8, 0xf6, 0xac, 0xa9, 0x3d, 0x52, 0xa2, 0x36, 0x88, 0x30, 0xb0,
	0x47, 0xab, 0x92, 0xd7, 0x36, 0xd4, 0x84, 0xef, 0x25, 0xae, 0xb5, 0x66, 0x56, 0x85, 0xef, 0xf5,
	0x1c, 0xfd, 0x77, 0x65, 0x68, 0xe2, 0xa8, 0x86, 0x10, 0x51, 0xbc, 0x88, 0x8a, 0x62, 0x26, 0x2a,
	0x50, 0xcb, 0x53, 0x31, 0x53, 0x91, 0x82, 0x9f, 0xac, 0x03, 0x0d, 0x71, 0x6b, 0xfd, 0x68, 0xe1,
	0x56, 0x2c, 0x7d, 0xb8, 0x26, 0x6e, 0xff, 0xb2, 0x2f, 0x77, 0x63, 0xdf, 0x9e, 0xca, 0xed, 0xa0,
	0x69, 0xd2, 0x37, 0xfb, 0x0c, 0xd6, 0x26, 0x76, 0xe4, 0xdc, 0xd8, 0x11, 0xb7, 0xc8, 0x4f, 0xa5,
	0x76, 0xda, 0x09, 0x11, 0x43, 0x6e, 0xb1, 0x65, 0xd7, 0xb2, 0x5b, 0xf6, 0x53, 0x68, 0x46, 0xf6,
	0x8d, 0x25, 0x39, 0x52, 0x55, 0x8d, 0xc8, 0xbe, 0x79, 0x45, 0xcc, 0x4f, 0xa1, 0x1d, 0xda, 0x11,
	0xf7, 0x85, 0x25, 0x85, 0x6e, 0x90, 0x24, 0x2d, 0x49, 0xeb, 0x91, 0xe8, 0x9f, 0x42, 0x7b, 0x6a,
	0xc7, 0x82, 0x47, 0x0a, 0xd2, 0x94, 0x10, 0x49, 0x93, 0x90, 0x47, 0x50, 0xb5, 0x3d, 0xd7, 0x8e,
	0x3b, 0x40, 0x22, 0xcb, 0x06, 0x06, 0x69, 0x18, 0x05, 0x53, 0x37, 0x1e, 0x75, 0x5a, 0x32, 0x48,
	0x55, 0x93, 0x3d, 0x07, 0xe0, 0x98, 0x93, 0x2c, 0x4a, 0xeb, 0x6d, 0xea, 0xd4, 0x24, 0xca, 0x05,
	0xe6, 0xf6, 0x6f, 0x01, 0x82, 0x90, 0x47, 0x56, 0x2c, 0x6c, 0xc1, 0x3b, 0x6b, 0xb4, 0x57, 0x6c,
	0x67, 0xed, 0x77, 0x1a, 0xf2, 0x08, 0xdd, 0x99, 0x9b, 0xcd, 0x20, 0xf9, 0xd4, 0xbb, 0x98, 0xd3,
	0x7c, 0x1e, 0xb9, 0xa3, 0x85, 0x31, 0xf6, 0x01, 0xd0, 0xd2, 0x96, 0x8d, 0x2d, 0xe5, 0x09, 0x9b,
	0xd9, 0x91, 0x08, 0x66, 0x36, 0xbd, 0xe4, 0x53, 0x3f, 0x82, 0x8d, 0x2e, 0x9f, 0xbb, 0x23, 0xfe,
	0x91, 0x83, 0x1c, 0x46, 0xae, 0x33, 0xfe, 0xa8, 0x41, 0xfe, 0x0a, 0xd6, 0x2e, 0x3d, 0xdb, 0xff,
	0x88, 0x21, 0xb2, 0xc9, 0xb0, 0x94, 0x4b, 0x86, 0xbf, 0xaf, 0xc0, 0xfa, 0xe5, 0xed, 0x47, 0x8e,
	0xbe, 0x03, 0x8d, 0xf9, 0x6d, 0x6e, 0xf8, 0x3a, 0xb5, 0x7b, 0x0e, 0xfb, 0x1c, 0xd6, 0xe7, 0x82,
	0x87, 0x96, 0xc3, 0xe7, 0x56, 0x36, 0x4d, 0xb7, 0x91, 0xda, 0xe5, 0x73, 0xe9, 0x36, 0x3b, 0xd0,
	0x88, 0xa3, 0x91, 0xf4, 0xe7, 0x0a, 0xf9, 0x73, 0x3d, 0x8e, 0x46, 0x89, 0x2b, 0x8f, 0xa3, 0x60,
	0x16, 0x26, 0x59, 0x80, 0x1a, 0x18, 0x45, 0x42, 0x78, 0xe4, 0xde, 0x55, 0x13, 0x3f, 0x89, 0x12,
	0x48, 0xb7, 0x46, 0x4a, 0x10, 0xb3, 0x5d, 0x68, 0x78, 0xdc, 0x8e, 0x7c, 0xd7, 0x1f, 0x93, 0x37,
	0x37, 0xcc, 0xb4, 0x8d, 0xa3, 0x86, 0x51, 0x70, 0x7b, 0x47, 0x3e, 0xdc, 0x30, 0x65, 0x03, 0xc7,
	0x88, 0xe2, 0x11, 0xf9, 0x6e, 0xc3, 0xc4, 0x4f, 0xcc, 0xa2, 0xde, 0xc1, 0xd4, 0x8d, 0x63, 0x72,
	0xdc, 0x86, 0xa9, 0x5a, 0x44, 0x7f, 0x49, 0xf4, 0xb6, 0xa2, 0x53, 0x8b, 0xed, 0x42, 0x73, 0xe6,
	0x84, 0xd6, 0xc8, 0x8a, 0x67, 0x53, 0xf2, 0xd7, 0x86, 0x59, 0x9f, 0x39, 0xe1, 0xd1, 0xf9, 0x6c,
	0x8a, 0x49, 0xc3, 0x0f, 0x2c, 0x7b, 0xcc, 0x3b, 0xeb, 0x72, 0x52, 0x3f, 0x30, 0xc6, 0x1c, 0x27,
	0x1d, 0x5f, 0x85, 0x9d, 0x0d, 0x39, 0xe9, 0xf8, 0x8a, 0x16, 0x87, 0x28, 0x4d, 0x2e, 0x05, 0xab,
	0x66, 0xcc, 0x90, 0xee, 0xd4, 0x15, 0x9d, 0x4d, 0x99, 0x4a, 0xa8, 0x81, 0xe9, 0x21, 0x0c, 0x22,
	0xd1, 0x61, 0x44, 0xa4, 0x6f, 0xd4, 0x24, 0xfe, 0x5a, 0x5e, 0x70, 0xd3, 0xd9, 0x52, 0xb1, 0x16,
	0x44, 0xa2, 0x1f, 0xdc, 0x60, 0xf8, 0x13, 0x6b, 0x82, 0x85, 0xe8, 0x23, 0xe2, 0x11, 0xf6, 0xc4,
	0x1d, 0x4f, 0xf4, 0x7f, 0x2e, 0x42, 0xfb, 0x52, 0xb8, 0x1f, 0xe3, 0x05, 0x5b, 0x50, 0x75, 0x2d,
	0xdc, 0x53, 0xd4, 0xe1, 0xc1, 0xc5, 0x9d, 0x69, 0x0b, 0xaa, 0x01, 0x11, 0x65, 0xf6, 0xac, 0x04,
	0x48, 0x64, 0x2a, 0x21, 0xcb, 0xe4, 0x29, 0x53, 0x30, 0x2e, 0x11, 0x33, 0x6e, 0x62, 0x67, 0x6a,
	0x64, 0x76, 0xb1, 0x5a, 0x6e, 0x17, 0xfb, 0x6b, 0x58, 0xbb, 0xe4, 0x62, 0xf2, 0x31, 0xe2, 0xa2,
	0x3a, 0x38, 0x8f, 0x2c, 0xca, 0xb0, 0x72, 0x9f, 0x6d, 0x20, 0x61, 0x68, 0x4f, 0xb9, 0xfe, 0x2f,
	0x45, 0x80, 0xc3, 0xc0, 0x77, 0x0c, 0x07, 0xab, 0x25, 0x4c, 0xba, 0xf6, 0x78, 0x1c, 0xf1, 0xb1,
	0x2d, 0x82, 0x28, 0xd9, 0x68, 0xab, 0x66, 0x7b, 0x41, 0xec, 0x39, 0x38, 0xa0, 0x3f, 0x9b, 0x5a,
	0xa8, 0xd2, 0x58, 0x85, 0x41, 0xc3, 0x9f, 0x4d, 0xcf, 0xb0, 0x8d, 0x4c, 0x7b, 0x84, 0x9d, 0x13,
	0x5d, 0x54, 0xcd, 0x06, 0x11, 0x50, 0x1f, 0x9f, 0x00, 0xe6, 0x59, 0xe1, 0x73, 0xc9, 0x96, 0xe5,
	0x0a, 0x28, 0xd2, 0x12, 0x00, 0x77, 0x28, 0xa9, 0xa2, 0x04, 0x30, 0xb0, 0x47, 0xfa, 0x1f, 0x1a,
	0xb0, 0x86, 0xf2, 0x7e, 0x8c, 0x42, 0x3e, 0x87, 0xca, 0x14, 0x8f, 0x15, 0xa5, 0x7c, 0x49, 0x8e,
	0xc3, 0x0e, 0x02, 0x87, 0x9b, 0xc4, 0xc5, 0x4d, 0xc0, 0x1e, 0x09, 0x77, 0xce, 0xad, 0xd8, 0xb3,
	0xe7, 0x5c, 0xad, 0xa5, 0x25, 0x69, 0xe7, 0x48, 0x42, 0xa3, 0x4d, 0x5d, 0x77, 0x1a, 0xf8, 0x49,
	0xe1, 0x25, 0x5b, 0xe8, 0x9b, 0x33, 0xcc, 0x04, 0x9e, 0x7d, 0x47, 0x4b, 0xa8, 0x9a, 0xf5, 0x59,
	0xd8, 0xc5, 0x26, 0xee, 0x03, 0x4e, 0x70, 0xe3, 0x2b, 0xa6, 0x0c, 0xeb, 0x26, 0x52, 0x24, 0xfb,
	0x13, 0x68, 0xcd, 0x62, 0x6e, 0x8d, 0xec, 0x28, 0x72, 0x79, 0xa4, 0x82, 0x1c, 0x66, 0x31, 0x3f,
	0x92, 0x14, 0x92, 0x2a, 0x0a, 0x2d, 0xd7, 0x17, 0x3c, 0xc2, 0x22, 0x46, 0xed, 0x5e, 0x76, 0x14,
	0xf6, 0x14, 0x09, 0x33, 0x11, 0x41, 0x42, 0x4b, 0xd8, 0xd1, 0x98, 0x8b, 0xb8, 0xd3, 0x7c, 0x51,
	0xc6, 0x9d, 0x13, 0x41, 0xe1, 0x85, 0xa4, 0xb1, 0x3f, 0x95, 0x03, 0xcd, 0x6d, 0xcf, 0x75, 0x70,
	0xcf, 0x01, 0x52, 0xc6, 0x93, 0xac, 0x32, 0x8c, 0x28, 0xbc, 0x54, 0x6c, 0x9a, 0x21, 0x69, 0x30,
	0x03, 0x36, 0xb0, 0xaf, 0xed, 0x79, 0xe9, 0x14, 0x2d, 0xea, 0xbe, 0xb3, 0xd4, 0xdd, 0xf0, 0x3c,
	0x35, 0x9f, 0xb9, 0x66, 0x67, 0x9b, 0x72, 0xa7, 0x74, 0xa7, 0x76, 0x74, 0x47, 0x89, 0x85, 0x76,
	0x4a, 0x6a, 0xb2, 0x57, 0xa0, 0xa9, 0x4f, 0x2b, 0xe2, 0x31, 0xf7, 0xf8, 0x48, 0xa8, 0x0d, 0xf1,
	0x69, 0x76, 0xf4, 0x33, 0x89, 0x31, 0x15, 0xc4, 0xdc, 0x08, 0xf3, 0x04, 0xf6, 0x67, 0xb0, 0x76,
	0x6d, 0xbb, 0x9e, 0x15, 0xcc, 0x95, 0x33, 0xad, 0xdf, 0x5f, 0xe1, 0x2b, 0xdb, 0xf5, 0x4e, 0xe7,
	0xe4, 0x59, 0x66, 0xeb, 0x7a, 0xd1, 0x60, 0x5d, 0xd0, 0x6e, 0xa7, 0xae, 0xb0, 0x26, 0x76, 0x3c,
	0xb1, 0xc2, 0xc0, 0x73, 0x47, 0x77, 0x94, 0xb8, 0xd6, 0x0f, 0x76, 0xb3, 0xfd, 0x7f, 0x98, 0xba,
	0xe2, 0xc4, 0x8e, 0x27, 0x67, 0x84, 0x30, 0xd7, 0x6f, 0x73, 0x6d, 0xb4, 0x26, 0x2e, 0xc1, 0x77,
	0x2c, 0x77, 0x3c, 0x0d, 0x55, 0x9e, 0x03, 0x49, 0xea, 0x8d, 0xa7, 0x21, 0x9a, 0x8a, 0x22, 0x89,
	0xc2, 0x33, 0x10, 0xee, 0xb5, 0xca, 0x7b, 0x6d, 0x0c, 0x27, 0x0c, 0x51, 0xa4, 0xb1, 0x3d, 0xd8,
	0x44, 0x55, 0x93, 0x1b, 0xc6, 0x96, 0x74, 0x40, 0x95, 0x0b, 0x37, 0x6c, 0xcf, 0x23, 0x5f, 0x8c,
	0x0d, 0x22, 0x63, 0xf8, 0x4d, 0x5d, 0xdf, 0x42, 0x67, 0x8f, 0x55, 0x5e, 0x6c, 0x4c, 0x5d, 0xda,
	0xf4, 0x62, 0x94, 0xc7, 0xcb, 0xf8, 0x8e, 0x4c, 0x8d, 0xe0, 0x2d, 0x5c, 0x67, 0x0f, 0x36, 0x43,
	0x7b, 0xf4, 0x9e, 0x47, 0xb1, 0x45, 0xd5, 0x08, 0x39, 0xfe, 0xb6, 0x9c, 0x49, 0x31, 0xce, 0x78,
	0x24, 0x9d, 0xff, 0x1b, 0x68, 0x7a, 0xf6, 0x28, 0xb4, 0x22, 0xf4, 0x9e, 0xc7, 0xa4, 0x9b, 0x47,
	0x59, 0xdd, 0xf4, 0xed, 0x51, 0x68, 0xa2, 0xeb, 0x34, 0x3c, 0xf5, 0x85, 0x5d, 0x6c, 0xc7, 0x52,
	0x36, 0x7d, 0x72, 0xbf, 0x8b, 0xe1, 0x9c, 0x4b, 0x63, 0x36, 0x6c, 0xf5, 0xc5, 0xbe, 0x82, 0xba,
	0xed, 0x58, 0xae, 0x7f, 0x1d, 0x74, 0x3a, 0x14, 0xda, 0x2c, 0xdf, 0x01, 0xb3, 0x96, 0x59, 0xb3,
	0xe9, 0x57, 0xff, 0xcf, 0x12, 0xac, 0x53, 0x25, 0xfc, 0x31, 0xd9, 0x41, 0xed, 0xb8, 0xaa, 0xe4,
	0xcf, 0xec, 0xb8, 0xaa, 0x2c, 0xc6, 0x1d, 0xf7, 0x19, 0x40, 0x68, 0x4d, 0xc5, 0xcc, 0x72, 0xb0,
	0xd4, 0x93, 0xd9, 0xbd, 0x11, 0x0e, 0xc4, 0xac, 0x8b, 0xb5, 0x5e, 0x92, 0xf5, 0xab, 0xab, 0xb2,
	0x7e, 0x6d, 0x75, 0xd6, 0xaf, 0x67, 0xb3, 0x3e, 0x1a, 0x4a, 0x56, 0x8b, 0x31, 0xed, 0x7b, 0x0d,
	0x1a, 0x48, 0x16, 0x90, 0xe7, 0xb4, 0xfb, 0xa5, 0x00, 0x87, 0x00, 0xcd, 0x0c, 0xa0, 0x4b, 0x80,
	0x7c, 0xbd, 0x09, 0xc4, 0xcf, 0xd4, 0x9b, 0x69, 0x7f, 0x59, 0x23, 0xb7, 0x32, 0xfd, 0x65, 0x95,
	0xfc, 0x1c, 0xe0, 0xda, 0x0b, 0x6e, 0xac, 0x2b, 0x3b, 0xe6, 0x8e, 0xda, 0xfb, 0x9b, 0x48, 0x39,
	0x44, 0x82, 0xfe, 0x3f, 0x65, 0xa8, 0xa0, 0xf6, 0x72, 0x17, 0x15, 0x4d, 0x75, 0x51, 0xf1, 0x0d,
	0xd4, 0x1c, 0x2a, 0x28, 0xd5, 0xf5, 0x4e, 0x1a, 0x72, 0x4b, 0x65, 0xe6, 0x49, 0xc1, 0x54, 0x40,
	0xec, 0x72, 0x45, 0xe5, 0xa3, 0xba, 0xeb, 0x59, 0x44, 0x69, 0xbe, 0xa8, 0xc4, 0x2e, 0x12, 0xc8,
	0xbe, 0x82, 0x0a, 0x96, 0x76, 0xea, 0xe6, 0x27, 0x2d, 0x96, 0x73, 0x05, 0xe4, 0x49, 0xc1, 0x24,
	0x10, 0xfb, 0x1a, 0xaa, 0x54, 0xa8, 0x91, 0x9e, 0x5b, 0x07, 0x8f, 0x53, 0xf4, 0xed, 0x12, 0x5c,
	0xc2, 0xd8, 0x97, 0x50, 0x9e, 0x0b, 0x97, 0x14, 0xdf, 0x5a, 0xf8, 0x68, 0xb6, 0x6e, 0xa0, 0xeb,
	0x25, 0xe1, 0x92, 0x18, 0x5c, 0x4c, 0xc8, 0x04, 0x59, 0x31, 0xb2, 0x9b, 0x36, 0x89, 0xc1, 0xc5,
	0x04, 0xc1, 0x57, 0x81, 0xef, 0x90, 0x3d, 0x32, 0xe0, 0xdc, 0x86, 0x86, 0x60, 0x04, 0xb1, 0x6f,
	0xa1, 0x3e, 0x96, 0xd5, 0x3d, 0xd9, 0xa7, 0x75, 0xd0, 0x49, 0xf0, 0xcb, 0x45, 0xff, 0x49, 0xc1,
	0x4c, 0xa0, 0xb8, 0x52, 0x17, 0x43, 0x80, 0x6c, 0x96, 0x59, 0x69, 0x3e, 0x2e, 0x70, 0xa5, 0x04,
	0x5b, 0x71, 0xc4, 0xc5, 0x52, 0xc6, 0xcb, 0x1c, 0x04, 0x2b, 0x9e, 0xdf, 0x73, 0x0e, 0xdb, 0xd9,
	0x40, 0xd2, 0xff, 0xa1, 0x04, 0x15, 0xaa, 0x5a, 0x97, 0x8f, 0xc1, 0x4f, 0xa0, 0xee, 0x86, 0x56,
	0xe6, 0x24, 0x5c, 0x73, 0xc3, 0x01, 0x9e, 0x85, 0xd3, 0xb3, 0xaf, 0x3c, 0xd8, 0xab, 0xb3, 0x6f,
	0x7a, 0x7e, 0x93, 0x1b, 0xa8, 0x3a, 0xbf, 0x3d, 0x82, 0x6a, 0x3c, 0x0a, 0x42, 0xae, 0x36, 0x4f,
	0xd9, 0xa0, 0x2a, 0x90, 0xf3, 0x48, 0x45, 0x10, 0x7d, 0xa7, 0xb5, 0x0d, 0x4d, 0x28, 0x63, 0x88,
	0x6a, 0x1b, 0x9a, 0xf2, 0x19, 0x34, 0xaf, 0xa2, 0xc0, 0x76, 0x46, 0x76, 0x2c, 0x63, 0xa8, 0x6d,
	0x2e, 0x08, 0x8b, 0x53, 0x6b, 0x33, 0x7b, 0x6a, 0x7d, 0x0c, 0xb5, 0x6b, 0x7b, 0xea, 0x7a, 0x77,
	0x64, 0xa3, 0xaa, 0xa9, 0x5a, 0xa9, 0x9a, 0x5a, 0x39, 0x35, 0x61, 0x6a, 0x92, 0xd1, 0xb1, 0x66,
	0x56, 0x6c, 0xa7, 0xe7, 0xe8, 0x6d, 0x00, 0xba, 0xd9, 0x19, 0x06, 0x62, 0xe6, 0xeb, 0x7f, 0xa1,
	0x5a, 0xf2, 0x78, 0xbe, 0x03, 0x0d, 0x31, 0xf3, 0xad, 0x4c, 0xbc, 0xd4, 0xc5, 0xcc, 0xa7, 0x78,
	0xdc, 0x86, 0x1a, 0x9e, 0x0b, 0xdc, 0x50, 0x69, 0xad, 0x1a, 0x47, 0xa3, 0x5e, 0xa8, 0xff, 0x53,
	0x19, 0xaa, 0x34, 0x00, 0xc6, 0x23, 0xa9, 0x3f, 0x7b, 0xd0, 0xa6, 0xa4, 0xd5, 0x5b, 0x12, 0xbb,
	0x94, 0x13, 0x1b, 0x35, 0x49, 0x47, 0xca, 0xb2, 0xd2, 0x24, 0x36, 0xd2, 0xa0, 0x95, 0x4a, 0x5f,
	0xba, 0xfc, 0xae, 0x66, 0x2d, 0x21, 0xcd, 0x5b, 0x4b, 0xcd, 0x7b, 0xef, 0x50, 0x5e, 0x5f, 0x71,
	0x28, 0x7f, 0x06, 0xe0, 0x79, 0x58, 0x7f, 0x10, 0xa2, 0xa1, 0x6e, 0x19, 0xbc, 0x5e, 0x48, 0xdc,
	0xcc, 0x09, 0xad, 0x99, 0x3d, 0xa1, 0xd1, 0xb5, 0x8c, 0xef, 0x2a, 0xbd, 0xe3, 0xe7, 0x03, 0x4a,
	0xf7, 0x79, 0x46, 0xe9, 0x3e, 0xef, 0x39, 0x74, 0x16, 0x98, 0xdc, 0xd1, 0xa6, 0x47, 0xa5, 0x02,
	0x56, 0x13, 0x93, 0x3b, 0xca, 0x4f, 0x7b, 0x50, 0xf5, 0xd1, 0x14, 0xb4, 0xfb, 0x67, 0x76, 0x8f,
	0x85, 0x91, 0xe8, 0x56, 0x1a, 0x3f, 0x10, 0x2b, 0x43, 0x67, 0x63, 0x05, 0x96, 0x4c, 0x98, 0x86,
	0xcd, 0x61, 0x03, 0x6a, 0x62, 0xe6, 0xfb, 0xdc, 0xd3, 0xff, 0xbd, 0x08, 0xad, 0x21, 0xbf, 0x15,
	0x93, 0x80, 0x2e, 0x1c, 0x3f, 0x64, 0x29, 0x06, 0x95, 0x49, 0x10, 0x26, 0x75, 0x33, 0x7d, 0xaf,
	0xba, 0x27, 0x5a, 0x11, 0x15, 0xff, 0x1f, 0xea, 0x3e, 0xbf, 0xb1, 0x9c, 0x58, 0xa8, 0x24, 0xb9,
	0xb5, 0xc8, 0xab, 0xb1, 0x70, 0x7d, 0x5b, 0xb8, 0x81, 0x6f, 0xd6, 0x7c, 0x7e, 0xd3, 0x8d, 0x05,
	0xfb, 0x0c, 0xaa, 0x94, 0xce, 0x55, 0x7e, 0x4c, 0xaf, 0xd8, 0xe9, 0x66, 0xd4, 0x94, 0x3c, 0xfd,
	0x97, 0xb0, 0x31, 0x38, 0xeb, 0x9f, 0x67, 0xfa, 0xd3, 0x81, 0x0f, 0x43, 0x13, 0x37, 0xcb, 0x32,
	0x5d, 0xf1, 0x51, 0x4b, 0xff, 0x2d, 0xb4, 0x96, 0x60, 0xca, 0xe1, 0x8a, 0x39, 0x87, 0xfb, 0x15,
	0x54, 0xa6, 0xa1, 0x17, 0xab, 0x5b, 0xea, 0x34, 0x8d, 0x2f, 0xcd, 0x82, 0x39, 0x0e, 0x61, 0x87,
	0x35, 0xa8, 0x38, 0x3c, 0x16, 0xfa, 0x67, 0xd0, 0x44, 0x08, 0x09, 0xf7, 0xa0, 0x08, 0x03, 0xa8,
	0x4a, 0xc0, 0xaa, 0xdb, 0xf1, 0x5f, 0xe4, 0x26, 0xde, 0xcc, 0x4e, 0x4c, 0x9d, 0xd2, 0x29, 0xeb,
	0x4a, 0x31, 0xfa, 0x01, 0xb4, 0xd3, 0x6b, 0xe2, 0x37, 0xf2, 0x5a, 0x10, 0x75, 0x5b, 0x5c, 0xdc,
	0x44, 0xa2, 0x47, 0x46, 0xd7, 0x49, 0x6a, 0x9c, 0x47, 0xd7, 0xfa, 0x25, 0x34, 0xd3, 0x3e, 0x7f,
	0xd4, 0x15, 0xa0, 0x1a, 0xa2, 0x9c, 0x0e, 0x81, 0x1e, 0xcc, 0xfd, 0xc5, 0x8d, 0x5a, 0x85, 0xfb,
	0x3d, 0x47, 0xff, 0xb7, 0x0a, 0x54, 0xe9, 0xae, 0xf6, 0x43, 0xee, 0xf3, 0x02, 0xda, 0xae, 0x95,
	0x01, 0x48, 0x37, 0x02, 0xda, 0x97, 0xd2, 0x9b, 0x29, 0x99, 0x3c, 0xcb, 0xd9, 0xe4, 0xa9, 0x16,
	0x27, 0xef, 0x1c, 0x68, 0x71, 0x3b, 0xd0, 0x70, 0x62, 0x21, 0x33, 0xa7, 0x3c, 0x67, 0xd5, 0x9d,
	0x58, 0x0c, 0x94, 0xd0, 0x71, 0x34, 0x52, 0x61, 0x8f, 0x9f, 0xca, 0x43, 0xeb, 0xa9, 0x87, 0x1e,
	0x00, 0x4c, 0x67, 0x9e, 0x70, 0xad, 0xd0, 0x16, 0x93, 0x4e, 0xe3, 0x45, 0x39, 0xeb, 0x8e, 0x99,
	0x68, 0x30, 0x9b, 0x04, 0x3b, 0xb3, 0xc5, 0x84, 0xed, 0x42, 0x83, 0xfe, 0xa1, 0x1b, 0x05, 0x9e,
	0x8a, 0xfc, 0xb4, 0x2d, 0x79, 0x6e, 0x10, 0xb9, 0x22, 0x49, 0xbc, 0x69, 0x1b, 0x17, 0x24, 0xec,
	0x2b, 0x8f, 0xab, 0x2b, 0x35, 0xd9, 0x48, 0x7d, 0xa0, 0x9d, 0xc9, 0x61, 0xaa, 0x50, 0x5b, 0x5b,
	0x5c, 0x8d, 0xa4, 0x91, 0xb4, 0x9e, 0x8d, 0xa4, 0x1d, 0x68, 0xa0, 0x2b, 0x50, 0x28, 0x6d, 0xc8,
	0x7c, 0x81, 0x6d, 0x0c, 0x9b, 0x4c, 0x90, 0x69, 0x3f, 0x23, 0xc8, 0x36, 0x1f, 0x0e, 0xb2, 0x34,
	0x8b, 0xb1, 0x5c, 0x16, 0x8b, 0x04, 0xd2, 0xb6, 0xa4, 0x0f, 0x44, 0x62, 0x71, 0xbb, 0x3b, 0xbe,
	0xa1, 0xc2, 0x3c, 0xbd, 0x07, 0xde, 0x86, 0x1a, 0xf9, 0x4b, 0xdc, 0xd9, 0xa6, 0x68, 0xa8, 0xa2,
	0xc3, 0xc4, 0x7b, 0x5f, 0xa8, 0x7f, 0xef, 0xce, 0xa3, 0x11, 0xab, 0x43, 0x79, 0x78, 0x7a, 0xa6,
	0x15, 0xf0, 0xe3, 0xcd, 0xb0, 0xaf, 0x15, 0xf1, 0xc3, 0x38, 0xeb, 0x69, 0xa5, 0xbd, 0xbf, 0x2b,
	0xc2, 0x5a, 0xee, 0xfe, 0x90, 0x6d, 0x40, 0x0b, 0x1b, 0x6f, 0xfd, 0xf7, 0x7e, 0x70, 0xe3, 0x6b,
	0x05, 0xc6, 0x60, 0x1d, 0x09, 0xc3, 0x40, 0x9c, 0xd1, 0xd1, 0x44, 0x68, 0x45, 0xd6, 0x86, 0x06,
	0xd2, 0xba, 0x88, 0x28, 0xb1, 0xc7, 0xc0, 0xb0, 0xd5, 0x0f, 0x6e, 0x78, 0xd4, 0xb7, 0xef, 0x14,
	0xbd, 0x9c, 0x0c, 0x75, 0x41, 0x9a, 0x19, 0x6b, 0x95, 0x84, 0xd0, 0x0d, 0xa2, 0xa9, 0xed, 0x0b,
	0xad, 0xca, 0x00, 0x6a, 0x34, 0x59, 0xa8, 0xd5, 0xf6, 0xfe, 0xa3, 0x08, 0x8d, 0xe4, 0x8c, 0xcd,
	0x3a, 0xf0, 0xe8, 0xf0, 0x74, 0xd8, 0xb5, 0x06, 0xa7, 0xdd, 0x63, 0xeb, 0xd0, 0xe8, 0x1b, 0xc3,
	0xa3, 0x63, 0xcb, 0x34, 0xb5, 0x02, 0x7b, 0x0a, 0x4f, 0x16, 0x1c, 0xe3, 0xe8, 0xa2, 0x77, 0x89,
	0x80, 0xa3, 0x37, 0x6f, 0xcf, 0xb4, 0x22, 0xdb, 0x81, 0xed, 0xfb, 0xdd, 0x7e, 0x38, 0x35, 0xb5,
	0x12, 0x7b, 0x02, 0x5b, 0x19, 0x96, 0x79, 0x6a, 0x74, 0x8f, 0x8c, 0xf3, 0x0b, 0xad, 0xcc, 0xb6,
	0x61, 0x73, 0xc1, 0xf8, 0xcd, 0xfe, 0x81, 0xf5, 0xd2, 0xe8, 0x6a, 0x95, 0xd5, 0x43, 0x5d, 0xf4,
	0x0f, 0xb5, 0xea, 0x6a, 0x96, 0xd1, 0x3f, 0xd4, 0x6a, 0xf9, 0xc1, 0xde, 0x0e, 0xdf, 0x0c, 0x4f,
	0xbf, 0x1f, 0x6a, 0xf5, 0xbd, 0xdf, 0x15, 0x61, 0x63, 0xe9, 0xc8, 0xcc, 0x76, 0xe1, 0x31, 0x41,
	0x0d, 0xf3, 0xcc, 0xba, 0x34, 0xfa, 0xbd, 0xae, 0x71, 0x71, 0x6c, 0x0d, 0x4f, 0x87, 0xc7, 0x5a,
	0x81, 0x3d, 0x83, 0xce, 0x7d, 0x9e, 0x5c, 0xac, 0x56, 0x5c, 0xcd, 0x55, 0x3a, 0x28, 0xa5, 0xd2,
	0xe5, 0xfb, 0xf6, 0xfb, 0x5a, 0x79, 0xef, 0x14, 0x36, 0xef, 0x9d, 0xbc, 0x73, 0xa3, 0x19, 0xfd,
	0xbe, 0x75, 0x61, 0x98, 0xaf, 0x8f, 0x2f, 0xce, 0x2d, 0x63, 0xf8, 0x6e, 0x49, 0x92, 0x1c, 0xb7,
	0xdf, 0xd7, 0x8a, 0x7b, 0x7f, 0x0b, 0x5b, 0x2b, 0x0e, 0xdb, 0xec, 0x05, 0x3c, 0xa3, 0x4e, 0x67,
	0x66, 0x6f, 0x60, 0x98, 0xef, 0x2c, 0xf3, 0xf8, 0xfc, 0xb8, 0x7f, 0x7c, 0x74, 0x61, 0x19, 0xfd,
	0xef, 0x8d, 0x77, 0xe7, 0x5a, 0xe1, 0x61, 0xc4, 0xe1, 0xf1, 0xc5, 0xc5, 0xb1, 0xa9, 0x15, 0xd9,
	0xa7, 0xf0, 0x7c, 0x35, 0xe2, 0x95, 0xd1, 0xeb, 0xbf, 0x35, 0x8f, 0xb5, 0xd2, 0x9e, 0x27, 0x95,
	0x9a, 0x39, 0xa5, 0xa7, 0xde, 0x81, 0x20, 0xeb, 0xf4, 0xf2, 0xd8, 0xb4, 0x06, 0xc6, 0x51, 0xa2,
	0xd5, 0xe7, 0xb0, 0xb3, 0x82, 0x99, 0xaa, 0x75, 0x35, 0xfb, 0xd5, 0x69, 0xbf, 0x7f, 0xfa, 0xbd,
	0x56, 0xda, 0xfb, 0xaf, 0x22, 0xb0, 0xfb, 0x87, 0xfa, 0x74, 0x25, 0x3f, 0x0c, 0x7a, 0x17, 0xd6,
	0x89, 0x71, 0x7e, 0x62, 0x9d, 0x9d, 0xf6, 0x7b, 0x47, 0xef, 0xac, 0xbe, 0xf1, 0xee, 0xd8, 0x3c,
	0xd0, 0x0a, 0x4c, 0x87, 0xff, 0xf7, 0x13, 0x88, 0x97, 0xd6, 0xb7, 0x5a, 0xf1, 0x03, 0x98, 0x03,
	0xeb, 0xa5, 0x56, 0x7a, 0x18, 0x73, 0x3c, 0x3c, 0x32, 0xce, 0x10, 0x53, 0xfe, 0x00, 0x06, 0xe7,
	0xaa, 0xa4, 0x9a, 0xbd, 0x87, 0x49, 0xfc, 0xb5, 0xba, 0xf7, 0x5b, 0x68, 0x67, 0xcf, 0xe8, 0x69,
	0xf0, 0xf4, 0x8d, 0xa3, 0x33, 0xcb, 0x44, 0x87, 0x3a, 0x47, 0xa5, 0x14, 0x56, 0x30, 0x5e, 0x61,
	0x54, 0x15, 0x53, 0xef, 0x5e, 0x30, 0x92, 0xd1, 0x4b, 0x7b, 0xb6, 0x1c, 0x3d, 0x39, 0xce, 0x2f,
	0x3c, 0xb6, 0x6b, 0x29, 0x1b, 0x9f, 0x5f, 0x18, 0x87, 0xfd, 0x5c, 0x20, 0xa4, 0xac, 0x43, 0x63,
	0xd8, 0xfd, 0xbe, 0xd7, 0xbd, 0x38, 0xd1, 0x8a, 0x69, 0x96, 0x58, 0x70, 0x8f, 0x4e, 0xdf, 0x0e,
	0x2f, 0xb4, 0xd2, 0xc1, 0x3f, 0x16, 0x01, 0x86, 0x7d, 0xe3, 0x28, 0x88, 0xb8, 0x11, 0xba, 0xec,
	0x0d, 0xb0, 0x73, 0xee, 0x3b, 0x4b, 0x6f, 0x30, 0x1e, 0x2f, 0x76, 0xa4, 0x2c, 0x7d, 0xf7, 0xe9,
	0x6a, 0xba, 0xfc, 0x97, 0xbc, 0xc0, 0x0e, 0xb3, 0xcf, 0x25, 0x92, 0xb1, 0x72, 0xaf, 0x0f, 0x1e,
	0x1a, 0x81, 0x9e, 0x14, 0xe8, 0x85, 0xfd, 0xe2, 0xc1, 0xbf, 0x36, 0xa1, 0x36, 0xec, 0x1b, 0x28,
	0xdb, 0xaf, 0xa1, 0x26, 0xff, 0x98, 0x67, 0xe9, 0x81, 0x2f, 0xf7, 0x67, 0xff, 0xee, 0xd6, 0x32,
	0x59, 0x8a, 0xd1, 0x05, 0x58, 0xfc, 0x83, 0xcf, 0x7e, 0x6a, 0xc6, 0xdd, 0x27, 0x99, 0x11, 0x72,
	0x7f, 0xf9, 0x17, 0xd8, 0x09, 0x8e, 0x92, 0x2c, 0x86, 0xed, 0x2c, 0x80, 0x4b, 0xef, 0x41, 0x3e,
	0xb8, 0x24, 0xb6, 0x07, 0x75, 0xf5, 0x7c, 0x80, 0x6d, 0x64, 0x6f, 0x50, 0xde, 0xf0, 0xbb, 0xdd,
	0xdc, 0x7f, 0x8d, 0x7a, 0x41, 0x61, 0xa9, 0xde, 0xdf, 0xc8, 0x3e, 0x14, 0xc9, 0x61, 0x91, 0xa0,
	0x17, 0xd8, 0xaf, 0xa0, 0x91, 0x3c, 0x25, 0x60, 0x5a, 0xae, 0xe6, 0x46, 0x74, 0xfe, 0x09, 0x49,
	0x0a, 0x97, 0xc5, 0x92, 0x96, 0x7b, 0x38, 0x92, 0x83, 0x13, 0x45, 0x2f, 0xb0, 0xaf, 0x48, 0x92,
	0x41, 0xe8, 0xc5, 0x0b, 0x49, 0xd4, 0x5f, 0xdc, 0xf7, 0xc1, 0x52, 0x6c, 0xfa, 0x2b, 0x78, 0x23,
	0x6b, 0xef, 0x9c, 0xd8, 0x48, 0xd0, 0x0b, 0xec, 0x17, 0x50, 0x93, 0x4f, 0x0f, 0xd8, 0x7a, 0xe6,
	0x2d, 0x06, 0x22, 0xb3, 0x6f, 0x33, 0xf4, 0x02, 0xfb, 0x13, 0x68, 0x67, 0x5f, 0x24, 0xb0, 0x47,
	0xb9, 0x2a, 0x41, 0x55, 0x9f, 0xbb, 0x9b, 0xf7, 0xa8, 0xe9, 0x5a, 0xe5, 0xe9, 0x51, 0xcb, 0x9d,
	0xe4, 0x73, 0xe2, 0x13, 0x45, 0x2f, 0xb0, 0xef, 0x08, 0x2e, 0xef, 0xfa, 0x9e, 0x2c, 0x2e, 0x0b,
	0x72, 0x4f, 0x3e, 0x96, 0x4d, 0xb5, 0x5f, 0x54, 0xdd, 0xe8, 0xc5, 0x47, 0xae, 0x5b, 0xf6, 0x0d,
	0xc8, 0xb2, 0xd5, 0xf6, 0x8b, 0xec, 0x37, 0xd0, 0x4c, 0x9f, 0x80, 0xb0, 0xcc, 0xdd, 0x44, 0xfe,
	0x55, 0xc8, 0x3d, 0x03, 0xa6, 0x3d, 0xe5, 0xab, 0x90, 0x5c, 0xcf, 0xdc, 0x43, 0x91, 0x7b, 0xe6,
	0xd9, 0x2f, 0xb2, 0x5f, 0x93, 0xa8, 0xf4, 0x50, 0x24, 0x27, 0x6a, 0xf6, 0xe9, 0xc8, 0xaa, 0x7e,
	0x72, 0x89, 0xf4, 0x74, 0x24, 0xd7, 0x2f, 0xfb, 0x98, 0x64, 0xd9, 0xc2, 0xfb, 0x45, 0x76, 0x40,
	0xfe, 0x70, 0x19, 0xfa, 0xf1, 0x22, 0x97, 0xe4, 0xdf, 0x9b, 0x2c, 0x19, 0x7b, 0xbf, 0xc8, 0xba,
	0xb0, 0x96, 0x7b, 0x80, 0xc2, 0x9e, 0x65, 0x7a, 0xde, 0x7b, 0x97, 0xb2, 0xd2, 0xee, 0xa9, 0x8a,
	0xe4, 0x73, 0x95, 0x9c, 0x8a, 0x72, 0x2f, 0x58, 0xee, 0xb9, 0x40, 0xba, 0x54, 0x7a, 0xd4, 0x92,
	0x5b, 0x6a, 0xf6, 0x99, 0xcb, 0x62, 0xa9, 0x48, 0xc5, 0x6e, 0x57, 0x35, 0xaa, 0xc5, 0x5f, 0xfe,
	0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x82, 0x04, 0xad, 0xc7, 0x4d, 0x27, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NLACoreApiClient is the client API for NLACoreApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NLACoreApiClient interface {
	SendNetlinkMessage(ctx context.Context, in *NetlinkMessage, opts ...grpc.CallOption) (*NetlinkMessageReply, error)
	MonNetlinkMessage(ctx context.Context, in *Node, opts ...grpc.CallOption) (NLACoreApi_MonNetlinkMessageClient, error)
}

type nLACoreApiClient struct {
	cc *grpc.ClientConn
}

func NewNLACoreApiClient(cc *grpc.ClientConn) NLACoreApiClient {
	return &nLACoreApiClient{cc}
}

func (c *nLACoreApiClient) SendNetlinkMessage(ctx context.Context, in *NetlinkMessage, opts ...grpc.CallOption) (*NetlinkMessageReply, error) {
	out := new(NetlinkMessageReply)
	err := c.cc.Invoke(ctx, "/nlaapi.NLACoreApi/SendNetlinkMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nLACoreApiClient) MonNetlinkMessage(ctx context.Context, in *Node, opts ...grpc.CallOption) (NLACoreApi_MonNetlinkMessageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NLACoreApi_serviceDesc.Streams[0], "/nlaapi.NLACoreApi/MonNetlinkMessage", opts...)
	if err != nil {
		return nil, err
	}
	x := &nLACoreApiMonNetlinkMessageClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NLACoreApi_MonNetlinkMessageClient interface {
	Recv() (*NetlinkMessageUnion, error)
	grpc.ClientStream
}

type nLACoreApiMonNetlinkMessageClient struct {
	grpc.ClientStream
}

func (x *nLACoreApiMonNetlinkMessageClient) Recv() (*NetlinkMessageUnion, error) {
	m := new(NetlinkMessageUnion)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NLACoreApiServer is the server API for NLACoreApi service.
type NLACoreApiServer interface {
	SendNetlinkMessage(context.Context, *NetlinkMessage) (*NetlinkMessageReply, error)
	MonNetlinkMessage(*Node, NLACoreApi_MonNetlinkMessageServer) error
}

func RegisterNLACoreApiServer(s *grpc.Server, srv NLACoreApiServer) {
	s.RegisterService(&_NLACoreApi_serviceDesc, srv)
}

func _NLACoreApi_SendNetlinkMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NetlinkMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NLACoreApiServer).SendNetlinkMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nlaapi.NLACoreApi/SendNetlinkMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NLACoreApiServer).SendNetlinkMessage(ctx, req.(*NetlinkMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _NLACoreApi_MonNetlinkMessage_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Node)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NLACoreApiServer).MonNetlinkMessage(m, &nLACoreApiMonNetlinkMessageServer{stream})
}

type NLACoreApi_MonNetlinkMessageServer interface {
	Send(*NetlinkMessageUnion) error
	grpc.ServerStream
}

type nLACoreApiMonNetlinkMessageServer struct {
	grpc.ServerStream
}

func (x *nLACoreApiMonNetlinkMessageServer) Send(m *NetlinkMessageUnion) error {
	return x.ServerStream.SendMsg(m)
}

var _NLACoreApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nlaapi.NLACoreApi",
	HandlerType: (*NLACoreApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendNetlinkMessage",
			Handler:    _NLACoreApi_SendNetlinkMessage_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "MonNetlinkMessage",
			Handler:       _NLACoreApi_MonNetlinkMessage_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "nlaapi.proto",
}

// NLAApiClient is the client API for NLAApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NLAApiClient interface {
	ModVpn(ctx context.Context, in *ModVpnRequest, opts ...grpc.CallOption) (*ModVpnReply, error)
	ModNetlink(ctx context.Context, in *NetlinkMessageUnion, opts ...grpc.CallOption) (*ModNetlinkReply, error)
	MonNetlink(ctx context.Context, in *MonNetlinkRequest, opts ...grpc.CallOption) (NLAApi_MonNetlinkClient, error)
	GetLink(ctx context.Context, in *LinkKey, opts ...grpc.CallOption) (*Link, error)
	GetAddr(ctx context.Context, in *AddrKey, opts ...grpc.CallOption) (*Addr, error)
	GetNeigh(ctx context.Context, in *NeighKey, opts ...grpc.CallOption) (*Neigh, error)
	GetRoute(ctx context.Context, in *RouteKey, opts ...grpc.CallOption) (*Route, error)
	GetMpls(ctx context.Context, in *MplsKey, opts ...grpc.CallOption) (*Route, error)
	GetNode(ctx context.Context, in *NodeKey, opts ...grpc.CallOption) (*Node, error)
	GetVpn(ctx context.Context, in *VpnKey, opts ...grpc.CallOption) (*Vpn, error)
	GetEncapInfo(ctx context.Context, in *EncapInfoKey, opts ...grpc.CallOption) (*EncapInfo, error)
	GetIptun(ctx context.Context, in *IptunKey, opts ...grpc.CallOption) (*Iptun, error)
	GetLinks(ctx context.Context, in *GetLinksRequest, opts ...grpc.CallOption) (NLAApi_GetLinksClient, error)
	GetAddrs(ctx context.Context, in *GetAddrsRequest, opts ...grpc.CallOption) (NLAApi_GetAddrsClient, error)
	GetNeighs(ctx context.Context, in *GetNeighsRequest, opts ...grpc.CallOption) (NLAApi_GetNeighsClient, error)
	GetRoutes(ctx context.Context, in *GetRoutesRequest, opts ...grpc.CallOption) (NLAApi_GetRoutesClient, error)
	GetMplss(ctx context.Context, in *GetMplssRequest, opts ...grpc.CallOption) (NLAApi_GetMplssClient, error)
	GetNodes(ctx context.Context, in *GetNodesRequest, opts ...grpc.CallOption) (NLAApi_GetNodesClient, error)
	GetVpns(ctx context.Context, in *GetVpnsRequest, opts ...grpc.CallOption) (NLAApi_GetVpnsClient, error)
	GetEncapInfos(ctx context.Context, in *GetEncapInfosRequest, opts ...grpc.CallOption) (NLAApi_GetEncapInfosClient, error)
	GetIptuns(ctx context.Context, in *GetIptunsRequest, opts ...grpc.CallOption) (NLAApi_GetIptunsClient, error)
	GetStats(ctx context.Context, in *GetStatsRequest, opts ...grpc.CallOption) (NLAApi_GetStatsClient, error)
}

type nLAApiClient struct {
	cc *grpc.ClientConn
}

func NewNLAApiClient(cc *grpc.ClientConn) NLAApiClient {
	return &nLAApiClient{cc}
}

func (c *nLAApiClient) ModVpn(ctx context.Context, in *ModVpnRequest, opts ...grpc.CallOption) (*ModVpnReply, error) {
	out := new(ModVpnReply)
	err := c.cc.Invoke(ctx, "/nlaapi.NLAApi/ModVpn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nLAApiClient) ModNetlink(ctx context.Context, in *NetlinkMessageUnion, opts ...grpc.CallOption) (*ModNetlinkReply, error) {
	out := new(ModNetlinkReply)
	err := c.cc.Invoke(ctx, "/nlaapi.NLAApi/ModNetlink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nLAApiClient) MonNetlink(ctx context.Context, in *MonNetlinkRequest, opts ...grpc.CallOption) (NLAApi_MonNetlinkClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NLAApi_serviceDesc.Streams[0], "/nlaapi.NLAApi/MonNetlink", opts...)
	if err != nil {
		return nil, err
	}
	x := &nLAApiMonNetlinkClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NLAApi_MonNetlinkClient interface {
	Recv() (*NetlinkMessageUnion, error)
	grpc.ClientStream
}

type nLAApiMonNetlinkClient struct {
	grpc.ClientStream
}

func (x *nLAApiMonNetlinkClient) Recv() (*NetlinkMessageUnion, error) {
	m := new(NetlinkMessageUnion)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nLAApiClient) GetLink(ctx context.Context, in *LinkKey, opts ...grpc.CallOption) (*Link, error) {
	out := new(Link)
	err := c.cc.Invoke(ctx, "/nlaapi.NLAApi/GetLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nLAApiClient) GetAddr(ctx context.Context, in *AddrKey, opts ...grpc.CallOption) (*Addr, error) {
	out := new(Addr)
	err := c.cc.Invoke(ctx, "/nlaapi.NLAApi/GetAddr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nLAApiClient) GetNeigh(ctx context.Context, in *NeighKey, opts ...grpc.CallOption) (*Neigh, error) {
	out := new(Neigh)
	err := c.cc.Invoke(ctx, "/nlaapi.NLAApi/GetNeigh", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nLAApiClient) GetRoute(ctx context.Context, in *RouteKey, opts ...grpc.CallOption) (*Route, error) {
	out := new(Route)
	err := c.cc.Invoke(ctx, "/nlaapi.NLAApi/GetRoute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nLAApiClient) GetMpls(ctx context.Context, in *MplsKey, opts ...grpc.CallOption) (*Route, error) {
	out := new(Route)
	err := c.cc.Invoke(ctx, "/nlaapi.NLAApi/GetMpls", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nLAApiClient) GetNode(ctx context.Context, in *NodeKey, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := c.cc.Invoke(ctx, "/nlaapi.NLAApi/GetNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nLAApiClient) GetVpn(ctx context.Context, in *VpnKey, opts ...grpc.CallOption) (*Vpn, error) {
	out := new(Vpn)
	err := c.cc.Invoke(ctx, "/nlaapi.NLAApi/GetVpn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nLAApiClient) GetEncapInfo(ctx context.Context, in *EncapInfoKey, opts ...grpc.CallOption) (*EncapInfo, error) {
	out := new(EncapInfo)
	err := c.cc.Invoke(ctx, "/nlaapi.NLAApi/GetEncapInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nLAApiClient) GetIptun(ctx context.Context, in *IptunKey, opts ...grpc.CallOption) (*Iptun, error) {
	out := new(Iptun)
	err := c.cc.Invoke(ctx, "/nlaapi.NLAApi/GetIptun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nLAApiClient) GetLinks(ctx context.Context, in *GetLinksRequest, opts ...grpc.CallOption) (NLAApi_GetLinksClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NLAApi_serviceDesc.Streams[1], "/nlaapi.NLAApi/GetLinks", opts...)
	if err != nil {
		return nil, err
	}
	x := &nLAApiGetLinksClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NLAApi_GetLinksClient interface {
	Recv() (*Link, error)
	grpc.ClientStream
}

type nLAApiGetLinksClient struct {
	grpc.ClientStream
}

func (x *nLAApiGetLinksClient) Recv() (*Link, error) {
	m := new(Link)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nLAApiClient) GetAddrs(ctx context.Context, in *GetAddrsRequest, opts ...grpc.CallOption) (NLAApi_GetAddrsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NLAApi_serviceDesc.Streams[2], "/nlaapi.NLAApi/GetAddrs", opts...)
	if err != nil {
		return nil, err
	}
	x := &nLAApiGetAddrsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NLAApi_GetAddrsClient interface {
	Recv() (*Addr, error)
	grpc.ClientStream
}

type nLAApiGetAddrsClient struct {
	grpc.ClientStream
}

func (x *nLAApiGetAddrsClient) Recv() (*Addr, error) {
	m := new(Addr)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nLAApiClient) GetNeighs(ctx context.Context, in *GetNeighsRequest, opts ...grpc.CallOption) (NLAApi_GetNeighsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NLAApi_serviceDesc.Streams[3], "/nlaapi.NLAApi/GetNeighs", opts...)
	if err != nil {
		return nil, err
	}
	x := &nLAApiGetNeighsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NLAApi_GetNeighsClient interface {
	Recv() (*Neigh, error)
	grpc.ClientStream
}

type nLAApiGetNeighsClient struct {
	grpc.ClientStream
}

func (x *nLAApiGetNeighsClient) Recv() (*Neigh, error) {
	m := new(Neigh)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nLAApiClient) GetRoutes(ctx context.Context, in *GetRoutesRequest, opts ...grpc.CallOption) (NLAApi_GetRoutesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NLAApi_serviceDesc.Streams[4], "/nlaapi.NLAApi/GetRoutes", opts...)
	if err != nil {
		return nil, err
	}
	x := &nLAApiGetRoutesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NLAApi_GetRoutesClient interface {
	Recv() (*Route, error)
	grpc.ClientStream
}

type nLAApiGetRoutesClient struct {
	grpc.ClientStream
}

func (x *nLAApiGetRoutesClient) Recv() (*Route, error) {
	m := new(Route)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nLAApiClient) GetMplss(ctx context.Context, in *GetMplssRequest, opts ...grpc.CallOption) (NLAApi_GetMplssClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NLAApi_serviceDesc.Streams[5], "/nlaapi.NLAApi/GetMplss", opts...)
	if err != nil {
		return nil, err
	}
	x := &nLAApiGetMplssClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NLAApi_GetMplssClient interface {
	Recv() (*Route, error)
	grpc.ClientStream
}

type nLAApiGetMplssClient struct {
	grpc.ClientStream
}

func (x *nLAApiGetMplssClient) Recv() (*Route, error) {
	m := new(Route)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nLAApiClient) GetNodes(ctx context.Context, in *GetNodesRequest, opts ...grpc.CallOption) (NLAApi_GetNodesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NLAApi_serviceDesc.Streams[6], "/nlaapi.NLAApi/GetNodes", opts...)
	if err != nil {
		return nil, err
	}
	x := &nLAApiGetNodesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NLAApi_GetNodesClient interface {
	Recv() (*Node, error)
	grpc.ClientStream
}

type nLAApiGetNodesClient struct {
	grpc.ClientStream
}

func (x *nLAApiGetNodesClient) Recv() (*Node, error) {
	m := new(Node)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nLAApiClient) GetVpns(ctx context.Context, in *GetVpnsRequest, opts ...grpc.CallOption) (NLAApi_GetVpnsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NLAApi_serviceDesc.Streams[7], "/nlaapi.NLAApi/GetVpns", opts...)
	if err != nil {
		return nil, err
	}
	x := &nLAApiGetVpnsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NLAApi_GetVpnsClient interface {
	Recv() (*Vpn, error)
	grpc.ClientStream
}

type nLAApiGetVpnsClient struct {
	grpc.ClientStream
}

func (x *nLAApiGetVpnsClient) Recv() (*Vpn, error) {
	m := new(Vpn)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nLAApiClient) GetEncapInfos(ctx context.Context, in *GetEncapInfosRequest, opts ...grpc.CallOption) (NLAApi_GetEncapInfosClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NLAApi_serviceDesc.Streams[8], "/nlaapi.NLAApi/GetEncapInfos", opts...)
	if err != nil {
		return nil, err
	}
	x := &nLAApiGetEncapInfosClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NLAApi_GetEncapInfosClient interface {
	Recv() (*EncapInfo, error)
	grpc.ClientStream
}

type nLAApiGetEncapInfosClient struct {
	grpc.ClientStream
}

func (x *nLAApiGetEncapInfosClient) Recv() (*EncapInfo, error) {
	m := new(EncapInfo)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nLAApiClient) GetIptuns(ctx context.Context, in *GetIptunsRequest, opts ...grpc.CallOption) (NLAApi_GetIptunsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NLAApi_serviceDesc.Streams[9], "/nlaapi.NLAApi/GetIptuns", opts...)
	if err != nil {
		return nil, err
	}
	x := &nLAApiGetIptunsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NLAApi_GetIptunsClient interface {
	Recv() (*Iptun, error)
	grpc.ClientStream
}

type nLAApiGetIptunsClient struct {
	grpc.ClientStream
}

func (x *nLAApiGetIptunsClient) Recv() (*Iptun, error) {
	m := new(Iptun)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nLAApiClient) GetStats(ctx context.Context, in *GetStatsRequest, opts ...grpc.CallOption) (NLAApi_GetStatsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NLAApi_serviceDesc.Streams[10], "/nlaapi.NLAApi/GetStats", opts...)
	if err != nil {
		return nil, err
	}
	x := &nLAApiGetStatsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NLAApi_GetStatsClient interface {
	Recv() (*Stat, error)
	grpc.ClientStream
}

type nLAApiGetStatsClient struct {
	grpc.ClientStream
}

func (x *nLAApiGetStatsClient) Recv() (*Stat, error) {
	m := new(Stat)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NLAApiServer is the server API for NLAApi service.
type NLAApiServer interface {
	ModVpn(context.Context, *ModVpnRequest) (*ModVpnReply, error)
	ModNetlink(context.Context, *NetlinkMessageUnion) (*ModNetlinkReply, error)
	MonNetlink(*MonNetlinkRequest, NLAApi_MonNetlinkServer) error
	GetLink(context.Context, *LinkKey) (*Link, error)
	GetAddr(context.Context, *AddrKey) (*Addr, error)
	GetNeigh(context.Context, *NeighKey) (*Neigh, error)
	GetRoute(context.Context, *RouteKey) (*Route, error)
	GetMpls(context.Context, *MplsKey) (*Route, error)
	GetNode(context.Context, *NodeKey) (*Node, error)
	GetVpn(context.Context, *VpnKey) (*Vpn, error)
	GetEncapInfo(context.Context, *EncapInfoKey) (*EncapInfo, error)
	GetIptun(context.Context, *IptunKey) (*Iptun, error)
	GetLinks(*GetLinksRequest, NLAApi_GetLinksServer) error
	GetAddrs(*GetAddrsRequest, NLAApi_GetAddrsServer) error
	GetNeighs(*GetNeighsRequest, NLAApi_GetNeighsServer) error
	GetRoutes(*GetRoutesRequest, NLAApi_GetRoutesServer) error
	GetMplss(*GetMplssRequest, NLAApi_GetMplssServer) error
	GetNodes(*GetNodesRequest, NLAApi_GetNodesServer) error
	GetVpns(*GetVpnsRequest, NLAApi_GetVpnsServer) error
	GetEncapInfos(*GetEncapInfosRequest, NLAApi_GetEncapInfosServer) error
	GetIptuns(*GetIptunsRequest, NLAApi_GetIptunsServer) error
	GetStats(*GetStatsRequest, NLAApi_GetStatsServer) error
}

func RegisterNLAApiServer(s *grpc.Server, srv NLAApiServer) {
	s.RegisterService(&_NLAApi_serviceDesc, srv)
}

func _NLAApi_ModVpn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModVpnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NLAApiServer).ModVpn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nlaapi.NLAApi/ModVpn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NLAApiServer).ModVpn(ctx, req.(*ModVpnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NLAApi_ModNetlink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NetlinkMessageUnion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NLAApiServer).ModNetlink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nlaapi.NLAApi/ModNetlink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NLAApiServer).ModNetlink(ctx, req.(*NetlinkMessageUnion))
	}
	return interceptor(ctx, in, info, handler)
}

func _NLAApi_MonNetlink_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MonNetlinkRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NLAApiServer).MonNetlink(m, &nLAApiMonNetlinkServer{stream})
}

type NLAApi_MonNetlinkServer interface {
	Send(*NetlinkMessageUnion) error
	grpc.ServerStream
}

type nLAApiMonNetlinkServer struct {
	grpc.ServerStream
}

func (x *nLAApiMonNetlinkServer) Send(m *NetlinkMessageUnion) error {
	return x.ServerStream.SendMsg(m)
}

func _NLAApi_GetLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LinkKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NLAApiServer).GetLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nlaapi.NLAApi/GetLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NLAApiServer).GetLink(ctx, req.(*LinkKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _NLAApi_GetAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddrKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NLAApiServer).GetAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nlaapi.NLAApi/GetAddr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NLAApiServer).GetAddr(ctx, req.(*AddrKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _NLAApi_GetNeigh_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NeighKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NLAApiServer).GetNeigh(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nlaapi.NLAApi/GetNeigh",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NLAApiServer).GetNeigh(ctx, req.(*NeighKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _NLAApi_GetRoute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RouteKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NLAApiServer).GetRoute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nlaapi.NLAApi/GetRoute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NLAApiServer).GetRoute(ctx, req.(*RouteKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _NLAApi_GetMpls_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MplsKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NLAApiServer).GetMpls(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nlaapi.NLAApi/GetMpls",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NLAApiServer).GetMpls(ctx, req.(*MplsKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _NLAApi_GetNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NLAApiServer).GetNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nlaapi.NLAApi/GetNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NLAApiServer).GetNode(ctx, req.(*NodeKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _NLAApi_GetVpn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VpnKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NLAApiServer).GetVpn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nlaapi.NLAApi/GetVpn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NLAApiServer).GetVpn(ctx, req.(*VpnKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _NLAApi_GetEncapInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EncapInfoKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NLAApiServer).GetEncapInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nlaapi.NLAApi/GetEncapInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NLAApiServer).GetEncapInfo(ctx, req.(*EncapInfoKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _NLAApi_GetIptun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IptunKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NLAApiServer).GetIptun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nlaapi.NLAApi/GetIptun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NLAApiServer).GetIptun(ctx, req.(*IptunKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _NLAApi_GetLinks_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetLinksRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NLAApiServer).GetLinks(m, &nLAApiGetLinksServer{stream})
}

type NLAApi_GetLinksServer interface {
	Send(*Link) error
	grpc.ServerStream
}

type nLAApiGetLinksServer struct {
	grpc.ServerStream
}

func (x *nLAApiGetLinksServer) Send(m *Link) error {
	return x.ServerStream.SendMsg(m)
}

func _NLAApi_GetAddrs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetAddrsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NLAApiServer).GetAddrs(m, &nLAApiGetAddrsServer{stream})
}

type NLAApi_GetAddrsServer interface {
	Send(*Addr) error
	grpc.ServerStream
}

type nLAApiGetAddrsServer struct {
	grpc.ServerStream
}

func (x *nLAApiGetAddrsServer) Send(m *Addr) error {
	return x.ServerStream.SendMsg(m)
}

func _NLAApi_GetNeighs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetNeighsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NLAApiServer).GetNeighs(m, &nLAApiGetNeighsServer{stream})
}

type NLAApi_GetNeighsServer interface {
	Send(*Neigh) error
	grpc.ServerStream
}

type nLAApiGetNeighsServer struct {
	grpc.ServerStream
}

func (x *nLAApiGetNeighsServer) Send(m *Neigh) error {
	return x.ServerStream.SendMsg(m)
}

func _NLAApi_GetRoutes_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetRoutesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NLAApiServer).GetRoutes(m, &nLAApiGetRoutesServer{stream})
}

type NLAApi_GetRoutesServer interface {
	Send(*Route) error
	grpc.ServerStream
}

type nLAApiGetRoutesServer struct {
	grpc.ServerStream
}

func (x *nLAApiGetRoutesServer) Send(m *Route) error {
	return x.ServerStream.SendMsg(m)
}

func _NLAApi_GetMplss_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetMplssRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NLAApiServer).GetMplss(m, &nLAApiGetMplssServer{stream})
}

type NLAApi_GetMplssServer interface {
	Send(*Route) error
	grpc.ServerStream
}

type nLAApiGetMplssServer struct {
	grpc.ServerStream
}

func (x *nLAApiGetMplssServer) Send(m *Route) error {
	return x.ServerStream.SendMsg(m)
}

func _NLAApi_GetNodes_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetNodesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NLAApiServer).GetNodes(m, &nLAApiGetNodesServer{stream})
}

type NLAApi_GetNodesServer interface {
	Send(*Node) error
	grpc.ServerStream
}

type nLAApiGetNodesServer struct {
	grpc.ServerStream
}

func (x *nLAApiGetNodesServer) Send(m *Node) error {
	return x.ServerStream.SendMsg(m)
}

func _NLAApi_GetVpns_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetVpnsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NLAApiServer).GetVpns(m, &nLAApiGetVpnsServer{stream})
}

type NLAApi_GetVpnsServer interface {
	Send(*Vpn) error
	grpc.ServerStream
}

type nLAApiGetVpnsServer struct {
	grpc.ServerStream
}

func (x *nLAApiGetVpnsServer) Send(m *Vpn) error {
	return x.ServerStream.SendMsg(m)
}

func _NLAApi_GetEncapInfos_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetEncapInfosRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NLAApiServer).GetEncapInfos(m, &nLAApiGetEncapInfosServer{stream})
}

type NLAApi_GetEncapInfosServer interface {
	Send(*EncapInfo) error
	grpc.ServerStream
}

type nLAApiGetEncapInfosServer struct {
	grpc.ServerStream
}

func (x *nLAApiGetEncapInfosServer) Send(m *EncapInfo) error {
	return x.ServerStream.SendMsg(m)
}

func _NLAApi_GetIptuns_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetIptunsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NLAApiServer).GetIptuns(m, &nLAApiGetIptunsServer{stream})
}

type NLAApi_GetIptunsServer interface {
	Send(*Iptun) error
	grpc.ServerStream
}

type nLAApiGetIptunsServer struct {
	grpc.ServerStream
}

func (x *nLAApiGetIptunsServer) Send(m *Iptun) error {
	return x.ServerStream.SendMsg(m)
}

func _NLAApi_GetStats_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetStatsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NLAApiServer).GetStats(m, &nLAApiGetStatsServer{stream})
}

type NLAApi_GetStatsServer interface {
	Send(*Stat) error
	grpc.ServerStream
}

type nLAApiGetStatsServer struct {
	grpc.ServerStream
}

func (x *nLAApiGetStatsServer) Send(m *Stat) error {
	return x.ServerStream.SendMsg(m)
}

var _NLAApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nlaapi.NLAApi",
	HandlerType: (*NLAApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ModVpn",
			Handler:    _NLAApi_ModVpn_Handler,
		},
		{
			MethodName: "ModNetlink",
			Handler:    _NLAApi_ModNetlink_Handler,
		},
		{
			MethodName: "GetLink",
			Handler:    _NLAApi_GetLink_Handler,
		},
		{
			MethodName: "GetAddr",
			Handler:    _NLAApi_GetAddr_Handler,
		},
		{
			MethodName: "GetNeigh",
			Handler:    _NLAApi_GetNeigh_Handler,
		},
		{
			MethodName: "GetRoute",
			Handler:    _NLAApi_GetRoute_Handler,
		},
		{
			MethodName: "GetMpls",
			Handler:    _NLAApi_GetMpls_Handler,
		},
		{
			MethodName: "GetNode",
			Handler:    _NLAApi_GetNode_Handler,
		},
		{
			MethodName: "GetVpn",
			Handler:    _NLAApi_GetVpn_Handler,
		},
		{
			MethodName: "GetEncapInfo",
			Handler:    _NLAApi_GetEncapInfo_Handler,
		},
		{
			MethodName: "GetIptun",
			Handler:    _NLAApi_GetIptun_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "MonNetlink",
			Handler:       _NLAApi_MonNetlink_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetLinks",
			Handler:       _NLAApi_GetLinks_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetAddrs",
			Handler:       _NLAApi_GetAddrs_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetNeighs",
			Handler:       _NLAApi_GetNeighs_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetRoutes",
			Handler:       _NLAApi_GetRoutes_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetMplss",
			Handler:       _NLAApi_GetMplss_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetNodes",
			Handler:       _NLAApi_GetNodes_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetVpns",
			Handler:       _NLAApi_GetVpns_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetEncapInfos",
			Handler:       _NLAApi_GetEncapInfos_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetIptuns",
			Handler:       _NLAApi_GetIptuns_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetStats",
			Handler:       _NLAApi_GetStats_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "nlaapi.proto",
}
